[{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://bsvars.github.io/bsvars/dev/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://bsvars.github.io/bsvars/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tomasz Woźniak. Author, maintainer.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Woźniak T (2023). bsvars: Bayesian Estimation Structural Vector Autoregressive Models. R package version 2.0.0, https://cran.r-project.org/package=bsvars.","code":"@Manual{,   title = {bsvars: Bayesian Estimation of Structural Vector Autoregressive Models},   author = {Tomasz Wo\\'zniak},   year = {2023},   note = {R package version 2.0.0},   url = {https://cran.r-project.org/package=bsvars}, }"},{"path":"https://bsvars.github.io/bsvars/dev/index.html","id":"bsvars","dir":"","previous_headings":"","what":"Bayesian Estimation of Structural Vector Autoregressive Models","title":"Bayesian Estimation of Structural Vector Autoregressive Models","text":"R package Bayesian Estimation Structural Vector Autoregressive Models package provides efficient algorithms Bayesian estimation Structural Vector Autoregressive (SVAR) models via Markov chain Monte Carlo methods. wide range SVAR models considered, including homo- heteroskedastic specifications non-normal structural shocks. models include three-level equation-specific local-global hierarchical prior distribution estimated level shrinkage autoregressive structural parameters. Additionally, package facilitates predictive structural analyses variety tools methods. heteroskedastic SVAR model setup similar Woźniak & Droumaguet (2015) Lütkepohl & Woźniak (2020). sampler structural matrix follows Waggoner & Zha (2003), whereas autoregressive parameters follows Chan, Koop, Yu (2022). specification Markov switching heteroskedasticity inspired Song & Woźniak (2021), Stochastic Volatility model Kastner & Frühwirth-Schnatter (2014).","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/index.html","id":"structural-vector-autoregressions","dir":"","previous_headings":"Features","what":"Structural Vector Autoregressions","title":"Bayesian Estimation of Structural Vector Autoregressive Models","text":"models bsvars package consist Vector Autoregressive equation, autoregressive parameters error terms E, structural equation structural shocks U models identified via exclusion restrictions, heteroskedasticity, non-normality Autoregressive parameters structural matrix B feature three-level local-global hierarchical prior estimates equation-specific level shrinkage equal one time-varying following non-centred Stochastic Volatility time-varying following centred Stochastic Volatility time-varying stationary Markov Switching time-varying sparse Markov Switching number volatility regimes estimated finite mixture normal components component-specific variances sparse mixture normal components component-specific variances number states estimated","code":"Y = AX + E           (VAR equation)    BE = U                (structural equation)"},{"path":"https://bsvars.github.io/bsvars/dev/index.html","id":"simple-workflows","dir":"","previous_headings":"Features","what":"Simple workflows","title":"Bayesian Estimation of Structural Vector Autoregressive Models","text":"Specify models using specify_bsvar_*() functions, instance, specify_bsvar() Estimate models using estimate() method Predict future using predict() method Provide structural analyses using impulse responses, forecast error variance decompositions, historical decompositions, structural shocks using functions compute_impulse_responses(), compute_variance_decompositions(), compute_historical_decompositions(), compute_structural_shocks() respectively Analyse fitted values, time-varying volatility, volatility regimes using functions compute_fitted_values(), compute_conditional_sd(), compute_regime_probabilities() respectively","code":""},{"path":"https://bsvars.github.io/bsvars/dev/index.html","id":"fast-and-efficient-computations","dir":"","previous_headings":"Features","what":"Fast and efficient computations","title":"Bayesian Estimation of Structural Vector Autoregressive Models","text":"implementation frontier econometric techniques, compiled code written cpp combines best two worlds: ease data analysis R fast cpp algorithms algorithms used fast. still, Bayesian estimation might take little time. Look beautiful progress bar meantime:","code":"**************************************************| bsvars: Bayesian Structural Vector Autoregressions| **************************************************|  Gibbs sampler for the SVAR-SV model              |    Non-centred SV model is estimated              | **************************************************|  Progress of the MCMC simulation for 1000 draws     Every 10th draw is saved via MCMC thinning  Press Esc to interrupt the computations **************************************************| 0%   10   20   30   40   50   60   70   80   90   100% [----|----|----|----|----|----|----|----|----|----| *************************************"},{"path":"https://bsvars.github.io/bsvars/dev/index.html","id":"start-your-bayesian-analysis-of-data","dir":"","previous_headings":"","what":"Start your Bayesian analysis of data","title":"Bayesian Estimation of Structural Vector Autoregressive Models","text":"beginnings easy ABC: Starting bsvars version 2.0.0 simplified workflow using |> pipe possible: Now, ’re ready analyse model!","code":"library(bsvars)                       # upload the package data(us_fiscal_lsuw)                  # upload data spec      = specify_bsvar_sv$new(us_fiscal_lsuw, p = 4)     # specify the model burn_in   = estimate(spec, 1000)      # run the burn-in out       = estimate(burn_in, 50000)  # estimate the model library(bsvars)                       # upload the package data(us_fiscal_lsuw)                  # upload data us_fiscal_lsuw |>   specify_bsvar_sv$new(p = 4) |>      # specify the model   estimate(S = 1000) |>               # run the burn-in   estimate(S = 50000) -> out          # estimate the model"},{"path":"https://bsvars.github.io/bsvars/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Estimation of Structural Vector Autoregressive Models","text":"Just open R type: developer’s version package newest features can installed typing:","code":"install.packages(\"bsvars\") devtools::install_git(\"https://github.com/bsvars/bsvars.git\")"},{"path":"https://bsvars.github.io/bsvars/dev/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Bayesian Estimation of Structural Vector Autoregressive Models","text":"package intensive development. help welcome! Please, look roadmap, discuss package features applications, report bug. Thank !","code":""},{"path":"https://bsvars.github.io/bsvars/dev/index.html","id":"about-the-author","dir":"","previous_headings":"","what":"About the author","title":"Bayesian Estimation of Structural Vector Autoregressive Models","text":"Tomasz Bayesian econometrician Senior Lecturer University Melbourne. develops methodology empirical macroeconomic analyses programs R cpp using Rcpp.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/bsvars-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Estimation of Structural Vector Autoregressive Models — bsvars-package","title":"Bayesian Estimation of Structural Vector Autoregressive Models — bsvars-package","text":"Efficient fast algorithms Bayesian estimation  Structural Vector Autoregressive (SVAR) models via Markov chain Monte Carlo methods.  wide range SVAR models considered, including homo- heteroskedastic specifications  non-normal structural shocks. heteroskedastic SVAR model setup similar  Woźniak & Droumaguet (2015) <doi:10.13140/RG.2.2.19492.55687> Lütkepohl & Woźniak (2020) <doi:10.1016/j.jedc.2020.103862>. sampler structural matrix follows Waggoner & Zha (2003) ,doi:10.1016/S0165-1889(02)00168-9>,  whereas autoregressive parameters follows Chan, Koop, Yu (2022) <https://www.joshuachan.org/papers/OISV.pdf>.  specification Markov switching heteroskedasticity inspired Song & Woźniak (2021) <doi:10.1093/acrefore/9780190625979.013.174>, Stochastic Volatility model Kastner & Frühwirth-Schnatter (2014) <doi:10.1016/j.csda.2013.01.002>.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/bsvars-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian Estimation of Structural Vector Autoregressive Models — bsvars-package","text":"SVAR models package specified two equations, including  reduced form equation: $$Y = AX + E$$ \\(Y\\) NxT matrix dependent variables,  \\(X\\) KxT matrix explanatory variables,  \\(E\\) NxT matrix reduced form error terms,  \\(\\) NxK matrix autoregressive slope coefficients  parameters deterministic terms \\(X\\). structural equation given : $$= U$$ \\(U\\) NxT matrix structural form error terms, \\(B\\) NxN matrix contemporaneous relationships. Finally, models share following assumptions regarding structural shocks U, namely, joint conditional normality given past observations collected matrix X, temporal contemporaneous independence. latter implies  zero correlations autocorrelations. various SVAR models estimated differ specification structural shocks variances. different models include: homoskedastic model unit variances heteroskedastic model stationary Markov switching variances heteroskedastic model non-centred Stochastic Volatility process variances heteroskedastic model centred Stochastic Volatility process variances non-normal model finite mixture normal components component-specific variances heteroskedastic model sparse Markov switching variances number heteroskedastic components estimated non-normal model sparse mixture normal components component-specific variances number heteroskedastic components estimated","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/bsvars-package.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Bayesian Estimation of Structural Vector Autoregressive Models — bsvars-package","text":"package currently active development. comments, suggestions requests warmly welcome!","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/bsvars-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian Estimation of Structural Vector Autoregressive Models — bsvars-package","text":"Woźniak, T., Droumaguet, M., (2022) Bayesian Assessment Identifying Restrictions Heteroskedastic Structural VARs.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/bsvars-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian Estimation of Structural Vector Autoregressive Models — bsvars-package","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/bsvars-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian Estimation of Structural Vector Autoregressive Models — bsvars-package","text":"","code":"# upload data data(us_fiscal_lsuw)    # upload dependent variables data(us_fiscal_ex)      # upload exogenous variables  # specify the model and set seed specification  = specify_bsvar_sv$new(us_fiscal_lsuw, p = 2, exogenous = us_fiscal_ex) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 10, thin = 2) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 2nd draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # compute impulse responses 2 years ahead irf           = compute_impulse_responses(posterior, horizon = 8)  # compute forecast error variance decomposition 2 years ahead fevd           = compute_variance_decompositions(posterior, horizon = 8)  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar_sv$new(p = 2, exogenous = us_fiscal_ex) |>   estimate(S = 10) |>    estimate(S = 20) |>    compute_variance_decompositions(horizon = 8) -> fevds #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 20 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_conditional_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes posterior draws of structural shock conditional standard deviations — compute_conditional_sd","title":"Computes posterior draws of structural shock conditional standard deviations — compute_conditional_sd","text":"draws posterior estimation model transformed draw posterior distribution structural shock conditional standard deviations.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_conditional_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes posterior draws of structural shock conditional standard deviations — compute_conditional_sd","text":"","code":"compute_conditional_sd(posterior)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_conditional_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes posterior draws of structural shock conditional standard deviations — compute_conditional_sd","text":"posterior posterior estimation outcome - object either classes:  PosteriorBSVAR, PosteriorBSVARMSH, PosteriorBSVARMIX, PosteriorBSVARSV obtained running estimate function. interpretation depends normalisation shocks using function normalise_posterior(). Verify default settings appropriate.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_conditional_sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes posterior draws of structural shock conditional standard deviations — compute_conditional_sd","text":"object class PosteriorSigma, , NxTxS array attribute PosteriorSigma  containing S draws structural shock conditional standard deviations.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_conditional_sd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes posterior draws of structural shock conditional standard deviations — compute_conditional_sd","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_conditional_sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes posterior draws of structural shock conditional standard deviations — compute_conditional_sd","text":"","code":"# upload data data(us_fiscal_lsuw)  # specify the model and set seed set.seed(123) specification  = specify_bsvar$new(us_fiscal_lsuw, p = 1) #> The identification is set to the default option of lower-triangular structural matrix.  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in$get_last_draw(), 50) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # compute structural shocks' conditional standard deviations sigma          = compute_conditional_sd(posterior) #> The model is homoskedastic. Returning an NxT matrix of conditional sd all equal to 1.  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar$new(p = 1) |>   estimate(S = 50) |>    estimate(S = 100) |>    compute_conditional_sd() -> csd #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 100 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> The model is homoskedastic. Returning an NxT matrix of conditional sd all equal to 1."},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_fitted_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes posterior draws of dependent variables' fitted values — compute_fitted_values","title":"Computes posterior draws of dependent variables' fitted values — compute_fitted_values","text":"draws posterior estimation model transformed draw posterior distribution fitted values.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_fitted_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes posterior draws of dependent variables' fitted values — compute_fitted_values","text":"","code":"compute_fitted_values(posterior)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_fitted_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes posterior draws of dependent variables' fitted values — compute_fitted_values","text":"posterior posterior estimation outcome - object either classes:  PosteriorBSVAR, PosteriorBSVARMSH, PosteriorBSVARMIX, PosteriorBSVARSV obtained running estimate function.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_fitted_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes posterior draws of dependent variables' fitted values — compute_fitted_values","text":"object class PosteriorFitted, , NxTxS array attribute PosteriorFitted  containing S draws fitted values.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_fitted_values.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes posterior draws of dependent variables' fitted values — compute_fitted_values","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_fitted_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes posterior draws of dependent variables' fitted values — compute_fitted_values","text":"","code":"# upload data data(us_fiscal_lsuw)  # specify the model and set seed set.seed(123) specification  = specify_bsvar$new(us_fiscal_lsuw, p = 1) #> The identification is set to the default option of lower-triangular structural matrix.  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 50) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # compute dependent variables' fitted values fitted         = compute_fitted_values(posterior)  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar$new(p = 1) |>   estimate(S = 50) |>    estimate(S = 100) |>    compute_fitted_values() -> fitted #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 100 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_historical_decompositions.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes posterior draws of historical decompositions — compute_historical_decompositions","title":"Computes posterior draws of historical decompositions — compute_historical_decompositions","text":"draws posterior estimation model transformed draw posterior distribution historical decompositions.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_historical_decompositions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes posterior draws of historical decompositions — compute_historical_decompositions","text":"","code":"compute_historical_decompositions(posterior)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_historical_decompositions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes posterior draws of historical decompositions — compute_historical_decompositions","text":"posterior posterior estimation outcome - object either classes:  PosteriorBSVAR, PosteriorBSVARMSH, PosteriorBSVARMIX, PosteriorBSVARSV obtained running estimate function. interpretation depends normalisation shocks using function normalise_posterior(). Verify default settings appropriate.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_historical_decompositions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes posterior draws of historical decompositions — compute_historical_decompositions","text":"object class PosteriorHD, , NxNxTxS array attribute PosteriorHD  containing S draws historical decompositions.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_historical_decompositions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes posterior draws of historical decompositions — compute_historical_decompositions","text":"Kilian, L., & Lütkepohl, H. (2017). Structural VAR Tools, Chapter 4, : Structural vector autoregressive analysis. Cambridge University Press.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_historical_decompositions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes posterior draws of historical decompositions — compute_historical_decompositions","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_historical_decompositions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes posterior draws of historical decompositions — compute_historical_decompositions","text":"","code":"# upload data data(us_fiscal_lsuw)  # specify the model and set seed set.seed(123) specification  = specify_bsvar$new(us_fiscal_lsuw, p = 1) #> The identification is set to the default option of lower-triangular structural matrix.  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 50) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # compute historical decompositions hd            = compute_historical_decompositions(posterior)  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar$new(p = 1) |>   estimate(S = 50) |>    estimate(S = 100) |>    compute_historical_decompositions() -> hd #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 100 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_impulse_responses.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes posterior draws of impulse responses — compute_impulse_responses","title":"Computes posterior draws of impulse responses — compute_impulse_responses","text":"draws posterior estimation model transformed draw posterior distribution impulse responses.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_impulse_responses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes posterior draws of impulse responses — compute_impulse_responses","text":"","code":"compute_impulse_responses(posterior, horizon, standardise = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_impulse_responses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes posterior draws of impulse responses — compute_impulse_responses","text":"posterior posterior estimation outcome - object either classes:  PosteriorBSVAR, PosteriorBSVARMSH, PosteriorBSVARMIX, PosteriorBSVARSV obtained running estimate function. interpretation depends normalisation shocks using function normalise_posterior(). Verify default settings appropriate. horizon positive integer number denoting forecast horizon impulse responses computations. standardise logical value. TRUE, impulse responses standardised  variables' shocks horizon 0 equal 1. Otherwise, parameter estimates  determine magnitude.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_impulse_responses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes posterior draws of impulse responses — compute_impulse_responses","text":"object class PosteriorIR, , NxNx(horizon+1)xS array attribute PosteriorIR  containing S draws impulse responses.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_impulse_responses.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes posterior draws of impulse responses — compute_impulse_responses","text":"Kilian, L., & Lütkepohl, H. (2017). Structural VAR Tools, Chapter 4, : Structural vector autoregressive analysis. Cambridge University Press.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_impulse_responses.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes posterior draws of impulse responses — compute_impulse_responses","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_impulse_responses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes posterior draws of impulse responses — compute_impulse_responses","text":"","code":"# upload data data(us_fiscal_lsuw)  # specify the model and set seed set.seed(123) specification  = specify_bsvar$new(us_fiscal_lsuw, p = 1) #> The identification is set to the default option of lower-triangular structural matrix.  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 50) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # compute impulse responses 2 years ahead irf           = compute_impulse_responses(posterior, horizon = 8)  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar$new(p = 1) |>   estimate(S = 10) |>    estimate(S = 50) |>    compute_impulse_responses(horizon = 8) -> ir #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_regime_probabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes posterior draws of regime probabilities — compute_regime_probabilities","title":"Computes posterior draws of regime probabilities — compute_regime_probabilities","text":"draws posterior estimation model transformed draw posterior distribution regime probabilities. represent either realisations regime indicators, type = \"realized\", filtered probabilities, type = \"filtered\", forecasted regime probabilities, type = \"forecasted\", smoothed probabilities, type = \"smoothed\", .","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_regime_probabilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes posterior draws of regime probabilities — compute_regime_probabilities","text":"","code":"compute_regime_probabilities(   posterior,   type = c(\"realized\", \"filtered\", \"forecasted\", \"smoothed\") )"},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_regime_probabilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes posterior draws of regime probabilities — compute_regime_probabilities","text":"posterior posterior estimation outcome regime-dependent heteroskedastic models  - object either classes: PosteriorBSVARMSH, PosteriorBSVARMIX obtained running estimate function. type one values \"realized\", \"filtered\", \"forecasted\", \"smoothed\" denoting type probabilities computed.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_regime_probabilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes posterior draws of regime probabilities — compute_regime_probabilities","text":"object class PosteriorRegimePr, , MxTxS array attribute PosteriorRegimePr  containing S draws regime probabilities.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_regime_probabilities.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes posterior draws of regime probabilities — compute_regime_probabilities","text":"Song, Y., Woźniak, T., (2021) Markov Switching. Oxford Research Encyclopedia Economics Finance, Oxford University Press, doi:10.1093/acrefore/9780190625979.013.174 .","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_regime_probabilities.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes posterior draws of regime probabilities — compute_regime_probabilities","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_regime_probabilities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes posterior draws of regime probabilities — compute_regime_probabilities","text":"","code":"# upload data data(us_fiscal_lsuw)  # specify the model and set seed set.seed(123) specification  = specify_bsvar_msh$new(us_fiscal_lsuw, p = 2, M = 2) #> The identification is set to the default option of lower-triangular structural matrix.  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 50) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # compute the posterior draws of realized regime indicators regimes        = compute_regime_probabilities(posterior)  # compute the posterior draws of filtered probabilities filtered       = compute_regime_probabilities(posterior, \"filtered\")  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar_msh$new(p = 1, M = 2) |>   estimate(S = 10) |>    estimate(S = 50) -> posterior #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| regimes        = compute_regime_probabilities(posterior) filtered       = compute_regime_probabilities(posterior, \"filtered\")"},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_structural_shocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes posterior draws of structural shocks — compute_structural_shocks","title":"Computes posterior draws of structural shocks — compute_structural_shocks","text":"draws posterior estimation model transformed draw posterior distribution structural shocks.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_structural_shocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes posterior draws of structural shocks — compute_structural_shocks","text":"","code":"compute_structural_shocks(posterior)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_structural_shocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes posterior draws of structural shocks — compute_structural_shocks","text":"posterior posterior estimation outcome - object either classes:  PosteriorBSVAR, PosteriorBSVARMSH, PosteriorBSVARMIX, PosteriorBSVARSV obtained running estimate function. interpretation depends normalisation shocks using function normalise_posterior(). Verify default settings appropriate.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_structural_shocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes posterior draws of structural shocks — compute_structural_shocks","text":"object class PosteriorShocks, , NxTxS array attribute PosteriorShocks  containing S draws structural shocks.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_structural_shocks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes posterior draws of structural shocks — compute_structural_shocks","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_structural_shocks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes posterior draws of structural shocks — compute_structural_shocks","text":"","code":"# upload data data(us_fiscal_lsuw)  # specify the model and set seed set.seed(123) specification  = specify_bsvar$new(us_fiscal_lsuw, p = 2) #> The identification is set to the default option of lower-triangular structural matrix.  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in$get_last_draw(), 50) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # compute structural shocks shocks         = compute_structural_shocks(posterior)  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar$new(p = 1) |>   estimate(S = 10) |>    estimate(S = 50) |>    compute_structural_shocks() -> ss #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_variance_decompositions.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes posterior draws of the forecast error variance decomposition — compute_variance_decompositions","title":"Computes posterior draws of the forecast error variance decomposition — compute_variance_decompositions","text":"draws posterior estimation model transformed draw posterior distribution forecast error variance decomposition.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_variance_decompositions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes posterior draws of the forecast error variance decomposition — compute_variance_decompositions","text":"","code":"compute_variance_decompositions(posterior, horizon)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_variance_decompositions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes posterior draws of the forecast error variance decomposition — compute_variance_decompositions","text":"posterior posterior estimation outcome - object one classes:  PosteriorBSVAR, PosteriorBSVARMSH, PosteriorBSVARMIX, PosteriorBSVARSV obtained running estimate function. interpretation depends normalisation shocks using function normalise_posterior(). Verify default settings appropriate. horizon positive integer number denoting forecast horizon impulse responses computations.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_variance_decompositions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes posterior draws of the forecast error variance decomposition — compute_variance_decompositions","text":"object class PosteriorFEVD, , NxNx(horizon+1)xS array attribute PosteriorFEVD  containing S draws forecast error variance decomposition.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_variance_decompositions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes posterior draws of the forecast error variance decomposition — compute_variance_decompositions","text":"Kilian, L., & Lütkepohl, H. (2017). Structural VAR Tools, Chapter 4, : Structural vector autoregressive analysis. Cambridge University Press.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_variance_decompositions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes posterior draws of the forecast error variance decomposition — compute_variance_decompositions","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/compute_variance_decompositions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes posterior draws of the forecast error variance decomposition — compute_variance_decompositions","text":"","code":"# upload data data(us_fiscal_lsuw)  # specify the model and set seed set.seed(123) specification  = specify_bsvar$new(us_fiscal_lsuw, p = 2) #> The identification is set to the default option of lower-triangular structural matrix.  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in$get_last_draw(), 50) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # compute forecast error variance decomposition 2 years ahead fevd           = compute_variance_decompositions(posterior, horizon = 8)  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar$new(p = 2) |>   estimate(S = 10) |>    estimate(S = 50) |>    compute_variance_decompositions(horizon = 8) -> fevd #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian estimation of a homoskedastic Structural Vector Autoregression via Gibbs sampler — estimate.BSVAR","title":"Bayesian estimation of a homoskedastic Structural Vector Autoregression via Gibbs sampler — estimate.BSVAR","text":"Estimates homoskedastic SVAR using Gibbs sampler proposed Waggoner & Zha (2003) structural matrix \\(B\\) equation--equation sampler Chan, Koop, & Yu (2021) autoregressive slope parameters \\(\\). Additionally, parameter matrices \\(\\) \\(B\\) follow Minnesota prior generalised-normal prior distributions respectively matrix-specific overall shrinkage parameters estimated using hierarchical prior distribution.  See section Details model equations.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian estimation of a homoskedastic Structural Vector Autoregression via Gibbs sampler — estimate.BSVAR","text":"","code":"# S3 method for BSVAR estimate(specification, S, thin = 10, show_progress = TRUE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian estimation of a homoskedastic Structural Vector Autoregression via Gibbs sampler — estimate.BSVAR","text":"specification object class BSVAR generated using specify_bsvar$new() function. S positive integer, number posterior draws generated thin positive integer, specifying frequency MCMC output thinning show_progress logical value, TRUE estimation progress bar visible","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVAR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian estimation of a homoskedastic Structural Vector Autoregression via Gibbs sampler — estimate.BSVAR","text":"object class PosteriorBSVAR containing Bayesian estimation output containing two elements:  posterior list collection S draws posterior distribution generated via Gibbs sampler containing:  NxKxS array posterior draws matrix \\(\\) B NxNxS array posterior draws matrix \\(B\\) hyper 5xS matrix posterior draws hyper-parameters hierarchical prior distribution last_draw object class BSVAR last draw current MCMC run starting value passed continuation MCMC estimation using estimate().","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVAR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian estimation of a homoskedastic Structural Vector Autoregression via Gibbs sampler — estimate.BSVAR","text":"homoskedastic SVAR model given reduced form equation: $$Y = AX + E$$ \\(Y\\) NxT matrix dependent variables, \\(X\\) KxT matrix explanatory variables,  \\(E\\) NxT matrix reduced form error terms, \\(\\) NxK matrix autoregressive slope coefficients parameters deterministic terms \\(X\\). structural equation given $$= U$$ \\(U\\) NxT matrix structural form error terms, \\(B\\) NxN matrix contemporaneous relationships. Finally, structural shocks, U, temporally contemporaneously independent jointly normally distributed zero mean unit variances.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVAR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian estimation of a homoskedastic Structural Vector Autoregression via Gibbs sampler — estimate.BSVAR","text":"Sampling generalised-normal full conditional posterior distribution matrix \\(B\\) implemented using Gibbs sampler : Waggoner, D.F., Zha, T., (2003) Gibbs sampler structural vector autoregressions. Journal Economic Dynamics Control, 28, 349--366, doi:10.1016/S0165-1889(02)00168-9 . Sampling multivariate normal full conditional posterior distribution \\(\\) matrix row implemented using sampler : Chan, J.C.C., Koop, G, Yu, X. (2021) Large Order-Invariant Bayesian VARs Stochastic Volatility.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVAR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian estimation of a homoskedastic Structural Vector Autoregression via Gibbs sampler — estimate.BSVAR","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVAR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian estimation of a homoskedastic Structural Vector Autoregression via Gibbs sampler — estimate.BSVAR","text":"","code":"# simple workflow ############################################################ # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar$new(us_fiscal_lsuw, p = 4) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # run the burn-in burn_in        = estimate(specification, 50) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 100) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 100 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar$new(p = 1) |>   estimate(S = 50) |>    compute_impulse_responses(horizon = 4) -> irf #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARMIX.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian estimation of a Structural Vector Autoregression with shocks following \na finite mixture of normal components via Gibbs sampler — estimate.BSVARMIX","title":"Bayesian estimation of a Structural Vector Autoregression with shocks following \na finite mixture of normal components via Gibbs sampler — estimate.BSVARMIX","text":"Estimates SVAR non-normal residuals following finite M mixture normal distributions proposed Woźniak & Droumaguet (2022). Implements Gibbs sampler proposed Waggoner & Zha (2003) structural matrix \\(B\\) equation--equation sampler Chan, Koop, & Yu (2021) autoregressive slope parameters \\(\\). Additionally, parameter matrices \\(\\) \\(B\\) follow Minnesota prior generalised-normal prior distributions respectively matrix-specific overall shrinkage parameters estimated thanks hierarchical prior distribution. finite mixture normals model estimated using prior distributions algorithms proposed Woźniak & Droumaguet (2022). See section Details model equations.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARMIX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian estimation of a Structural Vector Autoregression with shocks following \na finite mixture of normal components via Gibbs sampler — estimate.BSVARMIX","text":"","code":"# S3 method for BSVARMIX estimate(specification, S, thin = 10, show_progress = TRUE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARMIX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian estimation of a Structural Vector Autoregression with shocks following \na finite mixture of normal components via Gibbs sampler — estimate.BSVARMIX","text":"specification object class BSVARMIX generated using specify_bsvar_mix$new() function. S positive integer, number posterior draws generated thin positive integer, specifying frequency MCMC output thinning show_progress logical value, TRUE estimation progress bar visible","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARMIX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian estimation of a Structural Vector Autoregression with shocks following \na finite mixture of normal components via Gibbs sampler — estimate.BSVARMIX","text":"object class PosteriorBSVARMIX containing Bayesian estimation output containing two elements:  posterior list collection S draws posterior distribution generated via Gibbs sampler containing:  NxKxS array posterior draws matrix \\(\\) B NxNxS array posterior draws matrix \\(B\\) hyper 5xS matrix posterior draws hyper-parameters hierarchical prior distribution sigma2 NxMxS array posterior draws structural shocks conditional variances PR_TR MxMxS array posterior draws transition matrix. xi MxTxS array posterior draws regime allocation matrix. pi_0 MxS matrix posterior draws ergodic probabilities sigma NxTxS array posterior draws structural shocks conditional standard deviations' series sample period last_draw object class BSVARMIX last draw current MCMC run starting value passed continuation MCMC estimation using estimate().","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARMIX.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian estimation of a Structural Vector Autoregression with shocks following \na finite mixture of normal components via Gibbs sampler — estimate.BSVARMIX","text":"heteroskedastic SVAR model given reduced form equation: $$Y = AX + E$$ \\(Y\\) NxT matrix dependent variables, \\(X\\) KxT matrix explanatory variables,  \\(E\\) NxT matrix reduced form error terms, \\(\\) NxK matrix autoregressive slope coefficients parameters deterministic terms \\(X\\). structural equation given $$= U$$ \\(U\\) NxT matrix structural form error terms, \\(B\\) NxN matrix contemporaneous relationships. Finally, structural shocks, \\(U\\), temporally contemporaneously independent finite-mixture normals distributed zero mean. conditional variance nth shock time t given : $$Var_{t-1}[u_{n.t}] = s^2_{n.s_t}$$ \\(s_t\\) regime indicator  regime-specific conditional variances structural shocks \\(s^2_{n.s_t}\\).  model, variances structural shocks sum M. regime indicator \\(s_t\\) either : regime probabilities non-zero requires regimes    positive number occurrences sample period, sparse potentially many regimes zero occurrences sample period   number regimes estimated. model selection also respect made using function specify_bsvar_mix.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARMIX.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian estimation of a Structural Vector Autoregression with shocks following \na finite mixture of normal components via Gibbs sampler — estimate.BSVARMIX","text":"model, prior distributions, estimation algorithms proposed Woźniak, T., Droumaguet, M., (2022) Bayesian Assessment Identifying Restrictions Heteroskedastic Structural VARs analysis heteroskedastic SVAR models proposed : Lütkepohl, H., Woźniak, T., (2020) Bayesian Inference Structural Vector Autoregressions Identified Markov-Switching Heteroskedasticity. Journal Economic Dynamics Control 113, 103862, doi:10.1016/j.jedc.2020.103862 . Sampling generalised-normal full conditional posterior distribution matrix \\(B\\) implemented using Gibbs sampler : Waggoner, D.F., Zha, T., (2003) Gibbs sampler structural vector autoregressions. Journal Economic Dynamics Control, 28, 349--366, doi:10.1016/S0165-1889(02)00168-9 . Sampling multivariate normal full conditional posterior distribution \\(\\) matrix row implemented using sampler : Chan, J.C.C., Koop, G, Yu, X. (2021) Large Order-Invariant Bayesian VARs Stochastic Volatility. estimation mixture normals heteroskedasticity closely follows procedures described : Song, Y., Woźniak, T., (2021) Markov Switching. Oxford Research Encyclopedia Economics Finance, Oxford University Press, doi:10.1093/acrefore/9780190625979.013.174 . Frühwirth-Schnatter, S., (2006) Finite Mixture Markov Switching Models. Springer Series Statistics. New York: Springer, doi:10.1007/978-0-387-35768-3 . sparse model inspired : Malsiner-Walli, G., Frühwirth-Schnatter, S., Grün, B. (2016) Model-based clustering based sparse finite Gaussian mixtures. Statistics Computing, 26(1–2), 303--324, doi:10.1007/s11222-014-9500-2 . forward-filtering backward-sampling implemented following proposal : Chib, S. (1996) Calculating posterior distributions modal estimates Markov mixture models. Journal Econometrics, 75(1), 79–97, doi:10.1016/0304-4076(95)01770-4 .","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARMIX.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian estimation of a Structural Vector Autoregression with shocks following \na finite mixture of normal components via Gibbs sampler — estimate.BSVARMIX","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARMIX.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian estimation of a Structural Vector Autoregression with shocks following \na finite mixture of normal components via Gibbs sampler — estimate.BSVARMIX","text":"","code":"# simple workflow ############################################################ # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_mix$new(us_fiscal_lsuw, p = 1, M = 2) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 50) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar_mix$new(p = 1, M = 2) |>   estimate(S = 10) |>    estimate(S = 50) |>    compute_impulse_responses(horizon = 4) -> irf #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARMSH.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian estimation of a Structural Vector Autoregression with \nMarkov-switching heteroskedasticity via Gibbs sampler — estimate.BSVARMSH","title":"Bayesian estimation of a Structural Vector Autoregression with \nMarkov-switching heteroskedasticity via Gibbs sampler — estimate.BSVARMSH","text":"Estimates SVAR Markov-switching heteroskedasticity M regimes (MS(M)) proposed Woźniak & Droumaguet (2022). Implements Gibbs sampler proposed Waggoner & Zha (2003) structural matrix \\(B\\) equation--equation sampler Chan, Koop, & Yu (2021) autoregressive slope parameters \\(\\). Additionally, parameter matrices \\(\\) \\(B\\) follow Minnesota prior generalised-normal prior distributions respectively matrix-specific overall shrinkage parameters estimated thanks hierarchical prior distribution. MS model estimated using prior distributions algorithms proposed Woźniak & Droumaguet (2022). See section Details model equations.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARMSH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian estimation of a Structural Vector Autoregression with \nMarkov-switching heteroskedasticity via Gibbs sampler — estimate.BSVARMSH","text":"","code":"# S3 method for BSVARMSH estimate(specification, S, thin = 10, show_progress = TRUE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARMSH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian estimation of a Structural Vector Autoregression with \nMarkov-switching heteroskedasticity via Gibbs sampler — estimate.BSVARMSH","text":"specification object class BSVARMSH generated using specify_bsvar_msh$new() function. S positive integer, number posterior draws generated thin positive integer, specifying frequency MCMC output thinning show_progress logical value, TRUE estimation progress bar visible","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARMSH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian estimation of a Structural Vector Autoregression with \nMarkov-switching heteroskedasticity via Gibbs sampler — estimate.BSVARMSH","text":"object class PosteriorBSVARMSH containing Bayesian estimation output containing two elements:  posterior list collection S draws posterior distribution generated via Gibbs sampler containing:  NxKxS array posterior draws matrix \\(\\) B NxNxS array posterior draws matrix \\(B\\) hyper 5xS matrix posterior draws hyper-parameters hierarchical prior distribution sigma2 NxMxS array posterior draws structural shocks conditional variances PR_TR MxMxS array posterior draws transition matrix. xi MxTxS array posterior draws regime allocation matrix. pi_0 MxS matrix posterior draws initial state probabilities sigma NxTxS array posterior draws structural shocks conditional standard deviations' series sample period last_draw object class BSVARMSH last draw current MCMC run starting value passed continuation MCMC estimation using estimate().","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARMSH.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian estimation of a Structural Vector Autoregression with \nMarkov-switching heteroskedasticity via Gibbs sampler — estimate.BSVARMSH","text":"heteroskedastic SVAR model given reduced form equation: $$Y = AX + E$$ \\(Y\\) NxT matrix dependent variables, \\(X\\) KxT matrix explanatory variables,  \\(E\\) NxT matrix reduced form error terms, \\(\\) NxK matrix autoregressive slope coefficients parameters deterministic terms X. structural equation given $$= U$$ \\(U\\) NxT matrix structural form error terms, \\(B\\) NxN matrix contemporaneous relationships. Finally, structural shocks, \\(U\\), temporally contemporaneously independent jointly normally distributed zero mean. conditional variance nth shock time t given : $$Var_{t-1}[u_{n.t}] = s^2_{n.s_t}$$ \\(s_t\\) Markov process driving time-variability  regime-specific conditional variances structural shocks \\(s^2_{n.s_t}\\).  model, variances structural shocks sum M. Markov process \\(s_t\\) either: stationary, irreducible, aperiodic requires regimes    positive number occurrences sample period, sparse potentially many regimes zero occurrences sample period   number regimes estimated. model selection also respect made using function specify_bsvar_msh.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARMSH.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian estimation of a Structural Vector Autoregression with \nMarkov-switching heteroskedasticity via Gibbs sampler — estimate.BSVARMSH","text":"model, prior distributions, estimation algorithms proposed Woźniak, T., Droumaguet, M., (2022) Bayesian Assessment Identifying Restrictions Heteroskedastic Structural VARs analysis heteroskedastic SVAR models proposed : Lütkepohl, H., Woźniak, T., (2020) Bayesian Inference Structural Vector Autoregressions Identified Markov-Switching Heteroskedasticity. Journal Economic Dynamics Control 113, 103862, doi:10.1016/j.jedc.2020.103862 . Sampling generalised-normal full conditional posterior distribution matrix \\(B\\) implemented using Gibbs sampler : Waggoner, D.F., Zha, T., (2003) Gibbs sampler structural vector autoregressions. Journal Economic Dynamics Control, 28, 349--366, doi:10.1016/S0165-1889(02)00168-9 . Sampling multivariate normal full conditional posterior distribution \\(\\) matrix row implemented using sampler : Chan, J.C.C., Koop, G, Yu, X. (2021) Large Order-Invariant Bayesian VARs Stochastic Volatility. estimation Markov-switching heteroskedasticity closely follows procedures described : Song, Y., Woźniak, T., (2021) Markov Switching. Oxford Research Encyclopedia Economics Finance, Oxford University Press, doi:10.1093/acrefore/9780190625979.013.174 . Frühwirth-Schnatter, S., (2006) Finite Mixture Markov Switching Models. Springer Series Statistics. New York: Springer, doi:10.1007/978-0-387-35768-3 . sparse model inspired : Malsiner-Walli, G., Frühwirth-Schnatter, S., Grün, B. (2016) Model-based clustering based sparse finite Gaussian mixtures. Statistics Computing, 26(1–2), 303--324, doi:10.1007/s11222-014-9500-2 . forward-filtering backward-sampling implemented following proposal : Chib, S. (1996) Calculating posterior distributions modal estimates Markov mixture models. Journal Econometrics, 75(1), 79–97, doi:10.1016/0304-4076(95)01770-4 .","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARMSH.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian estimation of a Structural Vector Autoregression with \nMarkov-switching heteroskedasticity via Gibbs sampler — estimate.BSVARMSH","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARMSH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian estimation of a Structural Vector Autoregression with \nMarkov-switching heteroskedasticity via Gibbs sampler — estimate.BSVARMSH","text":"","code":"# simple workflow ############################################################ # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_msh$new(us_fiscal_lsuw, p = 1, M = 2) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 50) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar_msh$new(p = 1, M = 2) |>   estimate(S = 10) |>    estimate(S = 50) |>    compute_impulse_responses(horizon = 4) -> irf #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARSV.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian estimation of a Structural Vector Autoregression with \nStochastic Volatility heteroskedasticity via Gibbs sampler — estimate.BSVARSV","title":"Bayesian estimation of a Structural Vector Autoregression with \nStochastic Volatility heteroskedasticity via Gibbs sampler — estimate.BSVARSV","text":"Estimates SVAR Stochastic Volatility (SV) heteroskedasticity  proposed Lütkepohl, Shang, Uzeda, Woźniak (2022). Implements Gibbs sampler proposed Waggoner & Zha (2003) structural matrix \\(B\\) equation--equation sampler  Chan, Koop, & Yu (2021) autoregressive slope parameters \\(\\). Additionally,  parameter matrices \\(\\) \\(B\\) follow Minnesota prior generalised-normal prior distributions  respectively matrix-specific overall shrinkage parameters estimated thanks hierarchical prior distribution.  SV model estimated using range techniques including:  simulation smoother, auxiliary mixture, ancillarity-sufficiency interweaving strategy,  generalised inverse Gaussian distribution summarised Kastner & Frühwirth-Schnatter (2014).  See section Details model equations.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARSV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian estimation of a Structural Vector Autoregression with \nStochastic Volatility heteroskedasticity via Gibbs sampler — estimate.BSVARSV","text":"","code":"# S3 method for BSVARSV estimate(specification, S, thin = 10, show_progress = TRUE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARSV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian estimation of a Structural Vector Autoregression with \nStochastic Volatility heteroskedasticity via Gibbs sampler — estimate.BSVARSV","text":"specification object class BSVARSV generated using specify_bsvar_sv$new() function. S positive integer, number posterior draws generated thin positive integer, specifying frequency MCMC output thinning show_progress logical value, TRUE estimation progress bar visible","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARSV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian estimation of a Structural Vector Autoregression with \nStochastic Volatility heteroskedasticity via Gibbs sampler — estimate.BSVARSV","text":"object class PosteriorBSVARSV containing Bayesian estimation output containing two elements:  posterior list collection S draws posterior distribution generated via Gibbs sampler containing:  NxKxS array posterior draws matrix \\(\\) B NxNxS array posterior draws matrix \\(B\\) hyper 5xS matrix posterior draws hyper-parameters hierarchical prior distribution h NxTxS array posterior draws log-volatility processes rho NxS matrix posterior draws SV autoregressive parameters omega NxS matrix posterior draws SV process conditional standard deviations S NxTxS array posterior draws auxiliary mixture component indicators sigma2_omega NxS matrix posterior draws variances zero-mean normal prior omega s_ S-vector posterior draws scale gamma prior hierarchical prior sigma2_omega last_draw object class BSVARSV last draw current MCMC run starting value passed continuation MCMC estimation using estimate().","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARSV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian estimation of a Structural Vector Autoregression with \nStochastic Volatility heteroskedasticity via Gibbs sampler — estimate.BSVARSV","text":"heteroskedastic SVAR model given reduced form equation: $$Y = AX + E$$ \\(Y\\) NxT matrix dependent variables, \\(X\\) KxT matrix explanatory variables,  \\(E\\) NxT matrix reduced form error terms, \\(\\) NxK matrix autoregressive slope coefficients parameters deterministic terms \\(X\\). structural equation given $$= U$$ \\(U\\) NxT matrix structural form error terms, \\(B\\) NxN matrix contemporaneous relationships. Finally, structural shocks, \\(U\\), temporally contemporaneously independent jointly normally distributed zero mean. Two alternative specifications conditional variance nth shock time t  can estimated: non-centred Stochastic Volatility Lütkepohl, Shang, Uzeda, Woźniak (2022)  centred Stochastic Volatility Chan, Koop, & Yu (2021). non-centred Stochastic Volatility Lütkepohl, Shang, Uzeda, Woźniak (2022)  selected setting argument centred_sv function specify_bsvar_sv$new() value FALSE. conditional variances given : $$Var_{t-1}[u_{n.t}] = exp(w_n h_{n.t})$$ \\(w_n\\) estimated conditional standard deviation log-conditional variance log-volatility process \\(h_{n.t}\\) follows autoregressive process: $$h_{n.t} = g_n h_{n.t-1} + v_{n.t}$$ \\(h_{n.0}=0\\), \\(g_n\\) autoregressive parameter \\(v_{n.t}\\) standard normal error term. centred Stochastic Volatility Chan, Koop, & Yu (2021) selected setting argument centred_sv function specify_bsvar_sv$new() value TRUE. conditional variances given : $$Var_{t-1}[u_{n.t}] = exp(h_{n.t})$$ log-conditional variances \\(h_{n.t}\\) follow autoregressive process: $$h_{n.t} = g_n h_{n.t-1} + v_{n.t}$$ \\(h_{n.0}=0\\), \\(g_n\\) autoregressive parameter \\(v_{n.t}\\) zero-mean normal error term variance \\(s_{v.n}^2\\).","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARSV.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian estimation of a Structural Vector Autoregression with \nStochastic Volatility heteroskedasticity via Gibbs sampler — estimate.BSVARSV","text":"model, prior distributions, estimation algorithms proposed Lütkepohl, H., Shang, F., Uzeda, L., Woźniak, T. (2022) Partial Identification Heteroskedastic Structural VARs: Theory Bayesian Inference. Sampling generalised-normal full conditional posterior distribution matrix \\(B\\) implemented using Gibbs sampler : Waggoner, D.F., Zha, T., (2003) Gibbs sampler structural vector autoregressions. Journal Economic Dynamics Control, 28, 349--366, doi:10.1016/S0165-1889(02)00168-9 . Sampling multivariate normal full conditional posterior distribution \\(\\) matrix row implemented using sampler : Chan, J.C.C., Koop, G, Yu, X. (2021) Large Order-Invariant Bayesian VARs Stochastic Volatility. Many techniques employed estimation Stochastic Volatility model  summarised : Kastner, G. Frühwirth-Schnatter, S. (2014) Ancillarity-Sufficiency Interweaving Strategy (ASIS) Boosting MCMC  Estimation Stochastic Volatility Models. Computational Statistics & Data Analysis, 76, 408--423,  doi:10.1016/j.csda.2013.01.002 .","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARSV.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian estimation of a Structural Vector Autoregression with \nStochastic Volatility heteroskedasticity via Gibbs sampler — estimate.BSVARSV","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.BSVARSV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian estimation of a Structural Vector Autoregression with \nStochastic Volatility heteroskedasticity via Gibbs sampler — estimate.BSVARSV","text":"","code":"# simple workflow ############################################################ # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_sv$new(us_fiscal_lsuw, p = 1) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 10, thin = 2) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 2nd draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar_sv$new(p = 1) |>   estimate(S = 10) |>    estimate(S = 10, thin = 2) |>    compute_impulse_responses(horizon = 4) -> irf #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 2nd draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian estimation of a homoskedastic Structural Vector Autoregression via Gibbs sampler — estimate.PosteriorBSVAR","title":"Bayesian estimation of a homoskedastic Structural Vector Autoregression via Gibbs sampler — estimate.PosteriorBSVAR","text":"Estimates homoskedastic SVAR using Gibbs sampler proposed Waggoner & Zha (2003) structural matrix \\(B\\) equation--equation sampler Chan, Koop, & Yu (2021) autoregressive slope parameters \\(\\). Additionally, parameter matrices \\(\\) \\(B\\) follow Minnesota prior generalised-normal prior distributions respectively matrix-specific overall shrinkage parameters estimated using hierarchical prior distribution.  See section Details model equations.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian estimation of a homoskedastic Structural Vector Autoregression via Gibbs sampler — estimate.PosteriorBSVAR","text":"","code":"# S3 method for PosteriorBSVAR estimate(specification, S, thin = 10, show_progress = TRUE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian estimation of a homoskedastic Structural Vector Autoregression via Gibbs sampler — estimate.PosteriorBSVAR","text":"specification object class PosteriorBSVAR generated using estimate.BSVAR() function. setup facilitates continuation MCMC sampling starting last draw previous run. S positive integer, number posterior draws generated thin positive integer, specifying frequency MCMC output thinning show_progress logical value, TRUE estimation progress bar visible","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVAR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian estimation of a homoskedastic Structural Vector Autoregression via Gibbs sampler — estimate.PosteriorBSVAR","text":"object class PosteriorBSVAR containing Bayesian estimation output containing two elements:  posterior list collection S draws posterior distribution generated via Gibbs sampler containing:  NxKxS array posterior draws matrix \\(\\) B NxNxS array posterior draws matrix \\(B\\) hyper 5xS matrix posterior draws hyper-parameters hierarchical prior distribution last_draw object class BSVAR last draw current MCMC run starting value passed continuation MCMC estimation using estimate().","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVAR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian estimation of a homoskedastic Structural Vector Autoregression via Gibbs sampler — estimate.PosteriorBSVAR","text":"homoskedastic SVAR model given reduced form equation: $$Y = AX + E$$ \\(Y\\) NxT matrix dependent variables, \\(X\\) KxT matrix explanatory variables,  \\(E\\) NxT matrix reduced form error terms, \\(\\) NxK matrix autoregressive slope coefficients parameters deterministic terms \\(X\\). structural equation given $$= U$$ \\(U\\) NxT matrix structural form error terms, \\(B\\) NxN matrix contemporaneous relationships. Finally, structural shocks, U, temporally contemporaneously independent jointly normally distributed zero mean unit variances.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVAR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian estimation of a homoskedastic Structural Vector Autoregression via Gibbs sampler — estimate.PosteriorBSVAR","text":"Sampling generalised-normal full conditional posterior distribution matrix \\(B\\) implemented using Gibbs sampler : Waggoner, D.F., Zha, T., (2003) Gibbs sampler structural vector autoregressions. Journal Economic Dynamics Control, 28, 349--366, doi:10.1016/S0165-1889(02)00168-9 . Sampling multivariate normal full conditional posterior distribution \\(\\) matrix row implemented using sampler : Chan, J.C.C., Koop, G, Yu, X. (2021) Large Order-Invariant Bayesian VARs Stochastic Volatility.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVAR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian estimation of a homoskedastic Structural Vector Autoregression via Gibbs sampler — estimate.PosteriorBSVAR","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVAR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian estimation of a homoskedastic Structural Vector Autoregression via Gibbs sampler — estimate.PosteriorBSVAR","text":"","code":"# simple workflow ############################################################ # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar$new(us_fiscal_lsuw, p = 1) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # run the burn-in burn_in        = estimate(specification, 50) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 100) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 100 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar$new(p = 1) |>   estimate(S = 50) |>    estimate(S = 100) |>    compute_impulse_responses(horizon = 4) -> irf #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 100 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARMIX.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian estimation of a Structural Vector Autoregression with shocks following \na finite mixture of normal components via Gibbs sampler — estimate.PosteriorBSVARMIX","title":"Bayesian estimation of a Structural Vector Autoregression with shocks following \na finite mixture of normal components via Gibbs sampler — estimate.PosteriorBSVARMIX","text":"Estimates SVAR non-normal residuals following finite M mixture normal distributions proposed Woźniak & Droumaguet (2022). Implements Gibbs sampler proposed Waggoner & Zha (2003) structural matrix \\(B\\) equation--equation sampler Chan, Koop, & Yu (2021) autoregressive slope parameters \\(\\). Additionally, parameter matrices \\(\\) \\(B\\) follow Minnesota prior generalised-normal prior distributions respectively matrix-specific overall shrinkage parameters estimated thanks hierarchical prior distribution. finite mixture normals model estimated using prior distributions algorithms proposed Woźniak & Droumaguet (2022). See section Details model equations.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARMIX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian estimation of a Structural Vector Autoregression with shocks following \na finite mixture of normal components via Gibbs sampler — estimate.PosteriorBSVARMIX","text":"","code":"# S3 method for PosteriorBSVARMIX estimate(specification, S, thin = 10, show_progress = TRUE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARMIX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian estimation of a Structural Vector Autoregression with shocks following \na finite mixture of normal components via Gibbs sampler — estimate.PosteriorBSVARMIX","text":"specification object class PosteriorBSVARMIX generated using estimate.BSVAR() function. setup facilitates continuation MCMC sampling starting last draw previous run. S positive integer, number posterior draws generated thin positive integer, specifying frequency MCMC output thinning show_progress logical value, TRUE estimation progress bar visible","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARMIX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian estimation of a Structural Vector Autoregression with shocks following \na finite mixture of normal components via Gibbs sampler — estimate.PosteriorBSVARMIX","text":"object class PosteriorBSVARMIX containing Bayesian estimation output containing two elements:  posterior list collection S draws posterior distribution generated via Gibbs sampler containing:  NxKxS array posterior draws matrix \\(\\) B NxNxS array posterior draws matrix \\(B\\) hyper 5xS matrix posterior draws hyper-parameters hierarchical prior distribution sigma2 NxMxS array posterior draws structural shocks conditional variances PR_TR MxMxS array posterior draws transition matrix. xi MxTxS array posterior draws regime allocation matrix. pi_0 MxS matrix posterior draws ergodic probabilities sigma NxTxS array posterior draws structural shocks conditional standard deviations' series sample period last_draw object class BSVARMIX last draw current MCMC run starting value passed continuation MCMC estimation using estimate().","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARMIX.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian estimation of a Structural Vector Autoregression with shocks following \na finite mixture of normal components via Gibbs sampler — estimate.PosteriorBSVARMIX","text":"heteroskedastic SVAR model given reduced form equation: $$Y = AX + E$$ \\(Y\\) NxT matrix dependent variables, \\(X\\) KxT matrix explanatory variables,  \\(E\\) NxT matrix reduced form error terms, \\(\\) NxK matrix autoregressive slope coefficients parameters deterministic terms \\(X\\). structural equation given $$= U$$ \\(U\\) NxT matrix structural form error terms, \\(B\\) NxN matrix contemporaneous relationships. Finally, structural shocks, \\(U\\), temporally contemporaneously independent finite-mixture normals distributed zero mean. conditional variance nth shock time t given : $$Var_{t-1}[u_{n.t}] = s^2_{n.s_t}$$ \\(s_t\\) regime indicator  regime-specific conditional variances structural shocks \\(s^2_{n.s_t}\\).  model, variances structural shocks sum M. regime indicator \\(s_t\\) either : regime probabilities non-zero requires regimes    positive number occurrences sample period, sparse potentially many regimes zero occurrences sample period   number regimes estimated. model selection also respect made using function specify_bsvar_mix.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARMIX.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian estimation of a Structural Vector Autoregression with shocks following \na finite mixture of normal components via Gibbs sampler — estimate.PosteriorBSVARMIX","text":"model, prior distributions, estimation algorithms proposed Woźniak, T., Droumaguet, M., (2022) Bayesian Assessment Identifying Restrictions Heteroskedastic Structural VARs analysis heteroskedastic SVAR models proposed : Lütkepohl, H., Woźniak, T., (2020) Bayesian Inference Structural Vector Autoregressions Identified Markov-Switching Heteroskedasticity. Journal Economic Dynamics Control 113, 103862, doi:10.1016/j.jedc.2020.103862 . Sampling generalised-normal full conditional posterior distribution matrix \\(B\\) implemented using Gibbs sampler : Waggoner, D.F., Zha, T., (2003) Gibbs sampler structural vector autoregressions. Journal Economic Dynamics Control, 28, 349--366, doi:10.1016/S0165-1889(02)00168-9 . Sampling multivariate normal full conditional posterior distribution \\(\\) matrix row implemented using sampler : Chan, J.C.C., Koop, G, Yu, X. (2021) Large Order-Invariant Bayesian VARs Stochastic Volatility. estimation mixture normals heteroskedasticity closely follows procedures described : Song, Y., Woźniak, T., (2021) Markov Switching. Oxford Research Encyclopedia Economics Finance, Oxford University Press, doi:10.1093/acrefore/9780190625979.013.174 . Frühwirth-Schnatter, S., (2006) Finite Mixture Markov Switching Models. Springer Series Statistics. New York: Springer, doi:10.1007/978-0-387-35768-3 . sparse model inspired : Malsiner-Walli, G., Frühwirth-Schnatter, S., Grün, B. (2016) Model-based clustering based sparse finite Gaussian mixtures. Statistics Computing, 26(1–2), 303--324, doi:10.1007/s11222-014-9500-2 . forward-filtering backward-sampling implemented following proposal : Chib, S. (1996) Calculating posterior distributions modal estimates Markov mixture models. Journal Econometrics, 75(1), 79–97, doi:10.1016/0304-4076(95)01770-4 .","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARMIX.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian estimation of a Structural Vector Autoregression with shocks following \na finite mixture of normal components via Gibbs sampler — estimate.PosteriorBSVARMIX","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARMIX.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian estimation of a Structural Vector Autoregression with shocks following \na finite mixture of normal components via Gibbs sampler — estimate.PosteriorBSVARMIX","text":"","code":"# simple workflow ############################################################ # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_mix$new(us_fiscal_lsuw, p = 1, M = 2) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 50) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar_mix$new(p = 1, M = 2) |>   estimate(S = 10) |>    estimate(S = 50) |>    compute_impulse_responses(horizon = 4) -> irf #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARMSH.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian estimation of a Structural Vector Autoregression with \nMarkov-switching heteroskedasticity via Gibbs sampler — estimate.PosteriorBSVARMSH","title":"Bayesian estimation of a Structural Vector Autoregression with \nMarkov-switching heteroskedasticity via Gibbs sampler — estimate.PosteriorBSVARMSH","text":"Estimates SVAR Markov-switching heteroskedasticity M regimes (MS(M)) proposed Woźniak & Droumaguet (2022). Implements Gibbs sampler proposed Waggoner & Zha (2003) structural matrix \\(B\\) equation--equation sampler Chan, Koop, & Yu (2021) autoregressive slope parameters \\(\\). Additionally, parameter matrices \\(\\) \\(B\\) follow Minnesota prior generalised-normal prior distributions respectively matrix-specific overall shrinkage parameters estimated thanks hierarchical prior distribution. MS model estimated using prior distributions algorithms proposed Woźniak & Droumaguet (2022). See section Details model equations.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARMSH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian estimation of a Structural Vector Autoregression with \nMarkov-switching heteroskedasticity via Gibbs sampler — estimate.PosteriorBSVARMSH","text":"","code":"# S3 method for PosteriorBSVARMSH estimate(specification, S, thin = 10, show_progress = TRUE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARMSH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian estimation of a Structural Vector Autoregression with \nMarkov-switching heteroskedasticity via Gibbs sampler — estimate.PosteriorBSVARMSH","text":"specification object class PosteriorBSVARMSH generated using estimate.BSVAR() function. setup facilitates continuation MCMC sampling starting last draw previous run. S positive integer, number posterior draws generated thin positive integer, specifying frequency MCMC output thinning show_progress logical value, TRUE estimation progress bar visible","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARMSH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian estimation of a Structural Vector Autoregression with \nMarkov-switching heteroskedasticity via Gibbs sampler — estimate.PosteriorBSVARMSH","text":"object class PosteriorBSVARMSH containing Bayesian estimation output containing two elements:  posterior list collection S draws posterior distribution generated via Gibbs sampler containing:  NxKxS array posterior draws matrix \\(\\) B NxNxS array posterior draws matrix \\(B\\) hyper 5xS matrix posterior draws hyper-parameters hierarchical prior distribution sigma2 NxMxS array posterior draws structural shocks conditional variances PR_TR MxMxS array posterior draws transition matrix. xi MxTxS array posterior draws regime allocation matrix. pi_0 MxS matrix posterior draws initial state probabilities sigma NxTxS array posterior draws structural shocks conditional standard deviations' series sample period last_draw object class BSVARMSH last draw current MCMC run starting value passed continuation MCMC estimation using estimate().","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARMSH.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian estimation of a Structural Vector Autoregression with \nMarkov-switching heteroskedasticity via Gibbs sampler — estimate.PosteriorBSVARMSH","text":"heteroskedastic SVAR model given reduced form equation: $$Y = AX + E$$ \\(Y\\) NxT matrix dependent variables, \\(X\\) KxT matrix explanatory variables,  \\(E\\) NxT matrix reduced form error terms, \\(\\) NxK matrix autoregressive slope coefficients parameters deterministic terms X. structural equation given $$= U$$ \\(U\\) NxT matrix structural form error terms, \\(B\\) NxN matrix contemporaneous relationships. Finally, structural shocks, \\(U\\), temporally contemporaneously independent jointly normally distributed zero mean. conditional variance nth shock time t given : $$Var_{t-1}[u_{n.t}] = s^2_{n.s_t}$$ \\(s_t\\) Markov process driving time-variability  regime-specific conditional variances structural shocks \\(s^2_{n.s_t}\\).  model, variances structural shocks sum M. Markov process \\(s_t\\) either: stationary, irreducible, aperiodic requires regimes    positive number occurrences sample period, sparse potentially many regimes zero occurrences sample period   number regimes estimated. model selection also respect made using function specify_bsvar_msh.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARMSH.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian estimation of a Structural Vector Autoregression with \nMarkov-switching heteroskedasticity via Gibbs sampler — estimate.PosteriorBSVARMSH","text":"model, prior distributions, estimation algorithms proposed Woźniak, T., Droumaguet, M., (2022) Bayesian Assessment Identifying Restrictions Heteroskedastic Structural VARs analysis heteroskedastic SVAR models proposed : Lütkepohl, H., Woźniak, T., (2020) Bayesian Inference Structural Vector Autoregressions Identified Markov-Switching Heteroskedasticity. Journal Economic Dynamics Control 113, 103862, doi:10.1016/j.jedc.2020.103862 . Sampling generalised-normal full conditional posterior distribution matrix \\(B\\) implemented using Gibbs sampler : Waggoner, D.F., Zha, T., (2003) Gibbs sampler structural vector autoregressions. Journal Economic Dynamics Control, 28, 349--366, doi:10.1016/S0165-1889(02)00168-9 . Sampling multivariate normal full conditional posterior distribution \\(\\) matrix row implemented using sampler : Chan, J.C.C., Koop, G, Yu, X. (2021) Large Order-Invariant Bayesian VARs Stochastic Volatility. estimation Markov-switching heteroskedasticity closely follows procedures described : Song, Y., Woźniak, T., (2021) Markov Switching. Oxford Research Encyclopedia Economics Finance, Oxford University Press, doi:10.1093/acrefore/9780190625979.013.174 . Frühwirth-Schnatter, S., (2006) Finite Mixture Markov Switching Models. Springer Series Statistics. New York: Springer, doi:10.1007/978-0-387-35768-3 . sparse model inspired : Malsiner-Walli, G., Frühwirth-Schnatter, S., Grün, B. (2016) Model-based clustering based sparse finite Gaussian mixtures. Statistics Computing, 26(1–2), 303--324, doi:10.1007/s11222-014-9500-2 . forward-filtering backward-sampling implemented following proposal : Chib, S. (1996) Calculating posterior distributions modal estimates Markov mixture models. Journal Econometrics, 75(1), 79–97, doi:10.1016/0304-4076(95)01770-4 .","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARMSH.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian estimation of a Structural Vector Autoregression with \nMarkov-switching heteroskedasticity via Gibbs sampler — estimate.PosteriorBSVARMSH","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARMSH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian estimation of a Structural Vector Autoregression with \nMarkov-switching heteroskedasticity via Gibbs sampler — estimate.PosteriorBSVARMSH","text":"","code":"# simple workflow ############################################################ # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_msh$new(us_fiscal_lsuw, p = 1, M = 2) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 50) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar_msh$new(p = 1, M = 2) |>   estimate(S = 10) |>    estimate(S = 50) |>    compute_impulse_responses(horizon = 4) -> irf #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARSV.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian estimation of a Structural Vector Autoregression with \nStochastic Volatility heteroskedasticity via Gibbs sampler — estimate.PosteriorBSVARSV","title":"Bayesian estimation of a Structural Vector Autoregression with \nStochastic Volatility heteroskedasticity via Gibbs sampler — estimate.PosteriorBSVARSV","text":"Estimates SVAR Stochastic Volatility (SV) heteroskedasticity  proposed Lütkepohl, Shang, Uzeda, Woźniak (2022). Implements Gibbs sampler proposed Waggoner & Zha (2003) structural matrix \\(B\\) equation--equation sampler  Chan, Koop, & Yu (2021) autoregressive slope parameters \\(\\). Additionally,  parameter matrices \\(\\) \\(B\\) follow Minnesota prior generalised-normal prior distributions  respectively matrix-specific overall shrinkage parameters estimated thanks hierarchical prior distribution.  SV model estimated using range techniques including:  simulation smoother, auxiliary mixture, ancillarity-sufficiency interweaving strategy,  generalised inverse Gaussian distribution summarised Kastner & Frühwirth-Schnatter (2014).  See section Details model equations.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARSV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian estimation of a Structural Vector Autoregression with \nStochastic Volatility heteroskedasticity via Gibbs sampler — estimate.PosteriorBSVARSV","text":"","code":"# S3 method for PosteriorBSVARSV estimate(specification, S, thin = 10, show_progress = TRUE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARSV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian estimation of a Structural Vector Autoregression with \nStochastic Volatility heteroskedasticity via Gibbs sampler — estimate.PosteriorBSVARSV","text":"specification object class PosteriorBSVARSV generated using estimate.BSVAR() function. setup facilitates continuation MCMC sampling starting last draw previous run. S positive integer, number posterior draws generated thin positive integer, specifying frequency MCMC output thinning show_progress logical value, TRUE estimation progress bar visible","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARSV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian estimation of a Structural Vector Autoregression with \nStochastic Volatility heteroskedasticity via Gibbs sampler — estimate.PosteriorBSVARSV","text":"object class PosteriorBSVARSV containing Bayesian estimation output containing two elements:  posterior list collection S draws posterior distribution generated via Gibbs sampler containing:  NxKxS array posterior draws matrix \\(\\) B NxNxS array posterior draws matrix \\(B\\) hyper 5xS matrix posterior draws hyper-parameters hierarchical prior distribution h NxTxS array posterior draws log-volatility processes rho NxS matrix posterior draws SV autoregressive parameters omega NxS matrix posterior draws SV process conditional standard deviations S NxTxS array posterior draws auxiliary mixture component indicators sigma2_omega NxS matrix posterior draws variances zero-mean normal prior omega s_ S-vector posterior draws scale gamma prior hierarchical prior sigma2_omega last_draw object class BSVARSV last draw current MCMC run starting value passed continuation MCMC estimation using estimate().","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARSV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian estimation of a Structural Vector Autoregression with \nStochastic Volatility heteroskedasticity via Gibbs sampler — estimate.PosteriorBSVARSV","text":"heteroskedastic SVAR model given reduced form equation: $$Y = AX + E$$ \\(Y\\) NxT matrix dependent variables, \\(X\\) KxT matrix explanatory variables,  \\(E\\) NxT matrix reduced form error terms, \\(\\) NxK matrix autoregressive slope coefficients parameters deterministic terms \\(X\\). structural equation given $$= U$$ \\(U\\) NxT matrix structural form error terms, \\(B\\) NxN matrix contemporaneous relationships. Finally, structural shocks, \\(U\\), temporally contemporaneously independent jointly normally distributed zero mean. Two alternative specifications conditional variance nth shock time t  can estimated: non-centred Stochastic Volatility Lütkepohl, Shang, Uzeda, Woźniak (2022)  centred Stochastic Volatility Chan, Koop, & Yu (2021). non-centred Stochastic Volatility Lütkepohl, Shang, Uzeda, Woźniak (2022)  selected setting argument centred_sv function specify_bsvar_sv$new() value FALSE. conditional variances given : $$Var_{t-1}[u_{n.t}] = exp(w_n h_{n.t})$$ \\(w_n\\) estimated conditional standard deviation log-conditional variance log-volatility process \\(h_{n.t}\\) follows autoregressive process: $$h_{n.t} = g_n h_{n.t-1} + v_{n.t}$$ \\(h_{n.0}=0\\), \\(g_n\\) autoregressive parameter \\(v_{n.t}\\) standard normal error term. centred Stochastic Volatility Chan, Koop, & Yu (2021) selected setting argument centred_sv function specify_bsvar_sv$new() value TRUE. conditional variances given : $$Var_{t-1}[u_{n.t}] = exp(h_{n.t})$$ log-conditional variances \\(h_{n.t}\\) follow autoregressive process: $$h_{n.t} = g_n h_{n.t-1} + v_{n.t}$$ \\(h_{n.0}=0\\), \\(g_n\\) autoregressive parameter \\(v_{n.t}\\) zero-mean normal error term variance \\(s_{v.n}^2\\).","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARSV.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian estimation of a Structural Vector Autoregression with \nStochastic Volatility heteroskedasticity via Gibbs sampler — estimate.PosteriorBSVARSV","text":"model, prior distributions, estimation algorithms proposed Lütkepohl, H., Shang, F., Uzeda, L., Woźniak, T. (2022) Partial Identification Heteroskedastic Structural VARs: Theory Bayesian Inference. Sampling generalised-normal full conditional posterior distribution matrix \\(B\\) implemented using Gibbs sampler : Waggoner, D.F., Zha, T., (2003) Gibbs sampler structural vector autoregressions. Journal Economic Dynamics Control, 28, 349--366, doi:10.1016/S0165-1889(02)00168-9 . Sampling multivariate normal full conditional posterior distribution \\(\\) matrix row implemented using sampler : Chan, J.C.C., Koop, G, Yu, X. (2021) Large Order-Invariant Bayesian VARs Stochastic Volatility. Many techniques employed estimation Stochastic Volatility model  summarised : Kastner, G. Frühwirth-Schnatter, S. (2014) Ancillarity-Sufficiency Interweaving Strategy (ASIS) Boosting MCMC  Estimation Stochastic Volatility Models. Computational Statistics & Data Analysis, 76, 408--423,  doi:10.1016/j.csda.2013.01.002 .","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARSV.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian estimation of a Structural Vector Autoregression with \nStochastic Volatility heteroskedasticity via Gibbs sampler — estimate.PosteriorBSVARSV","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.PosteriorBSVARSV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian estimation of a Structural Vector Autoregression with \nStochastic Volatility heteroskedasticity via Gibbs sampler — estimate.PosteriorBSVARSV","text":"","code":"# simple workflow ############################################################ # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_sv$new(us_fiscal_lsuw, p = 1) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 20) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 20 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar_sv$new(p = 1) |>   estimate(S = 10) |>    estimate(S = 10, thin = 2) |>    compute_impulse_responses(horizon = 4) -> irf #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 2nd draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian estimation of Structural Vector Autoregressions via Gibbs sampler — estimate","title":"Bayesian estimation of Structural Vector Autoregressions via Gibbs sampler — estimate","text":"Estimates homo- heteroskedastic SVAR models using Gibbs sampler proposed Waggoner & Zha (2003) structural matrix \\(B\\) equation--equation sampler Chan, Koop, & Yu (2021) autoregressive slope parameters \\(\\). Additionally, parameter matrices \\(\\) \\(B\\) follow Minnesota prior generalised-normal prior distributions respectively matrix-specific overall shrinkage parameters estimated using hierarchical prior distribution. variety models conditional variances possible including versions Stochastic Volatility Markov-switching heteroskedasticity. Non-normal specifications include finite sparse normal mixture model structural shocks. See section Details model equations.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian estimation of Structural Vector Autoregressions via Gibbs sampler — estimate","text":"","code":"estimate(specification, S, thin = 10, show_progress = TRUE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian estimation of Structural Vector Autoregressions via Gibbs sampler — estimate","text":"specification object class BSVAR, BSVARMSH, BSVARMIX, BSVARSV generated using one specify_bsvar* functions object class PosteriorBSVAR, PosteriorBSVARMSH, PosteriorBSVARMIX, PosteriorBSVARSV generated using function estimate. latter type input facilitates continuation MCMC sampling starting last draw previous run. S positive integer, number posterior draws generated thin positive integer, specifying frequency MCMC output thinning show_progress logical value, TRUE estimation progress bar visible","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian estimation of Structural Vector Autoregressions via Gibbs sampler — estimate","text":"object class PosteriorBSVAR, PosteriorBSVARMSH, PosteriorBSVARMIX, PosteriorBSVARSV containing Bayesian estimation output containing two elements: posterior list collection S draws posterior distribution generated via Gibbs sampler containing many arrays vectors whose selection depends model specification. last_draw object class BSVAR, BSVARMSH, BSVARMIX, BSVARSV last draw current MCMC run starting value passed continuation MCMC estimation using estimate().","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian estimation of Structural Vector Autoregressions via Gibbs sampler — estimate","text":"homoskedastic SVAR model given reduced form equation: $$Y = AX + E$$ \\(Y\\) NxT matrix dependent variables, \\(X\\) KxT matrix explanatory variables,  \\(E\\) NxT matrix reduced form error terms, \\(\\) NxK matrix autoregressive slope coefficients parameters deterministic terms \\(X\\). structural equation given $$= U$$ \\(U\\) NxT matrix structural form error terms, \\(B\\) NxN matrix contemporaneous relationships. structural shocks, U, temporally contemporaneously independent jointly normally distributed zero mean unit variances. various SVAR models estimated differ specification structural shocks variances. specification depends specify_bsvar* function used. different models include: homoskedastic model unit variances heteroskedastic model stationary Markov switching variances heteroskedastic model Stochastic Volatility process variances non-normal model finite mixture normal components component-specific variances heteroskedastic model sparse Markov switching variances number heteroskedastic components estimated non-normal model sparse mixture normal components component-specific variances number heteroskedastic components estimated","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian estimation of Structural Vector Autoregressions via Gibbs sampler — estimate","text":"Sampling generalised-normal full conditional posterior distribution matrix \\(B\\) implemented using Gibbs sampler : Waggoner, D.F., Zha, T., (2003) Gibbs sampler structural vector autoregressions. Journal Economic Dynamics Control, 28, 349--366, doi:10.1016/S0165-1889(02)00168-9 . Sampling multivariate normal full conditional posterior distribution \\(\\) matrix row implemented using sampler : Chan, J.C.C., Koop, G, Yu, X. (2021) Large Order-Invariant Bayesian VARs Stochastic Volatility.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian estimation of Structural Vector Autoregressions via Gibbs sampler — estimate","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/estimate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian estimation of Structural Vector Autoregressions via Gibbs sampler — estimate","text":"","code":"# simple workflow ############################################################ # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar$new(us_fiscal_lsuw, p = 4) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # run the burn-in burn_in        = estimate(specification, 50) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 100) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 100 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar$new(p = 1) |>   estimate(S = 50) |>    estimate(S = 100) |>    compute_impulse_responses(horizon = 8) -> irf #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 100 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVAR","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVAR","text":"Samples joint predictive density dependent variables forecast horizons  1 horizon specified argument function.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVAR","text":"","code":"# S3 method for PosteriorBSVAR forecast(posterior, horizon, exogenous_forecast = NULL)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVAR","text":"posterior posterior estimation outcome - object class  PosteriorBSVAR obtained running estimate function. horizon positive integer, specifying forecasting horizon. exogenous_forecast matrix dimension horizon x d containing  forecasted values exogenous variables.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVAR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVAR","text":"list class Forecasts containing draws predictive density. output list includes element: forecasts NxTxS array draws predictive density","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVAR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVAR","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVAR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVAR","text":"","code":"# upload data data(us_fiscal_lsuw)  # specify the model and set seed set.seed(123) specification  = specify_bsvar$new(us_fiscal_lsuw, p = 1) #> The identification is set to the default option of lower-triangular structural matrix.  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 20) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 20 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # sample from predictive density 1 year ahead predictive     = forecast(posterior, 4)  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar$new(p = 1) |>   estimate(S = 10) |>    estimate(S = 20) |>    forecast(horizon = 4) -> predictive #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 20 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVARMIX.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARMIX","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARMIX","text":"Samples joint predictive density dependent variables forecast horizons  1 horizon specified argument function.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVARMIX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARMIX","text":"","code":"# S3 method for PosteriorBSVARMIX forecast(posterior, horizon, exogenous_forecast = NULL)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVARMIX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARMIX","text":"posterior posterior estimation outcome - object class  PosteriorBSVARMIX obtained running estimate function. horizon positive integer, specifying forecasting horizon. exogenous_forecast matrix dimension horizon x d containing  forecasted values exogenous variables.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVARMIX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARMIX","text":"list class Forecasts containing draws predictive density heteroskedastic models draws predictive density  structural shocks conditional standard deviations. output elements include: forecasts NxTxS array draws predictive density forecasts_sigma provided heteroskedastic models, NxTxS array draws   predictive density structural shocks conditional standard deviations","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVARMIX.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARMIX","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVARMIX.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARMIX","text":"","code":"# upload data data(us_fiscal_lsuw)  # specify the model and set seed set.seed(123) specification  = specify_bsvar_mix$new(us_fiscal_lsuw, p = 1, M = 2) #> The identification is set to the default option of lower-triangular structural matrix.  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 20) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 20 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # sample from predictive density 1 year ahead predictive     = forecast(posterior, 4)  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar_mix$new(p = 1, M = 2) |>   estimate(S = 10) |>   estimate(S = 20) |>     forecast(horizon = 4) -> predictive #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 20 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVARMSH.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARMSH","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARMSH","text":"Samples joint predictive density dependent variables forecast horizons  1 horizon specified argument function.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVARMSH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARMSH","text":"","code":"# S3 method for PosteriorBSVARMSH forecast(posterior, horizon, exogenous_forecast = NULL)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVARMSH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARMSH","text":"posterior posterior estimation outcome - object class  PosteriorBSVARMSH obtained running estimate function. horizon positive integer, specifying forecasting horizon. exogenous_forecast matrix dimension horizon x d containing  forecasted values exogenous variables.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVARMSH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARMSH","text":"list class Forecasts containing draws predictive density heteroskedastic models draws predictive density  structural shocks conditional standard deviations. output elements include: forecasts NxTxS array draws predictive density forecasts_sigma provided heteroskedastic models, NxTxS array draws   predictive density structural shocks conditional standard deviations","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVARMSH.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARMSH","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVARMSH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARMSH","text":"","code":"# upload data data(us_fiscal_lsuw)  # specify the model and set seed set.seed(123) specification  = specify_bsvar_msh$new(us_fiscal_lsuw, p = 1, M = 2) #> The identification is set to the default option of lower-triangular structural matrix.  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 20) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 20 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # sample from predictive density 1 year ahead predictive     = forecast(posterior, 4)  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar_msh$new(p = 1, M = 2) |>   estimate(S = 10) |>    estimate(S = 20) |>    forecast(horizon = 4) -> predictive #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 20 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVARSV.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARSV","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARSV","text":"Samples joint predictive density dependent variables forecast horizons  1 horizon specified argument function.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVARSV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARSV","text":"","code":"# S3 method for PosteriorBSVARSV forecast(posterior, horizon, exogenous_forecast = NULL)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVARSV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARSV","text":"posterior posterior estimation outcome - object class  PosteriorBSVARSV obtained running estimate function. horizon positive integer, specifying forecasting horizon. exogenous_forecast matrix dimension horizon x d containing  forecasted values exogenous variables.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVARSV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARSV","text":"list class Forecasts containing draws predictive density heteroskedastic models draws predictive density  structural shocks conditional standard deviations. output elements include: forecasts NxTxS array draws predictive density forecasts_sigma provided heteroskedastic models, NxTxS array draws   predictive density structural shocks conditional standard deviations","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVARSV.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARSV","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.PosteriorBSVARSV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecasting using Structural Vector Autoregression — forecast.PosteriorBSVARSV","text":"","code":"# upload data data(us_fiscal_lsuw)  # specify the model and set seed set.seed(123) specification  = specify_bsvar_sv$new(us_fiscal_lsuw, p = 1) #> The identification is set to the default option of lower-triangular structural matrix.  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 10, thin = 2) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 2nd draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # sample from predictive density 1 year ahead predictive     = forecast(posterior, 4)  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar_sv$new(p = 1) |>   estimate(S = 10) |>   estimate(S = 10, thin = 2) |>     forecast(horizon = 4) -> predictive #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 2nd draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecasting using Structural Vector Autoregression — forecast","title":"Forecasting using Structural Vector Autoregression — forecast","text":"Samples joint predictive density dependent variables forecast horizons  1 horizon specified argument function.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecasting using Structural Vector Autoregression — forecast","text":"","code":"forecast(posterior, horizon, exogenous_forecast)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecasting using Structural Vector Autoregression — forecast","text":"posterior posterior estimation outcome - object either classes:  PosteriorBSVAR, PosteriorBSVARMSH, PosteriorBSVARMIX, PosteriorBSVARSV obtained running estimate function. horizon positive integer, specifying forecasting horizon. exogenous_forecast matrix dimension horizon x d containing  forecasted values exogenous variables.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecasting using Structural Vector Autoregression — forecast","text":"list class Forecasts containing draws predictive density heteroskedastic models draws predictive density  structural shocks conditional standard deviations. output elements include: forecasts NxTxS array draws predictive density forecasts_sigma provided heteroskedastic models, NxTxS array draws   predictive density structural shocks conditional standard deviations","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Forecasting using Structural Vector Autoregression — forecast","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/forecast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecasting using Structural Vector Autoregression — forecast","text":"","code":"# upload data data(us_fiscal_lsuw)  # specify the model and set seed set.seed(123) specification  = specify_bsvar$new(us_fiscal_lsuw, p = 1) #> The identification is set to the default option of lower-triangular structural matrix.  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 20) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 20 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # sample from predictive density 1 year ahead predictive     = forecast(posterior, 4)  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar$new(p = 1) |>   estimate(S = 10) |>    estimate(S = 20) |>    forecast(horizon = 4) -> predictive #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 20 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/normalise_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Waggoner & Zha (2003) row signs normalisation of the posterior draws for matrix \\(B\\) — normalise_posterior","title":"Waggoner & Zha (2003) row signs normalisation of the posterior draws for matrix \\(B\\) — normalise_posterior","text":"Normalises sign rows matrix \\(B\\) MCMC draws,   provided first argument posterior_B, relative matrix  B_hat, provided second argument function. implemented  procedure proposed Waggoner, Zha (2003) normalises MCMC output  optimal way leading unimodal posterior. normalised MCMC output   suitable computations posterior characteristics \\(B\\)  matrix elements functions impulse response functions   economically interpretable values.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/normalise_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Waggoner & Zha (2003) row signs normalisation of the posterior draws for matrix \\(B\\) — normalise_posterior","text":"","code":"normalise_posterior(posterior, B_hat)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/normalise_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Waggoner & Zha (2003) row signs normalisation of the posterior draws for matrix \\(B\\) — normalise_posterior","text":"posterior posterior estimation outcome - object either classes:  PosteriorBSVAR, PosteriorBSVARMSH, PosteriorBSVARMIX, PosteriorBSVARSV containing, amongst draws, S draws posterior  distribution NxN matrix contemporaneous relationships \\(B\\).  draws normalised respect : B_hat NxN matrix specified user desired row signs","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/normalise_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Waggoner & Zha (2003) row signs normalisation of the posterior draws for matrix \\(B\\) — normalise_posterior","text":"Nothing. normalised elements overwrite corresponding elements  first argument posterior_B reference.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/normalise_posterior.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Waggoner & Zha (2003) row signs normalisation of the posterior draws for matrix \\(B\\) — normalise_posterior","text":"Waggoner, D.F., Zha, T., (2003) Likelihood Preserving Normalization Multiple Equation Models.  Journal Econometrics, 114(2), 329--47, doi:10.1016/S0304-4076(03)00087-3 .","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/normalise_posterior.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Waggoner & Zha (2003) row signs normalisation of the posterior draws for matrix \\(B\\) — normalise_posterior","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/normalise_posterior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Waggoner & Zha (2003) row signs normalisation of the posterior draws for matrix \\(B\\) — normalise_posterior","text":"","code":"# upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_sv$new(us_fiscal_lsuw, p = 4) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 10, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # normalise the posterior BB            = posterior$last_draw$starting_values$B      # get the last draw of B B_hat         = diag((-1) * sign(diag(BB))) %*% BB         # set negative diagonal elements normalise_posterior(posterior, B_hat)                      # draws in posterior are normalised"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"class BSVAR presents complete specification homoskedastic bsvar model.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"p non-negative integer specifying autoregressive lag order model. identification object IdentificationBSVAR identifying restrictions. prior object PriorBSVAR prior specification. data_matrices object DataMatricesBSVAR data matrices. starting_values object StartingValuesBSVAR starting values.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"specify_bsvar$new() specify_bsvar$get_data_matrices() specify_bsvar$get_identification() specify_bsvar$get_prior() specify_bsvar$get_starting_values() specify_bsvar$clone()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"Create new specification homoskedastic bsvar model BSVAR.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"","code":"specify_bsvar$new(   data,   p = 1L,   B,   exogenous = NULL,   stationary = rep(FALSE, ncol(data)) )"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"data (T+p)xN matrix time series data. p positive integer providing model's autoregressive lag order. B logical NxN matrix containing value TRUE elements  structural matrix \\(B\\) estimated value FALSE exclusion restrictions  set zero. exogenous (T+p)xd matrix exogenous variables. stationary N logical vector - element set FALSE sets  prior mean autoregressive parameters Nth equation white noise process,  otherwise random walk.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"new complete specification homoskedastic bsvar model BSVAR.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"method-get-data-matrices-","dir":"Reference","previous_headings":"","what":"Method get_data_matrices()","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"Returns data matrices DataMatricesBSVAR object.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"","code":"specify_bsvar$get_data_matrices()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"","code":"data(us_fiscal_lsuw) spec = specify_bsvar$new(    data = us_fiscal_lsuw,    p = 4 ) spec$get_data_matrices()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"method-get-identification-","dir":"Reference","previous_headings":"","what":"Method get_identification()","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"Returns identifying restrictions IdentificationBSVARs object.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"","code":"specify_bsvar$get_identification()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"","code":"data(us_fiscal_lsuw) spec = specify_bsvar$new(    data = us_fiscal_lsuw,    p = 4 ) spec$get_identification()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"method-get-prior-","dir":"Reference","previous_headings":"","what":"Method get_prior()","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"Returns prior specification PriorBSVAR object.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"","code":"specify_bsvar$get_prior()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"","code":"data(us_fiscal_lsuw) spec = specify_bsvar$new(    data = us_fiscal_lsuw,    p = 4 ) spec$get_prior()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"method-get-starting-values-","dir":"Reference","previous_headings":"","what":"Method get_starting_values()","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"Returns starting values StartingValuesBSVAR object.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"","code":"specify_bsvar$get_starting_values()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"","code":"data(us_fiscal_lsuw) spec = specify_bsvar$new(    data = us_fiscal_lsuw,    p = 4 ) spec$get_starting_values()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"objects class cloneable method.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"","code":"specify_bsvar$clone(deep = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"deep Whether make deep clone.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing the specification of the homoskedastic BSVAR model — specify_bsvar","text":"","code":"data(us_fiscal_lsuw) spec = specify_bsvar$new(    data = us_fiscal_lsuw,    p = 4 ) #> The identification is set to the default option of lower-triangular structural matrix.   ## ------------------------------------------------ ## Method `specify_bsvar$get_data_matrices` ## ------------------------------------------------  data(us_fiscal_lsuw) spec = specify_bsvar$new(    data = us_fiscal_lsuw,    p = 4 ) #> The identification is set to the default option of lower-triangular structural matrix. spec$get_data_matrices() #> <DataMatricesBSVAR> #>   Public: #>     X: -10.1343564647317 -10.6984545551066 -8.38991239793723 -1 ... #>     Y: -10.0349168188759 -10.5118408909662 -8.37355884926343 -1 ... #>     clone: function (deep = FALSE)  #>     get_data_matrices: function ()  #>     initialize: function (data, p = 1L, exogenous = NULL)    ## ------------------------------------------------ ## Method `specify_bsvar$get_identification` ## ------------------------------------------------  data(us_fiscal_lsuw) spec = specify_bsvar$new(    data = us_fiscal_lsuw,    p = 4 ) #> The identification is set to the default option of lower-triangular structural matrix. spec$get_identification() #> <IdentificationBSVARs> #>   Public: #>     VB: list #>     clone: function (deep = FALSE)  #>     get_identification: function ()  #>     initialize: function (N, B)  #>     set_identification: function (N, B)    ## ------------------------------------------------ ## Method `specify_bsvar$get_prior` ## ------------------------------------------------  data(us_fiscal_lsuw) spec = specify_bsvar$new(    data = us_fiscal_lsuw,    p = 4 ) #> The identification is set to the default option of lower-triangular structural matrix. spec$get_prior() #> <PriorBSVAR> #>   Public: #>     A: 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0  ... #>     A_V_inv: 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0  ... #>     B_V_inv: 1 0 0 0 1 0 0 0 1 #>     B_nu: 3 #>     clone: function (deep = FALSE)  #>     get_prior: function ()  #>     hyper_a_A: 10 #>     hyper_a_B: 10 #>     hyper_nu_A: 10 #>     hyper_nu_AA: 10 #>     hyper_nu_B: 10 #>     hyper_nu_BB: 1 #>     hyper_s_AA: 10 #>     hyper_s_BB: 100 #>     initialize: function (N, p, d = 0, stationary = rep(FALSE, N))    ## ------------------------------------------------ ## Method `specify_bsvar$get_starting_values` ## ------------------------------------------------  data(us_fiscal_lsuw) spec = specify_bsvar$new(    data = us_fiscal_lsuw,    p = 4 ) #> The identification is set to the default option of lower-triangular structural matrix. spec$get_starting_values() #> <StartingValuesBSVAR> #>   Public: #>     A: 0.111728814896196 0 0 0 0.735925396205857 0 0 0 0.188706 ... #>     B: 1 0 0 0 1 0 0 0 1 #>     clone: function (deep = FALSE)  #>     get_starting_values: function ()  #>     hyper: 10 10 10 10 10 10 10 10 10 10 10 10 10 10 #>     initialize: function (N, p, d = 0)  #>     set_starting_values: function (last_draw)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_mix.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class representing the specification of the BSVAR model with a zero-mean mixture of normals model for structural shocks. — specify_bsvar_mix","title":"R6 Class representing the specification of the BSVAR model with a zero-mean mixture of normals model for structural shocks. — specify_bsvar_mix","text":"class BSVARMIX presents complete specification BSVAR model zero-mean mixture normals model structural shocks.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_mix.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"R6 Class representing the specification of the BSVAR model with a zero-mean mixture of normals model for structural shocks. — specify_bsvar_mix","text":"bsvars::BSVARMSH -> BSVARMIX","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_mix.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class representing the specification of the BSVAR model with a zero-mean mixture of normals model for structural shocks. — specify_bsvar_mix","text":"p non-negative integer specifying autoregressive lag order model. identification object IdentificationBSVARs identifying restrictions. prior object PriorBSVARMIX prior specification. data_matrices object DataMatricesBSVAR data matrices. starting_values object StartingValuesBSVARMIX starting values. finiteM logical value - true finite mixture model estimated. Otherwise, sparse mixture model estimated M=20 number visited states estimated.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_mix.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"R6 Class representing the specification of the BSVAR model with a zero-mean mixture of normals model for structural shocks. — specify_bsvar_mix","text":"bsvars::BSVARMSH$get_data_matrices() bsvars::BSVARMSH$get_identification() bsvars::BSVARMSH$get_prior() bsvars::BSVARMSH$get_starting_values()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_mix.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class representing the specification of the BSVAR model with a zero-mean mixture of normals model for structural shocks. — specify_bsvar_mix","text":"specify_bsvar_mix$new() specify_bsvar_mix$clone()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_mix.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class representing the specification of the BSVAR model with a zero-mean mixture of normals model for structural shocks. — specify_bsvar_mix","text":"Create new specification BSVAR model zero-mean mixture normals model structural shocks, BSVARMIX.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_mix.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the BSVAR model with a zero-mean mixture of normals model for structural shocks. — specify_bsvar_mix","text":"","code":"specify_bsvar_mix$new(   data,   p = 1L,   M,   B,   exogenous = NULL,   stationary = rep(FALSE, ncol(data)),   finiteM = TRUE )"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_mix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing the specification of the BSVAR model with a zero-mean mixture of normals model for structural shocks. — specify_bsvar_mix","text":"data (T+p)xN matrix time series data. p positive integer providing model's autoregressive lag order. M integer greater 1 - number components mixture normals. B logical NxN matrix containing value TRUE elements structural matrix \\(B\\) estimated value FALSE exclusion restrictions set zero. exogenous (T+p)xd matrix exogenous variables. stationary N logical vector - element set FALSE sets prior mean autoregressive parameters Nth equation white noise process, otherwise random walk. finiteM logical value - true finite mixture model estimated. Otherwise, sparse mixture model estimated M=20 number visited states estimated.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_mix.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class representing the specification of the BSVAR model with a zero-mean mixture of normals model for structural shocks. — specify_bsvar_mix","text":"new complete specification bsvar model zero-mean mixture normals model structural shocks, BSVARMIX.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_mix.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class representing the specification of the BSVAR model with a zero-mean mixture of normals model for structural shocks. — specify_bsvar_mix","text":"objects class cloneable method.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_mix.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the BSVAR model with a zero-mean mixture of normals model for structural shocks. — specify_bsvar_mix","text":"","code":"specify_bsvar_mix$clone(deep = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_mix.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing the specification of the BSVAR model with a zero-mean mixture of normals model for structural shocks. — specify_bsvar_mix","text":"deep Whether make deep clone.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_mix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing the specification of the BSVAR model with a zero-mean mixture of normals model for structural shocks. — specify_bsvar_mix","text":"","code":"data(us_fiscal_lsuw) spec = specify_bsvar_mix$new(    data = us_fiscal_lsuw,    p = 4,    M = 2 ) #> The identification is set to the default option of lower-triangular structural matrix."},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"class BSVARMSH presents complete specification BSVAR model Markov Switching Heteroskedasticity.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"p non-negative integer specifying autoregressive lag order model. identification object IdentificationBSVARs identifying restrictions. prior object PriorBSVARMSH prior specification. data_matrices object DataMatricesBSVAR data matrices. starting_values object StartingValuesBSVARMSH starting values. finiteM logical value - true stationary Markov switching model estimated. Otherwise, sparse Markov switching model estimated M=20 number visited states estimated.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"specify_bsvar_msh$new() specify_bsvar_msh$get_data_matrices() specify_bsvar_msh$get_identification() specify_bsvar_msh$get_prior() specify_bsvar_msh$get_starting_values() specify_bsvar_msh$clone()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"Create new specification BSVAR model Markov Switching Heteroskedasticity, BSVARMSH.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"","code":"specify_bsvar_msh$new(   data,   p = 1L,   M,   B,   exogenous = NULL,   stationary = rep(FALSE, ncol(data)),   finiteM = TRUE )"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"data (T+p)xN matrix time series data. p positive integer providing model's autoregressive lag order. M integer greater 1 - number Markov process' heteroskedastic regimes. B logical NxN matrix containing value TRUE elements structural matrix \\(B\\) estimated value FALSE exclusion restrictions set zero. exogenous (T+p)xd matrix exogenous variables. stationary N logical vector - element set FALSE sets prior mean autoregressive parameters Nth equation white noise process, otherwise random walk. finiteM logical value - true stationary Markov switching model estimated. Otherwise, sparse Markov switching model estimated M=20 number visited states estimated.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"new complete specification bsvar model Markov Switching Heteroskedasticity, BSVARMSH.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"method-get-data-matrices-","dir":"Reference","previous_headings":"","what":"Method get_data_matrices()","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"Returns data matrices DataMatricesBSVAR object.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"","code":"specify_bsvar_msh$get_data_matrices()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"","code":"data(us_fiscal_lsuw) spec = specify_bsvar_msh$new(    data = us_fiscal_lsuw,    p = 4,    M = 2 ) spec$get_data_matrices()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"method-get-identification-","dir":"Reference","previous_headings":"","what":"Method get_identification()","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"Returns identifying restrictions IdentificationBSVARs object.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"","code":"specify_bsvar_msh$get_identification()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"","code":"data(us_fiscal_lsuw) spec = specify_bsvar_msh$new(    data = us_fiscal_lsuw,    p = 4,    M = 2 ) spec$get_identification()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"method-get-prior-","dir":"Reference","previous_headings":"","what":"Method get_prior()","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"Returns prior specification PriorBSVARMSH object.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"","code":"specify_bsvar_msh$get_prior()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"","code":"data(us_fiscal_lsuw) spec = specify_bsvar_msh$new(    data = us_fiscal_lsuw,    p = 4,    M = 2 ) spec$get_prior()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"method-get-starting-values-","dir":"Reference","previous_headings":"","what":"Method get_starting_values()","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"Returns starting values StartingValuesBSVARMSH object.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"","code":"specify_bsvar_msh$get_starting_values()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"","code":"data(us_fiscal_lsuw) spec = specify_bsvar_msh$new(    data = us_fiscal_lsuw,    p = 4,    M = 2 ) spec$get_starting_values()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"objects class cloneable method.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"","code":"specify_bsvar_msh$clone(deep = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"deep Whether make deep clone.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_msh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing the specification of the BSVAR model with Markov Switching Heteroskedasticity. — specify_bsvar_msh","text":"","code":"data(us_fiscal_lsuw) spec = specify_bsvar_msh$new(    data = us_fiscal_lsuw,    p = 4,    M = 2 ) #> The identification is set to the default option of lower-triangular structural matrix.   ## ------------------------------------------------ ## Method `specify_bsvar_msh$get_data_matrices` ## ------------------------------------------------  data(us_fiscal_lsuw) spec = specify_bsvar_msh$new(    data = us_fiscal_lsuw,    p = 4,    M = 2 ) #> The identification is set to the default option of lower-triangular structural matrix. spec$get_data_matrices() #> <DataMatricesBSVAR> #>   Public: #>     X: -10.1343564647317 -10.6984545551066 -8.38991239793723 -1 ... #>     Y: -10.0349168188759 -10.5118408909662 -8.37355884926343 -1 ... #>     clone: function (deep = FALSE)  #>     get_data_matrices: function ()  #>     initialize: function (data, p = 1L, exogenous = NULL)    ## ------------------------------------------------ ## Method `specify_bsvar_msh$get_identification` ## ------------------------------------------------  data(us_fiscal_lsuw) spec = specify_bsvar_msh$new(    data = us_fiscal_lsuw,    p = 4,    M = 2 ) #> The identification is set to the default option of lower-triangular structural matrix. spec$get_identification() #> <IdentificationBSVARs> #>   Public: #>     VB: list #>     clone: function (deep = FALSE)  #>     get_identification: function ()  #>     initialize: function (N, B)  #>     set_identification: function (N, B)    ## ------------------------------------------------ ## Method `specify_bsvar_msh$get_prior` ## ------------------------------------------------  data(us_fiscal_lsuw) spec = specify_bsvar_msh$new(    data = us_fiscal_lsuw,    p = 4,    M = 2 ) #> The identification is set to the default option of lower-triangular structural matrix. spec$get_prior() #> <PriorBSVARMSH> #>   Inherits from: <PriorBSVAR> #>   Public: #>     A: 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0  ... #>     A_V_inv: 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0  ... #>     B_V_inv: 1 0 0 0 1 0 0 0 1 #>     B_nu: 3 #>     PR_TR: 1 1 1 1 #>     clone: function (deep = FALSE)  #>     get_prior: function ()  #>     hyper_a_A: 10 #>     hyper_a_B: 10 #>     hyper_nu_A: 10 #>     hyper_nu_AA: 10 #>     hyper_nu_B: 10 #>     hyper_nu_BB: 1 #>     hyper_s_AA: 10 #>     hyper_s_BB: 100 #>     initialize: function (N, p, d = 0, M, stationary = rep(FALSE, N))  #>     sigma_nu: 3 #>     sigma_s: 1   ## ------------------------------------------------ ## Method `specify_bsvar_msh$get_starting_values` ## ------------------------------------------------  data(us_fiscal_lsuw) spec = specify_bsvar_msh$new(    data = us_fiscal_lsuw,    p = 4,    M = 2 ) #> The identification is set to the default option of lower-triangular structural matrix. spec$get_starting_values() #> <StartingValuesBSVARMSH> #>   Inherits from: <StartingValuesBSVAR> #>   Public: #>     A: 0.548010870814323 0 0 0 0.828812795691192 0 0 0 0.125805 ... #>     B: 1 0 0 0 1 0 0 0 1 #>     PR_TR: 1 0 0 1 #>     clone: function (deep = FALSE)  #>     get_starting_values: function ()  #>     hyper: 10 10 10 10 10 10 10 10 10 10 10 10 10 10 #>     initialize: function (N, p, M, T, d = 0, finiteM = TRUE)  #>     pi_0: 0.5 0.5 #>     set_starting_values: function (last_draw)  #>     sigma2: 1 1 1 1 1 1 #>     xi: 1 0 1 0 1 0 0 1 0 1 0 1 0 1 1 0 1 0 0 1 1 0 0 1 1 0 0 1  ..."},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"class BSVARSV presents complete specification BSVAR model Stochastic Volatility heteroskedasticity.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"p non-negative integer specifying autoregressive lag order model. identification object IdentificationBSVARs identifying restrictions. prior object PriorBSVARSV prior specification. data_matrices object DataMatricesBSVAR data matrices. starting_values object StartingValuesBSVARSV starting values. centred_sv logical value - true centred parameterisation Stochastic Volatility process estimated. Otherwise, non-centred parameterisation estimated. See Lütkepohl, Shang, Uzeda, Woźniak (2022) info.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"specify_bsvar_sv$new() specify_bsvar_sv$get_data_matrices() specify_bsvar_sv$get_identification() specify_bsvar_sv$get_prior() specify_bsvar_sv$get_starting_values() specify_bsvar_sv$clone()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"Create new specification BSVAR model Stochastic Volatility heteroskedasticity, BSVARSV.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"","code":"specify_bsvar_sv$new(   data,   p = 1L,   B,   exogenous = NULL,   centred_sv = FALSE,   stationary = rep(FALSE, ncol(data)) )"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"data (T+p)xN matrix time series data. p positive integer providing model's autoregressive lag order. B logical NxN matrix containing value TRUE elements structural matrix \\(B\\) estimated value FALSE exclusion restrictions set zero. exogenous (T+p)xd matrix exogenous variables. centred_sv logical value. FALSE non-centred Stochastic Volatility processes conditional variances estimated. Otherwise, centred process estimated. stationary N logical vector - element set FALSE sets prior mean autoregressive parameters Nth equation white noise process, otherwise random walk.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"new complete specification bsvar model Stochastic Volatility heteroskedasticity, BSVARSV.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"method-get-data-matrices-","dir":"Reference","previous_headings":"","what":"Method get_data_matrices()","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"Returns data matrices DataMatricesBSVAR object.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"","code":"specify_bsvar_sv$get_data_matrices()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"","code":"data(us_fiscal_lsuw) spec = specify_bsvar_sv$new(    data = us_fiscal_lsuw,    p = 4 ) spec$get_data_matrices()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"method-get-identification-","dir":"Reference","previous_headings":"","what":"Method get_identification()","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"Returns identifying restrictions IdentificationBSVARs object.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"","code":"specify_bsvar_sv$get_identification()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"","code":"data(us_fiscal_lsuw) spec = specify_bsvar_sv$new(    data = us_fiscal_lsuw,    p = 4 ) spec$get_identification()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"method-get-prior-","dir":"Reference","previous_headings":"","what":"Method get_prior()","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"Returns prior specification PriorBSVARSV object.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"","code":"specify_bsvar_sv$get_prior()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"","code":"data(us_fiscal_lsuw) spec = specify_bsvar_sv$new(    data = us_fiscal_lsuw,    p = 4 ) spec$get_prior()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"method-get-starting-values-","dir":"Reference","previous_headings":"","what":"Method get_starting_values()","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"Returns starting values StartingValuesBSVARSV object.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"","code":"specify_bsvar_sv$get_starting_values()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"","code":"data(us_fiscal_lsuw) spec = specify_bsvar_sv$new(    data = us_fiscal_lsuw,    p = 4 ) spec$get_starting_values()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"objects class cloneable method.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"","code":"specify_bsvar_sv$clone(deep = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"deep Whether make deep clone.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_bsvar_sv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing the specification of the BSVAR model with Stochastic Volatility heteroskedasticity. — specify_bsvar_sv","text":"","code":"data(us_fiscal_lsuw) spec = specify_bsvar_sv$new(    data = us_fiscal_lsuw,    p = 4 ) #> The identification is set to the default option of lower-triangular structural matrix.   ## ------------------------------------------------ ## Method `specify_bsvar_sv$get_data_matrices` ## ------------------------------------------------  data(us_fiscal_lsuw) spec = specify_bsvar_sv$new(    data = us_fiscal_lsuw,    p = 4 ) #> The identification is set to the default option of lower-triangular structural matrix. spec$get_data_matrices() #> <DataMatricesBSVAR> #>   Public: #>     X: -10.1343564647317 -10.6984545551066 -8.38991239793723 -1 ... #>     Y: -10.0349168188759 -10.5118408909662 -8.37355884926343 -1 ... #>     clone: function (deep = FALSE)  #>     get_data_matrices: function ()  #>     initialize: function (data, p = 1L, exogenous = NULL)    ## ------------------------------------------------ ## Method `specify_bsvar_sv$get_identification` ## ------------------------------------------------  data(us_fiscal_lsuw) spec = specify_bsvar_sv$new(    data = us_fiscal_lsuw,    p = 4 ) #> The identification is set to the default option of lower-triangular structural matrix. spec$get_identification() #> <IdentificationBSVARs> #>   Public: #>     VB: list #>     clone: function (deep = FALSE)  #>     get_identification: function ()  #>     initialize: function (N, B)  #>     set_identification: function (N, B)    ## ------------------------------------------------ ## Method `specify_bsvar_sv$get_prior` ## ------------------------------------------------  data(us_fiscal_lsuw) spec = specify_bsvar_sv$new(    data = us_fiscal_lsuw,    p = 4 ) #> The identification is set to the default option of lower-triangular structural matrix. spec$get_prior() #> <PriorBSVARSV> #>   Inherits from: <PriorBSVAR> #>   Public: #>     A: 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0  ... #>     A_V_inv: 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0  ... #>     B_V_inv: 1 0 0 0 1 0 0 0 1 #>     B_nu: 3 #>     clone: function (deep = FALSE)  #>     get_prior: function ()  #>     hyper_a_A: 10 #>     hyper_a_B: 10 #>     hyper_nu_A: 10 #>     hyper_nu_AA: 10 #>     hyper_nu_B: 10 #>     hyper_nu_BB: 1 #>     hyper_s_AA: 10 #>     hyper_s_BB: 100 #>     initialize: function (N, p, d = 0, stationary = rep(FALSE, N))  #>     sv_a_: 1 #>     sv_s_: 0.1   ## ------------------------------------------------ ## Method `specify_bsvar_sv$get_starting_values` ## ------------------------------------------------  data(us_fiscal_lsuw) spec = specify_bsvar_sv$new(    data = us_fiscal_lsuw,    p = 4 ) #> The identification is set to the default option of lower-triangular structural matrix. spec$get_starting_values() #> <StartingValuesBSVARSV> #>   Inherits from: <StartingValuesBSVAR> #>   Public: #>     A: 0.559641470201313 0 0 0 0.0537743552122265 0 0 0 0.97352 ... #>     B: 1 0 0 0 1 0 0 0 1 #>     S: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1  ... #>     clone: function (deep = FALSE)  #>     get_starting_values: function ()  #>     h: -0.00516522327771696 0.00748301953798127 -0.011032015094 ... #>     hyper: 10 10 10 10 10 10 10 10 10 10 10 10 10 10 #>     initialize: function (N, p, T, d = 0)  #>     omega: 0.1 0.1 0.1 #>     rho: 0.5 0.5 0.5 #>     s_: 0.05 0.05 0.05 #>     set_starting_values: function (last_draw)  #>     sigma2_omega: 1 1 1 #>     sigma2v: 0.01 0.01 0.01"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_data_matrices.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class Representing DataMatricesBSVAR — specify_data_matrices","title":"R6 Class Representing DataMatricesBSVAR — specify_data_matrices","text":"class DataMatricesBSVAR presents data matrices dependent variables, \\(Y\\),  regressors, \\(X\\), homoskedastic bsvar model.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_data_matrices.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class Representing DataMatricesBSVAR — specify_data_matrices","text":"Y NxT matrix dependent variables, \\(Y\\). X KxT matrix regressors, \\(X\\).","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_data_matrices.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class Representing DataMatricesBSVAR — specify_data_matrices","text":"specify_data_matrices$new() specify_data_matrices$get_data_matrices() specify_data_matrices$clone()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_data_matrices.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class Representing DataMatricesBSVAR — specify_data_matrices","text":"Create new data matrices DataMatricesBSVAR.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_data_matrices.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing DataMatricesBSVAR — specify_data_matrices","text":"","code":"specify_data_matrices$new(data, p = 1L, exogenous = NULL)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_data_matrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing DataMatricesBSVAR — specify_data_matrices","text":"data (T+p)xN matrix time series data. p positive integer providing model's autoregressive lag order. exogenous (T+p)xd matrix exogenous variables.  matrix include constant term.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_data_matrices.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Representing DataMatricesBSVAR — specify_data_matrices","text":"New data matrices DataMatricesBSVAR.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_data_matrices.html","id":"method-get-data-matrices-","dir":"Reference","previous_headings":"","what":"Method get_data_matrices()","title":"R6 Class Representing DataMatricesBSVAR — specify_data_matrices","text":"Returns data matrices DataMatricesBSVAR list.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_data_matrices.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing DataMatricesBSVAR — specify_data_matrices","text":"","code":"specify_data_matrices$get_data_matrices()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_data_matrices.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing DataMatricesBSVAR — specify_data_matrices","text":"","code":"data(us_fiscal_lsuw) YX = specify_data_matrices$new(data = us_fiscal_lsuw, p = 4) YX$get_data_matrices()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_data_matrices.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class Representing DataMatricesBSVAR — specify_data_matrices","text":"objects class cloneable method.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_data_matrices.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing DataMatricesBSVAR — specify_data_matrices","text":"","code":"specify_data_matrices$clone(deep = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_data_matrices.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing DataMatricesBSVAR — specify_data_matrices","text":"deep Whether make deep clone.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_data_matrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing DataMatricesBSVAR — specify_data_matrices","text":"","code":"data(us_fiscal_lsuw) YX = specify_data_matrices$new(data = us_fiscal_lsuw, p = 4) dim(YX$Y); dim(YX$X) #> [1]   3 284 #> [1]  13 284   ## ------------------------------------------------ ## Method `specify_data_matrices$get_data_matrices` ## ------------------------------------------------  data(us_fiscal_lsuw) YX = specify_data_matrices$new(data = us_fiscal_lsuw, p = 4) YX$get_data_matrices() #> $Y #>           [,1]      [,2]       [,3]       [,4]       [,5]       [,6]       [,7] #> ttr -10.034917 -10.08790 -10.102063 -10.055537 -10.053020 -10.054023 -10.062146 #> gs  -10.511841 -10.35389 -10.201884 -10.127112 -10.101107 -10.052462 -10.034579 #> gdp  -8.373559  -8.35456  -8.334483  -8.334229  -8.324791  -8.324028  -8.319992 #>           [,8]       [,9]      [,10]      [,11]      [,12]      [,13] #> ttr -10.021264 -10.005725 -10.004156 -10.026441 -10.109065 -10.159222 #> gs  -10.012415  -9.998526  -9.970255 -10.004780 -10.017202 -10.064961 #> gdp  -8.291118  -8.281721  -8.276425  -8.284056  -8.302691  -8.311144 #>          [,14]      [,15]      [,16]      [,17]      [,18]      [,19] #> ttr -10.161250 -10.153567 -10.125888 -10.072699 -10.052818 -10.040214 #> gs  -10.114656 -10.155195 -10.164355 -10.180364 -10.186555 -10.178781 #> gdp  -8.312744  -8.303897  -8.287788  -8.262618  -8.250325  -8.240051 #>          [,20]      [,21]      [,22]      [,23]      [,24]      [,25] #> ttr -10.030567 -10.039104 -10.028788 -10.046883 -10.016710 -10.007266 #> gs  -10.212613 -10.218690 -10.187204 -10.213692 -10.183056 -10.158678 #> gdp  -8.236746  -8.243471  -8.237925  -8.241736  -8.228203  -8.224407 #>          [,26]      [,27]     [,28]     [,29]      [,30]      [,31]      [,32] #> ttr -10.023507 -10.035423 -10.07507 -10.13789 -10.144811 -10.106104 -10.066766 #> gs  -10.174478 -10.170598 -10.15203 -10.18481 -10.150389 -10.153635 -10.134766 #> gdp  -8.229626  -8.223227  -8.23742  -8.26716  -8.263108  -8.243115  -8.223671 #>          [,33]      [,34]     [,35]     [,36]      [,37]      [,38]      [,39] #> ttr -10.022324  -9.985189 -10.01709 -10.02304  -9.949072  -9.969705  -9.981842 #> gs  -10.161365 -10.150151 -10.14541 -10.16197 -10.211436 -10.215377 -10.179322 #> gdp  -8.208573  -8.189788  -8.19281  -8.19310  -8.177743  -8.185860  -8.184200 #>          [,40]      [,41]      [,42]      [,43]      [,44]      [,45] #> ttr -10.002779 -10.005214  -9.987545  -9.974765  -9.945739  -9.939071 #> gs  -10.171058 -10.176854 -10.170522 -10.151522 -10.133469 -10.098524 #> gdp  -8.200599  -8.197548  -8.184015  -8.167919  -8.150183  -8.134093 #>          [,46]      [,47]      [,48]      [,49]      [,50]      [,51] #> ttr  -9.930177  -9.912874  -9.907816  -9.892123  -9.877535  -9.872812 #> gs  -10.094300 -10.067025 -10.067820 -10.093216 -10.103937 -10.062706 #> gdp  -8.128710  -8.121115  -8.123379  -8.117428  -8.110553  -8.093084 #>          [,52]      [,53]      [,54]      [,55]      [,56]      [,57] #> ttr  -9.873200  -9.903566  -9.945847  -9.929346  -9.924294  -9.873174 #> gs  -10.077210 -10.080137 -10.086429 -10.086952 -10.104762 -10.119510 #> gdp  -8.090726  -8.074078  -8.067170  -8.056025  -8.057356  -8.037558 #>          [,58]      [,59]      [,60]      [,61]      [,62]     [,63]     [,64] #> ttr  -9.868786  -9.889005  -9.869065  -9.805485  -9.780789 -9.775928 -9.770953 #> gs  -10.121456 -10.080980 -10.047665 -10.031786 -10.015405 -9.972703 -9.972277 #> gdp  -8.029058  -8.010441  -7.990895  -7.969662  -7.968954 -7.963457 -7.958214 #>         [,65]     [,66]     [,67]     [,68]     [,69]     [,70]     [,71] #> ttr -9.772548 -9.776277 -9.765589 -9.752526 -9.716359 -9.701856 -9.648596 #> gs  -9.921231 -9.930064 -9.918558 -9.916140 -9.905383 -9.912978 -9.916631 #> gdp -7.952678 -7.955842 -7.951388 -7.948437 -7.932050 -7.918941 -7.915257 #>         [,72]     [,73]     [,74]     [,75]     [,76]     [,77]      [,78] #> ttr -9.638619 -9.600418 -9.602444 -9.634826 -9.648085 -9.699401  -9.710733 #> gs  -9.926109 -9.941619 -9.956805 -9.947676 -9.975862 -9.982957 -10.015716 #> gdp -7.916101 -7.905039 -7.906085 -7.903714 -7.913516 -7.920120  -7.924020 #>          [,79]      [,80]      [,81]      [,82]      [,83]      [,84] #> ttr  -9.745500  -9.768492  -9.760842  -9.766299  -9.778672  -9.777410 #> gs  -10.025029 -10.035742 -10.057858 -10.069130 -10.075164 -10.095796 #> gdp  -7.920508  -7.937196  -7.915896  -7.916226  -7.913555  -7.916885 #>          [,85]      [,86]      [,87]      [,88]      [,89]      [,90] #> ttr  -9.703664  -9.700096  -9.702497  -9.687190  -9.635787  -9.641697 #> gs  -10.073616 -10.065471 -10.118473 -10.111695 -10.099194 -10.118927 #> gdp  -7.909952  -7.892738  -7.888645  -7.876822  -7.857511  -7.851846 #>          [,91]      [,92]      [,93]      [,94]      [,95]      [,96] #> ttr  -9.653121  -9.643385  -9.641677  -9.636437  -9.631127  -9.675782 #> gs  -10.159220 -10.160694 -10.150536 -10.164670 -10.163660 -10.154928 #> gdp  -7.862338  -7.857906  -7.871675  -7.874362  -7.888890  -7.897743 #>          [,97]      [,98]      [,99]     [,100]     [,101]     [,102] #> ttr  -9.723282  -9.875390  -9.725294  -9.718926  -9.691432  -9.683239 #> gs  -10.175105 -10.189865 -10.174280 -10.169452 -10.180323 -10.189891 #> gdp  -7.914863  -7.912446  -7.901200  -7.892752  -7.875263  -7.872458 #>         [,103]     [,104]     [,105]     [,106]     [,107]     [,108] #> ttr  -9.677402  -9.680452  -9.656247  -9.634902  -9.632583  -9.627524 #> gs  -10.194482 -10.188434 -10.187965 -10.182741 -10.184742 -10.189007 #> gdp  -7.871765  -7.869010  -7.861668  -7.847074  -7.834051  -7.838486 #>         [,109]     [,110]     [,111]     [,112]     [,113]     [,114] #> ttr  -9.629269  -9.580445  -9.560460  -9.541017  -9.542420  -9.543718 #> gs  -10.195703 -10.180446 -10.178599 -10.178193 -10.183752 -10.187033 #> gdp  -7.839595  -7.806033  -7.800546  -7.791898  -7.794565  -7.797745 #>         [,115]     [,116]     [,117]     [,118]     [,119]     [,120] #> ttr  -9.543691  -9.547621  -9.554243  -9.590413  -9.572053  -9.549754 #> gs  -10.187853 -10.188694 -10.167491 -10.137604 -10.165298 -10.159953 #> gdp  -7.794856  -7.797531  -7.798669  -7.823369  -7.828709  -7.813689 #>         [,121]     [,122]     [,123]     [,124]     [,125]     [,126] #> ttr  -9.510709  -9.521285  -9.516658  -9.558572  -9.595998  -9.602036 #> gs  -10.150293 -10.124940 -10.129474 -10.113186 -10.112956 -10.105309 #> gdp  -7.797765  -7.808504  -7.799970  -7.814313  -7.832928  -7.831420 #>         [,127]     [,128]     [,129]     [,130]     [,131]     [,132] #> ttr  -9.634312  -9.639796  -9.640765  -9.605876  -9.630265  -9.615325 #> gs  -10.097536 -10.075647 -10.068385 -10.052300 -10.029286 -10.065913 #> gdp  -7.838176  -7.840781  -7.830349  -7.810477  -7.793487  -7.775716 #>         [,133]     [,134]     [,135]    [,136]     [,137]    [,138]    [,139] #> ttr  -9.582572  -9.575274  -9.575973 -9.564415  -9.509297 -9.580609 -9.525754 #> gs  -10.059021 -10.030349 -10.028002 -9.994770 -10.001505 -9.981967 -9.955889 #> gdp  -7.760496  -7.745905  -7.738963 -7.733827  -7.726387 -7.720013 -7.707476 #>        [,140]    [,141]    [,142]    [,143]    [,144]    [,145]    [,146] #> ttr -9.522415 -9.526365 -9.525056 -9.511548 -9.485230 -9.492477 -9.417814 #> gs  -9.957317 -9.972376 -9.949593 -9.920977 -9.940087 -9.945237 -9.936707 #> gdp -7.703028 -7.698674 -7.696936 -7.690253 -7.687829 -7.683889 -7.676050 #>        [,147]    [,148]    [,149]    [,150]    [,151]    [,152]    [,153] #> ttr -9.435887 -9.425677 -9.419928 -9.419417 -9.416456 -9.407336 -9.380921 #> gs  -9.941143 -9.932680 -9.958710 -9.968522 -9.981855 -9.957449 -9.981534 #> gdp -7.670075 -7.655527 -7.653085 -7.642347 -7.638943 -7.627927 -7.620614 #>        [,154]    [,155]    [,156]    [,157]    [,158]    [,159]    [,160] #> ttr -9.393687 -9.390874 -9.385202 -9.399419 -9.394928 -9.392117 -9.400558 #> gs  -9.966978 -9.963336 -9.973769 -9.968919 -9.963899 -9.977767 -9.974638 #> gdp -7.615184 -7.610080 -7.610350 -7.607473 -7.605950 -7.607596 -7.619450 #>        [,161]    [,162]    [,163]     [,164]     [,165]     [,166]    [,167] #> ttr -9.419978 -9.422860 -9.423722  -9.419158  -9.409620  -9.402732 -9.401977 #> gs  -9.966187 -9.966618 -9.977350 -10.001329 -10.002239 -10.009447 -9.994371 #> gdp -7.626261 -7.620517 -7.617926  -7.617210  -7.607513  -7.598970 -7.591836 #>        [,168]     [,169]     [,170]     [,171]     [,172]     [,173]     [,174] #> ttr -9.387803  -9.394204  -9.368211  -9.368649  -9.333457  -9.346189  -9.315611 #> gs  -9.997245 -10.036085 -10.050549 -10.055642 -10.053259 -10.091480 -10.094297 #> gdp -7.584511  -7.585374  -7.581886  -7.579748  -7.569079  -7.561780  -7.550551 #>         [,175]     [,176]     [,177]     [,178]     [,179]     [,180] #> ttr  -9.317661  -9.306432  -9.296443  -9.282219  -9.282775  -9.277038 #> gs  -10.073107 -10.099725 -10.100847 -10.104445 -10.114866 -10.143342 #> gdp  -7.547398  -7.538805  -7.536695  -7.535796  -7.529908  -7.525871 #>         [,181]     [,182]     [,183]     [,184]     [,185]     [,186] #> ttr  -9.254816  -9.223117  -9.222325  -9.210036  -9.193762  -9.175955 #> gs  -10.128473 -10.131162 -10.144689 -10.154594 -10.175992 -10.151683 #> gdp  -7.520533  -7.506516  -7.500429  -7.493108  -7.491319  -7.477018 #>         [,187]     [,188]     [,189]     [,190]     [,191]     [,192] #> ttr  -9.159679  -9.150566  -9.141338  -9.129729  -9.114887  -9.103975 #> gs  -10.160675 -10.161303 -10.194301 -10.173434 -10.177992 -10.174253 #> gdp  -7.467201  -7.461444  -7.453755  -7.447022  -7.437393  -7.424345 #>         [,193]     [,194]     [,195]     [,196]     [,197]     [,198] #> ttr  -9.094116  -9.089010  -9.078380  -9.062930  -9.041612  -9.043770 #> gs  -10.179705 -10.179299 -10.161074 -10.137341 -10.181653 -10.156372 #> gdp  -7.418726  -7.413093  -7.402896  -7.389553  -7.399844  -7.384905 #>         [,199]     [,200]     [,201]     [,202]     [,203]     [,204] #> ttr  -9.042799  -9.041627  -9.048031  -9.061039  -9.166843  -9.113358 #> gs  -10.177323 -10.178514 -10.164194 -10.153629 -10.148506 -10.136446 #> gdp  -7.387076  -7.384177  -7.389942  -7.386704  -7.393909  -7.394334 #>         [,205]     [,206]     [,207]     [,208]     [,209]    [,210]    [,211] #> ttr  -9.200035  -9.203658  -9.211968  -9.213676  -9.220183 -9.214303 -9.262687 #> gs  -10.103527 -10.080759 -10.070276 -10.043912 -10.033703 -9.999011 -9.999221 #> gdp  -7.388637  -7.384987  -7.384019  -7.385816  -7.387794 -7.381916 -7.368729 #>        [,212]    [,213]    [,214]    [,215]    [,216]    [,217]    [,218] #> ttr -9.215967 -9.213807 -9.198302 -9.178285 -9.175689 -9.112637 -9.111814 #> gs  -9.982976 -9.971041 -9.967240 -9.956771 -9.959930 -9.946507 -9.948562 #> gdp -7.360698 -7.355343 -7.350357 -7.344154 -7.337277 -7.328983 -7.326956 #>        [,219]    [,220]    [,221]    [,222]    [,223]    [,224]    [,225] #> ttr -9.103912 -9.089071 -9.060205 -9.059423 -9.052004 -9.047759 -9.041875 #> gs  -9.942885 -9.946751 -9.922195 -9.933855 -9.945822 -9.933137 -9.944410 #> gdp -7.322447 -7.320194 -7.309280 -7.309765 -7.311469 -7.306242 -7.307412 #>        [,226]    [,227]    [,228]    [,229]    [,230]    [,231]    [,232] #> ttr -9.044566 -9.057487 -9.057906 -9.078990 -9.095768 -9.111365 -9.168521 #> gs  -9.929581 -9.922385 -9.905020 -9.884386 -9.860672 -9.850809 -9.848056 #> gdp -7.303828 -7.300961 -7.298002 -7.301537 -7.298417 -7.306690 -7.331818 #>        [,233]    [,234]    [,235]    [,236]    [,237]    [,238]    [,239] #> ttr -9.286408 -9.311006 -9.326022 -9.319208 -9.284601 -9.264859 -9.257914 #> gs  -9.843369 -9.820347 -9.811987 -9.795550 -9.781834 -9.768178 -9.774321 #> gdp -7.343908 -7.347934 -7.347000 -7.339120 -7.335211 -7.327728 -7.322542 #>        [,240]    [,241]    [,242]    [,243]    [,244]    [,245]    [,246] #> ttr -9.253576 -9.235745 -9.230644 -9.232749 -9.221353 -9.231625 -9.220342 #> gs  -9.776139 -9.787145 -9.790554 -9.817488 -9.818702 -9.829654 -9.841671 #> gdp -7.319904 -7.322908 -7.318097 -7.320798 -7.311978 -7.312135 -7.309778 #>        [,247]    [,248]    [,249]    [,250]    [,251]    [,252]    [,253] #> ttr -9.216603 -9.190699 -9.116075 -9.112126 -9.112690 -9.108763 -9.083061 #> gs  -9.845264 -9.871761 -9.901560 -9.912720 -9.931193 -9.941819 -9.951795 #> gdp -7.310487 -7.311859 -7.305920 -7.306705 -7.301254 -7.296620 -7.302236 #>        [,254]    [,255]    [,256]    [,257]    [,258]    [,259]    [,260] #> ttr -9.075601 -9.076629 -9.063907 -9.033269 -9.030089 -9.039725 -9.068366 #> gs  -9.961108 -9.952091 -9.969639 -9.970974 -9.974841 -9.979869 -9.975718 #> gdp -7.291661 -7.282534 -7.280509 -7.276652 -7.273109 -7.272419 -7.273509 #>        [,261]    [,262]    [,263]    [,264]    [,265]    [,266]    [,267] #> ttr -9.049971 -9.053930 -9.045044 -9.043340 -9.067338 -9.057461 -9.044439 #> gs  -9.978246 -9.990506 -9.985954 -9.988484 -9.994245 -9.987430 -9.990167 #> gdp -7.270966 -7.270315 -7.266979 -7.264705 -7.258864 -7.255344 -7.250474 #>        [,268]    [,269]    [,270]    [,271]    [,272]    [,273]    [,274] #> ttr -9.040190 -9.075552 -9.068175 -9.058663 -9.050837 -9.028737 -9.034628 #> gs  -9.980406 -9.975755 -9.966998 -9.958413 -9.953657 -9.941474 -9.934768 #> gdp -7.243399 -7.239679 -7.233395 -7.230954 -7.231195 -7.224019 -7.217952 #>        [,275]    [,276]    [,277]    [,278]    [,279]    [,280]    [,281] #> ttr -9.037270 -9.026834 -9.036080 -9.119120 -9.078036 -9.040318 -8.998997 #> gs  -9.928058 -9.922111 -9.914900 -9.865015 -9.882558 -9.891237 -9.864631 #> gdp -7.213312 -7.210875 -7.222513 -7.317755 -7.246939 -7.237858 -7.222038 #>        [,282]    [,283]    [,284] #> ttr -8.977226 -8.961696 -8.952163 #> gs  -9.884250 -9.900998 -9.917128 #> gdp -7.206880 -7.202713 -7.187610 #>  #> $X #>           [,1]       [,2]       [,3]       [,4]       [,5]       [,6] #> ttr -10.134356 -10.034917 -10.087902 -10.102063 -10.055537 -10.053020 #> gs  -10.698455 -10.511841 -10.353891 -10.201884 -10.127112 -10.101107 #> gdp  -8.389912  -8.373559  -8.354560  -8.334483  -8.334229  -8.324791 #> ttr -10.206128 -10.134356 -10.034917 -10.087902 -10.102063 -10.055537 #> gs  -10.795478 -10.698455 -10.511841 -10.353891 -10.201884 -10.127112 #> gdp  -8.411119  -8.389912  -8.373559  -8.354560  -8.334483  -8.334229 #> ttr -10.313768 -10.206128 -10.134356 -10.034917 -10.087902 -10.102063 #> gs  -10.754364 -10.795478 -10.698455 -10.511841 -10.353891 -10.201884 #> gdp  -8.446947  -8.411119  -8.389912  -8.373559  -8.354560  -8.334483 #> ttr -10.403445 -10.313768 -10.206128 -10.134356 -10.034917 -10.087902 #> gs  -10.762223 -10.754364 -10.795478 -10.698455 -10.511841 -10.353891 #> gdp  -8.474485  -8.446947  -8.411119  -8.389912  -8.373559  -8.354560 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>           [,7]       [,8]       [,9]      [,10]      [,11]      [,12] #> ttr -10.054023 -10.062146 -10.021264 -10.005725 -10.004156 -10.026441 #> gs  -10.052462 -10.034579 -10.012415  -9.998526  -9.970255 -10.004780 #> gdp  -8.324028  -8.319992  -8.291118  -8.281721  -8.276425  -8.284056 #> ttr -10.053020 -10.054023 -10.062146 -10.021264 -10.005725 -10.004156 #> gs  -10.101107 -10.052462 -10.034579 -10.012415  -9.998526  -9.970255 #> gdp  -8.324791  -8.324028  -8.319992  -8.291118  -8.281721  -8.276425 #> ttr -10.055537 -10.053020 -10.054023 -10.062146 -10.021264 -10.005725 #> gs  -10.127112 -10.101107 -10.052462 -10.034579 -10.012415  -9.998526 #> gdp  -8.334229  -8.324791  -8.324028  -8.319992  -8.291118  -8.281721 #> ttr -10.102063 -10.055537 -10.053020 -10.054023 -10.062146 -10.021264 #> gs  -10.201884 -10.127112 -10.101107 -10.052462 -10.034579 -10.012415 #> gdp  -8.334483  -8.334229  -8.324791  -8.324028  -8.319992  -8.291118 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>          [,13]      [,14]      [,15]      [,16]      [,17]      [,18] #> ttr -10.109065 -10.159222 -10.161250 -10.153567 -10.125888 -10.072699 #> gs  -10.017202 -10.064961 -10.114656 -10.155195 -10.164355 -10.180364 #> gdp  -8.302691  -8.311144  -8.312744  -8.303897  -8.287788  -8.262618 #> ttr -10.026441 -10.109065 -10.159222 -10.161250 -10.153567 -10.125888 #> gs  -10.004780 -10.017202 -10.064961 -10.114656 -10.155195 -10.164355 #> gdp  -8.284056  -8.302691  -8.311144  -8.312744  -8.303897  -8.287788 #> ttr -10.004156 -10.026441 -10.109065 -10.159222 -10.161250 -10.153567 #> gs   -9.970255 -10.004780 -10.017202 -10.064961 -10.114656 -10.155195 #> gdp  -8.276425  -8.284056  -8.302691  -8.311144  -8.312744  -8.303897 #> ttr -10.005725 -10.004156 -10.026441 -10.109065 -10.159222 -10.161250 #> gs   -9.998526  -9.970255 -10.004780 -10.017202 -10.064961 -10.114656 #> gdp  -8.281721  -8.276425  -8.284056  -8.302691  -8.311144  -8.312744 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>          [,19]      [,20]      [,21]      [,22]      [,23]      [,24] #> ttr -10.052818 -10.040214 -10.030567 -10.039104 -10.028788 -10.046883 #> gs  -10.186555 -10.178781 -10.212613 -10.218690 -10.187204 -10.213692 #> gdp  -8.250325  -8.240051  -8.236746  -8.243471  -8.237925  -8.241736 #> ttr -10.072699 -10.052818 -10.040214 -10.030567 -10.039104 -10.028788 #> gs  -10.180364 -10.186555 -10.178781 -10.212613 -10.218690 -10.187204 #> gdp  -8.262618  -8.250325  -8.240051  -8.236746  -8.243471  -8.237925 #> ttr -10.125888 -10.072699 -10.052818 -10.040214 -10.030567 -10.039104 #> gs  -10.164355 -10.180364 -10.186555 -10.178781 -10.212613 -10.218690 #> gdp  -8.287788  -8.262618  -8.250325  -8.240051  -8.236746  -8.243471 #> ttr -10.153567 -10.125888 -10.072699 -10.052818 -10.040214 -10.030567 #> gs  -10.155195 -10.164355 -10.180364 -10.186555 -10.178781 -10.212613 #> gdp  -8.303897  -8.287788  -8.262618  -8.250325  -8.240051  -8.236746 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>          [,25]      [,26]      [,27]      [,28]      [,29]      [,30] #> ttr -10.016710 -10.007266 -10.023507 -10.035423 -10.075068 -10.137894 #> gs  -10.183056 -10.158678 -10.174478 -10.170598 -10.152029 -10.184811 #> gdp  -8.228203  -8.224407  -8.229626  -8.223227  -8.237420  -8.267160 #> ttr -10.046883 -10.016710 -10.007266 -10.023507 -10.035423 -10.075068 #> gs  -10.213692 -10.183056 -10.158678 -10.174478 -10.170598 -10.152029 #> gdp  -8.241736  -8.228203  -8.224407  -8.229626  -8.223227  -8.237420 #> ttr -10.028788 -10.046883 -10.016710 -10.007266 -10.023507 -10.035423 #> gs  -10.187204 -10.213692 -10.183056 -10.158678 -10.174478 -10.170598 #> gdp  -8.237925  -8.241736  -8.228203  -8.224407  -8.229626  -8.223227 #> ttr -10.039104 -10.028788 -10.046883 -10.016710 -10.007266 -10.023507 #> gs  -10.218690 -10.187204 -10.213692 -10.183056 -10.158678 -10.174478 #> gdp  -8.243471  -8.237925  -8.241736  -8.228203  -8.224407  -8.229626 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>          [,31]      [,32]      [,33]      [,34]      [,35]      [,36] #> ttr -10.144811 -10.106104 -10.066766 -10.022324  -9.985189 -10.017092 #> gs  -10.150389 -10.153635 -10.134766 -10.161365 -10.150151 -10.145409 #> gdp  -8.263108  -8.243115  -8.223671  -8.208573  -8.189788  -8.192810 #> ttr -10.137894 -10.144811 -10.106104 -10.066766 -10.022324  -9.985189 #> gs  -10.184811 -10.150389 -10.153635 -10.134766 -10.161365 -10.150151 #> gdp  -8.267160  -8.263108  -8.243115  -8.223671  -8.208573  -8.189788 #> ttr -10.075068 -10.137894 -10.144811 -10.106104 -10.066766 -10.022324 #> gs  -10.152029 -10.184811 -10.150389 -10.153635 -10.134766 -10.161365 #> gdp  -8.237420  -8.267160  -8.263108  -8.243115  -8.223671  -8.208573 #> ttr -10.035423 -10.075068 -10.137894 -10.144811 -10.106104 -10.066766 #> gs  -10.170598 -10.152029 -10.184811 -10.150389 -10.153635 -10.134766 #> gdp  -8.223227  -8.237420  -8.267160  -8.263108  -8.243115  -8.223671 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>          [,37]      [,38]      [,39]      [,40]      [,41]      [,42] #> ttr -10.023036  -9.949072  -9.969705  -9.981842 -10.002779 -10.005214 #> gs  -10.161973 -10.211436 -10.215377 -10.179322 -10.171058 -10.176854 #> gdp  -8.193100  -8.177743  -8.185860  -8.184200  -8.200599  -8.197548 #> ttr -10.017092 -10.023036  -9.949072  -9.969705  -9.981842 -10.002779 #> gs  -10.145409 -10.161973 -10.211436 -10.215377 -10.179322 -10.171058 #> gdp  -8.192810  -8.193100  -8.177743  -8.185860  -8.184200  -8.200599 #> ttr  -9.985189 -10.017092 -10.023036  -9.949072  -9.969705  -9.981842 #> gs  -10.150151 -10.145409 -10.161973 -10.211436 -10.215377 -10.179322 #> gdp  -8.189788  -8.192810  -8.193100  -8.177743  -8.185860  -8.184200 #> ttr -10.022324  -9.985189 -10.017092 -10.023036  -9.949072  -9.969705 #> gs  -10.161365 -10.150151 -10.145409 -10.161973 -10.211436 -10.215377 #> gdp  -8.208573  -8.189788  -8.192810  -8.193100  -8.177743  -8.185860 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>          [,43]      [,44]      [,45]      [,46]      [,47]      [,48] #> ttr  -9.987545  -9.974765  -9.945739  -9.939071  -9.930177  -9.912874 #> gs  -10.170522 -10.151522 -10.133469 -10.098524 -10.094300 -10.067025 #> gdp  -8.184015  -8.167919  -8.150183  -8.134093  -8.128710  -8.121115 #> ttr -10.005214  -9.987545  -9.974765  -9.945739  -9.939071  -9.930177 #> gs  -10.176854 -10.170522 -10.151522 -10.133469 -10.098524 -10.094300 #> gdp  -8.197548  -8.184015  -8.167919  -8.150183  -8.134093  -8.128710 #> ttr -10.002779 -10.005214  -9.987545  -9.974765  -9.945739  -9.939071 #> gs  -10.171058 -10.176854 -10.170522 -10.151522 -10.133469 -10.098524 #> gdp  -8.200599  -8.197548  -8.184015  -8.167919  -8.150183  -8.134093 #> ttr  -9.981842 -10.002779 -10.005214  -9.987545  -9.974765  -9.945739 #> gs  -10.179322 -10.171058 -10.176854 -10.170522 -10.151522 -10.133469 #> gdp  -8.184200  -8.200599  -8.197548  -8.184015  -8.167919  -8.150183 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>          [,49]      [,50]      [,51]      [,52]      [,53]      [,54] #> ttr  -9.907816  -9.892123  -9.877535  -9.872812  -9.873200  -9.903566 #> gs  -10.067820 -10.093216 -10.103937 -10.062706 -10.077210 -10.080137 #> gdp  -8.123379  -8.117428  -8.110553  -8.093084  -8.090726  -8.074078 #> ttr  -9.912874  -9.907816  -9.892123  -9.877535  -9.872812  -9.873200 #> gs  -10.067025 -10.067820 -10.093216 -10.103937 -10.062706 -10.077210 #> gdp  -8.121115  -8.123379  -8.117428  -8.110553  -8.093084  -8.090726 #> ttr  -9.930177  -9.912874  -9.907816  -9.892123  -9.877535  -9.872812 #> gs  -10.094300 -10.067025 -10.067820 -10.093216 -10.103937 -10.062706 #> gdp  -8.128710  -8.121115  -8.123379  -8.117428  -8.110553  -8.093084 #> ttr  -9.939071  -9.930177  -9.912874  -9.907816  -9.892123  -9.877535 #> gs  -10.098524 -10.094300 -10.067025 -10.067820 -10.093216 -10.103937 #> gdp  -8.134093  -8.128710  -8.121115  -8.123379  -8.117428  -8.110553 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>          [,55]      [,56]      [,57]      [,58]      [,59]      [,60] #> ttr  -9.945847  -9.929346  -9.924294  -9.873174  -9.868786  -9.889005 #> gs  -10.086429 -10.086952 -10.104762 -10.119510 -10.121456 -10.080980 #> gdp  -8.067170  -8.056025  -8.057356  -8.037558  -8.029058  -8.010441 #> ttr  -9.903566  -9.945847  -9.929346  -9.924294  -9.873174  -9.868786 #> gs  -10.080137 -10.086429 -10.086952 -10.104762 -10.119510 -10.121456 #> gdp  -8.074078  -8.067170  -8.056025  -8.057356  -8.037558  -8.029058 #> ttr  -9.873200  -9.903566  -9.945847  -9.929346  -9.924294  -9.873174 #> gs  -10.077210 -10.080137 -10.086429 -10.086952 -10.104762 -10.119510 #> gdp  -8.090726  -8.074078  -8.067170  -8.056025  -8.057356  -8.037558 #> ttr  -9.872812  -9.873200  -9.903566  -9.945847  -9.929346  -9.924294 #> gs  -10.062706 -10.077210 -10.080137 -10.086429 -10.086952 -10.104762 #> gdp  -8.093084  -8.090726  -8.074078  -8.067170  -8.056025  -8.057356 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>          [,61]      [,62]      [,63]      [,64]      [,65]      [,66]     [,67] #> ttr  -9.869065  -9.805485  -9.780789  -9.775928  -9.770953  -9.772548 -9.776277 #> gs  -10.047665 -10.031786 -10.015405  -9.972703  -9.972277  -9.921231 -9.930064 #> gdp  -7.990895  -7.969662  -7.968954  -7.963457  -7.958214  -7.952678 -7.955842 #> ttr  -9.889005  -9.869065  -9.805485  -9.780789  -9.775928  -9.770953 -9.772548 #> gs  -10.080980 -10.047665 -10.031786 -10.015405  -9.972703  -9.972277 -9.921231 #> gdp  -8.010441  -7.990895  -7.969662  -7.968954  -7.963457  -7.958214 -7.952678 #> ttr  -9.868786  -9.889005  -9.869065  -9.805485  -9.780789  -9.775928 -9.770953 #> gs  -10.121456 -10.080980 -10.047665 -10.031786 -10.015405  -9.972703 -9.972277 #> gdp  -8.029058  -8.010441  -7.990895  -7.969662  -7.968954  -7.963457 -7.958214 #> ttr  -9.873174  -9.868786  -9.889005  -9.869065  -9.805485  -9.780789 -9.775928 #> gs  -10.119510 -10.121456 -10.080980 -10.047665 -10.031786 -10.015405 -9.972703 #> gdp  -8.037558  -8.029058  -8.010441  -7.990895  -7.969662  -7.968954 -7.963457 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000  1.000000 #>         [,68]     [,69]     [,70]     [,71]     [,72]     [,73]     [,74] #> ttr -9.765589 -9.752526 -9.716359 -9.701856 -9.648596 -9.638619 -9.600418 #> gs  -9.918558 -9.916140 -9.905383 -9.912978 -9.916631 -9.926109 -9.941619 #> gdp -7.951388 -7.948437 -7.932050 -7.918941 -7.915257 -7.916101 -7.905039 #> ttr -9.776277 -9.765589 -9.752526 -9.716359 -9.701856 -9.648596 -9.638619 #> gs  -9.930064 -9.918558 -9.916140 -9.905383 -9.912978 -9.916631 -9.926109 #> gdp -7.955842 -7.951388 -7.948437 -7.932050 -7.918941 -7.915257 -7.916101 #> ttr -9.772548 -9.776277 -9.765589 -9.752526 -9.716359 -9.701856 -9.648596 #> gs  -9.921231 -9.930064 -9.918558 -9.916140 -9.905383 -9.912978 -9.916631 #> gdp -7.952678 -7.955842 -7.951388 -7.948437 -7.932050 -7.918941 -7.915257 #> ttr -9.770953 -9.772548 -9.776277 -9.765589 -9.752526 -9.716359 -9.701856 #> gs  -9.972277 -9.921231 -9.930064 -9.918558 -9.916140 -9.905383 -9.912978 #> gdp -7.958214 -7.952678 -7.955842 -7.951388 -7.948437 -7.932050 -7.918941 #>      1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 #>         [,75]     [,76]     [,77]     [,78]      [,79]      [,80]      [,81] #> ttr -9.602444 -9.634826 -9.648085 -9.699401  -9.710733  -9.745500  -9.768492 #> gs  -9.956805 -9.947676 -9.975862 -9.982957 -10.015716 -10.025029 -10.035742 #> gdp -7.906085 -7.903714 -7.913516 -7.920120  -7.924020  -7.920508  -7.937196 #> ttr -9.600418 -9.602444 -9.634826 -9.648085  -9.699401  -9.710733  -9.745500 #> gs  -9.941619 -9.956805 -9.947676 -9.975862  -9.982957 -10.015716 -10.025029 #> gdp -7.905039 -7.906085 -7.903714 -7.913516  -7.920120  -7.924020  -7.920508 #> ttr -9.638619 -9.600418 -9.602444 -9.634826  -9.648085  -9.699401  -9.710733 #> gs  -9.926109 -9.941619 -9.956805 -9.947676  -9.975862  -9.982957 -10.015716 #> gdp -7.916101 -7.905039 -7.906085 -7.903714  -7.913516  -7.920120  -7.924020 #> ttr -9.648596 -9.638619 -9.600418 -9.602444  -9.634826  -9.648085  -9.699401 #> gs  -9.916631 -9.926109 -9.941619 -9.956805  -9.947676  -9.975862  -9.982957 #> gdp -7.915257 -7.916101 -7.905039 -7.906085  -7.903714  -7.913516  -7.920120 #>      1.000000  1.000000  1.000000  1.000000   1.000000   1.000000   1.000000 #>          [,82]      [,83]      [,84]      [,85]      [,86]      [,87] #> ttr  -9.760842  -9.766299  -9.778672  -9.777410  -9.703664  -9.700096 #> gs  -10.057858 -10.069130 -10.075164 -10.095796 -10.073616 -10.065471 #> gdp  -7.915896  -7.916226  -7.913555  -7.916885  -7.909952  -7.892738 #> ttr  -9.768492  -9.760842  -9.766299  -9.778672  -9.777410  -9.703664 #> gs  -10.035742 -10.057858 -10.069130 -10.075164 -10.095796 -10.073616 #> gdp  -7.937196  -7.915896  -7.916226  -7.913555  -7.916885  -7.909952 #> ttr  -9.745500  -9.768492  -9.760842  -9.766299  -9.778672  -9.777410 #> gs  -10.025029 -10.035742 -10.057858 -10.069130 -10.075164 -10.095796 #> gdp  -7.920508  -7.937196  -7.915896  -7.916226  -7.913555  -7.916885 #> ttr  -9.710733  -9.745500  -9.768492  -9.760842  -9.766299  -9.778672 #> gs  -10.015716 -10.025029 -10.035742 -10.057858 -10.069130 -10.075164 #> gdp  -7.924020  -7.920508  -7.937196  -7.915896  -7.916226  -7.913555 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>          [,88]      [,89]      [,90]      [,91]      [,92]      [,93] #> ttr  -9.702497  -9.687190  -9.635787  -9.641697  -9.653121  -9.643385 #> gs  -10.118473 -10.111695 -10.099194 -10.118927 -10.159220 -10.160694 #> gdp  -7.888645  -7.876822  -7.857511  -7.851846  -7.862338  -7.857906 #> ttr  -9.700096  -9.702497  -9.687190  -9.635787  -9.641697  -9.653121 #> gs  -10.065471 -10.118473 -10.111695 -10.099194 -10.118927 -10.159220 #> gdp  -7.892738  -7.888645  -7.876822  -7.857511  -7.851846  -7.862338 #> ttr  -9.703664  -9.700096  -9.702497  -9.687190  -9.635787  -9.641697 #> gs  -10.073616 -10.065471 -10.118473 -10.111695 -10.099194 -10.118927 #> gdp  -7.909952  -7.892738  -7.888645  -7.876822  -7.857511  -7.851846 #> ttr  -9.777410  -9.703664  -9.700096  -9.702497  -9.687190  -9.635787 #> gs  -10.095796 -10.073616 -10.065471 -10.118473 -10.111695 -10.099194 #> gdp  -7.916885  -7.909952  -7.892738  -7.888645  -7.876822  -7.857511 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>          [,94]      [,95]      [,96]      [,97]      [,98]      [,99] #> ttr  -9.641677  -9.636437  -9.631127  -9.675782  -9.723282  -9.875390 #> gs  -10.150536 -10.164670 -10.163660 -10.154928 -10.175105 -10.189865 #> gdp  -7.871675  -7.874362  -7.888890  -7.897743  -7.914863  -7.912446 #> ttr  -9.643385  -9.641677  -9.636437  -9.631127  -9.675782  -9.723282 #> gs  -10.160694 -10.150536 -10.164670 -10.163660 -10.154928 -10.175105 #> gdp  -7.857906  -7.871675  -7.874362  -7.888890  -7.897743  -7.914863 #> ttr  -9.653121  -9.643385  -9.641677  -9.636437  -9.631127  -9.675782 #> gs  -10.159220 -10.160694 -10.150536 -10.164670 -10.163660 -10.154928 #> gdp  -7.862338  -7.857906  -7.871675  -7.874362  -7.888890  -7.897743 #> ttr  -9.641697  -9.653121  -9.643385  -9.641677  -9.636437  -9.631127 #> gs  -10.118927 -10.159220 -10.160694 -10.150536 -10.164670 -10.163660 #> gdp  -7.851846  -7.862338  -7.857906  -7.871675  -7.874362  -7.888890 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>         [,100]     [,101]     [,102]     [,103]     [,104]     [,105] #> ttr  -9.725294  -9.718926  -9.691432  -9.683239  -9.677402  -9.680452 #> gs  -10.174280 -10.169452 -10.180323 -10.189891 -10.194482 -10.188434 #> gdp  -7.901200  -7.892752  -7.875263  -7.872458  -7.871765  -7.869010 #> ttr  -9.875390  -9.725294  -9.718926  -9.691432  -9.683239  -9.677402 #> gs  -10.189865 -10.174280 -10.169452 -10.180323 -10.189891 -10.194482 #> gdp  -7.912446  -7.901200  -7.892752  -7.875263  -7.872458  -7.871765 #> ttr  -9.723282  -9.875390  -9.725294  -9.718926  -9.691432  -9.683239 #> gs  -10.175105 -10.189865 -10.174280 -10.169452 -10.180323 -10.189891 #> gdp  -7.914863  -7.912446  -7.901200  -7.892752  -7.875263  -7.872458 #> ttr  -9.675782  -9.723282  -9.875390  -9.725294  -9.718926  -9.691432 #> gs  -10.154928 -10.175105 -10.189865 -10.174280 -10.169452 -10.180323 #> gdp  -7.897743  -7.914863  -7.912446  -7.901200  -7.892752  -7.875263 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>         [,106]     [,107]     [,108]     [,109]     [,110]     [,111] #> ttr  -9.656247  -9.634902  -9.632583  -9.627524  -9.629269  -9.580445 #> gs  -10.187965 -10.182741 -10.184742 -10.189007 -10.195703 -10.180446 #> gdp  -7.861668  -7.847074  -7.834051  -7.838486  -7.839595  -7.806033 #> ttr  -9.680452  -9.656247  -9.634902  -9.632583  -9.627524  -9.629269 #> gs  -10.188434 -10.187965 -10.182741 -10.184742 -10.189007 -10.195703 #> gdp  -7.869010  -7.861668  -7.847074  -7.834051  -7.838486  -7.839595 #> ttr  -9.677402  -9.680452  -9.656247  -9.634902  -9.632583  -9.627524 #> gs  -10.194482 -10.188434 -10.187965 -10.182741 -10.184742 -10.189007 #> gdp  -7.871765  -7.869010  -7.861668  -7.847074  -7.834051  -7.838486 #> ttr  -9.683239  -9.677402  -9.680452  -9.656247  -9.634902  -9.632583 #> gs  -10.189891 -10.194482 -10.188434 -10.187965 -10.182741 -10.184742 #> gdp  -7.872458  -7.871765  -7.869010  -7.861668  -7.847074  -7.834051 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>         [,112]     [,113]     [,114]     [,115]     [,116]     [,117] #> ttr  -9.560460  -9.541017  -9.542420  -9.543718  -9.543691  -9.547621 #> gs  -10.178599 -10.178193 -10.183752 -10.187033 -10.187853 -10.188694 #> gdp  -7.800546  -7.791898  -7.794565  -7.797745  -7.794856  -7.797531 #> ttr  -9.580445  -9.560460  -9.541017  -9.542420  -9.543718  -9.543691 #> gs  -10.180446 -10.178599 -10.178193 -10.183752 -10.187033 -10.187853 #> gdp  -7.806033  -7.800546  -7.791898  -7.794565  -7.797745  -7.794856 #> ttr  -9.629269  -9.580445  -9.560460  -9.541017  -9.542420  -9.543718 #> gs  -10.195703 -10.180446 -10.178599 -10.178193 -10.183752 -10.187033 #> gdp  -7.839595  -7.806033  -7.800546  -7.791898  -7.794565  -7.797745 #> ttr  -9.627524  -9.629269  -9.580445  -9.560460  -9.541017  -9.542420 #> gs  -10.189007 -10.195703 -10.180446 -10.178599 -10.178193 -10.183752 #> gdp  -7.838486  -7.839595  -7.806033  -7.800546  -7.791898  -7.794565 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>         [,118]     [,119]     [,120]     [,121]     [,122]     [,123] #> ttr  -9.554243  -9.590413  -9.572053  -9.549754  -9.510709  -9.521285 #> gs  -10.167491 -10.137604 -10.165298 -10.159953 -10.150293 -10.124940 #> gdp  -7.798669  -7.823369  -7.828709  -7.813689  -7.797765  -7.808504 #> ttr  -9.547621  -9.554243  -9.590413  -9.572053  -9.549754  -9.510709 #> gs  -10.188694 -10.167491 -10.137604 -10.165298 -10.159953 -10.150293 #> gdp  -7.797531  -7.798669  -7.823369  -7.828709  -7.813689  -7.797765 #> ttr  -9.543691  -9.547621  -9.554243  -9.590413  -9.572053  -9.549754 #> gs  -10.187853 -10.188694 -10.167491 -10.137604 -10.165298 -10.159953 #> gdp  -7.794856  -7.797531  -7.798669  -7.823369  -7.828709  -7.813689 #> ttr  -9.543718  -9.543691  -9.547621  -9.554243  -9.590413  -9.572053 #> gs  -10.187033 -10.187853 -10.188694 -10.167491 -10.137604 -10.165298 #> gdp  -7.797745  -7.794856  -7.797531  -7.798669  -7.823369  -7.828709 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>         [,124]     [,125]     [,126]     [,127]     [,128]     [,129] #> ttr  -9.516658  -9.558572  -9.595998  -9.602036  -9.634312  -9.639796 #> gs  -10.129474 -10.113186 -10.112956 -10.105309 -10.097536 -10.075647 #> gdp  -7.799970  -7.814313  -7.832928  -7.831420  -7.838176  -7.840781 #> ttr  -9.521285  -9.516658  -9.558572  -9.595998  -9.602036  -9.634312 #> gs  -10.124940 -10.129474 -10.113186 -10.112956 -10.105309 -10.097536 #> gdp  -7.808504  -7.799970  -7.814313  -7.832928  -7.831420  -7.838176 #> ttr  -9.510709  -9.521285  -9.516658  -9.558572  -9.595998  -9.602036 #> gs  -10.150293 -10.124940 -10.129474 -10.113186 -10.112956 -10.105309 #> gdp  -7.797765  -7.808504  -7.799970  -7.814313  -7.832928  -7.831420 #> ttr  -9.549754  -9.510709  -9.521285  -9.516658  -9.558572  -9.595998 #> gs  -10.159953 -10.150293 -10.124940 -10.129474 -10.113186 -10.112956 #> gdp  -7.813689  -7.797765  -7.808504  -7.799970  -7.814313  -7.832928 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>         [,130]     [,131]     [,132]     [,133]     [,134]     [,135] #> ttr  -9.640765  -9.605876  -9.630265  -9.615325  -9.582572  -9.575274 #> gs  -10.068385 -10.052300 -10.029286 -10.065913 -10.059021 -10.030349 #> gdp  -7.830349  -7.810477  -7.793487  -7.775716  -7.760496  -7.745905 #> ttr  -9.639796  -9.640765  -9.605876  -9.630265  -9.615325  -9.582572 #> gs  -10.075647 -10.068385 -10.052300 -10.029286 -10.065913 -10.059021 #> gdp  -7.840781  -7.830349  -7.810477  -7.793487  -7.775716  -7.760496 #> ttr  -9.634312  -9.639796  -9.640765  -9.605876  -9.630265  -9.615325 #> gs  -10.097536 -10.075647 -10.068385 -10.052300 -10.029286 -10.065913 #> gdp  -7.838176  -7.840781  -7.830349  -7.810477  -7.793487  -7.775716 #> ttr  -9.602036  -9.634312  -9.639796  -9.640765  -9.605876  -9.630265 #> gs  -10.105309 -10.097536 -10.075647 -10.068385 -10.052300 -10.029286 #> gdp  -7.831420  -7.838176  -7.840781  -7.830349  -7.810477  -7.793487 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>         [,136]     [,137]     [,138]     [,139]     [,140]     [,141]    [,142] #> ttr  -9.575973  -9.564415  -9.509297  -9.580609  -9.525754  -9.522415 -9.526365 #> gs  -10.028002  -9.994770 -10.001505  -9.981967  -9.955889  -9.957317 -9.972376 #> gdp  -7.738963  -7.733827  -7.726387  -7.720013  -7.707476  -7.703028 -7.698674 #> ttr  -9.575274  -9.575973  -9.564415  -9.509297  -9.580609  -9.525754 -9.522415 #> gs  -10.030349 -10.028002  -9.994770 -10.001505  -9.981967  -9.955889 -9.957317 #> gdp  -7.745905  -7.738963  -7.733827  -7.726387  -7.720013  -7.707476 -7.703028 #> ttr  -9.582572  -9.575274  -9.575973  -9.564415  -9.509297  -9.580609 -9.525754 #> gs  -10.059021 -10.030349 -10.028002  -9.994770 -10.001505  -9.981967 -9.955889 #> gdp  -7.760496  -7.745905  -7.738963  -7.733827  -7.726387  -7.720013 -7.707476 #> ttr  -9.615325  -9.582572  -9.575274  -9.575973  -9.564415  -9.509297 -9.580609 #> gs  -10.065913 -10.059021 -10.030349 -10.028002  -9.994770 -10.001505 -9.981967 #> gdp  -7.775716  -7.760496  -7.745905  -7.738963  -7.733827  -7.726387 -7.720013 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000  1.000000 #>        [,143]    [,144]    [,145]    [,146]    [,147]    [,148]    [,149] #> ttr -9.525056 -9.511548 -9.485230 -9.492477 -9.417814 -9.435887 -9.425677 #> gs  -9.949593 -9.920977 -9.940087 -9.945237 -9.936707 -9.941143 -9.932680 #> gdp -7.696936 -7.690253 -7.687829 -7.683889 -7.676050 -7.670075 -7.655527 #> ttr -9.526365 -9.525056 -9.511548 -9.485230 -9.492477 -9.417814 -9.435887 #> gs  -9.972376 -9.949593 -9.920977 -9.940087 -9.945237 -9.936707 -9.941143 #> gdp -7.698674 -7.696936 -7.690253 -7.687829 -7.683889 -7.676050 -7.670075 #> ttr -9.522415 -9.526365 -9.525056 -9.511548 -9.485230 -9.492477 -9.417814 #> gs  -9.957317 -9.972376 -9.949593 -9.920977 -9.940087 -9.945237 -9.936707 #> gdp -7.703028 -7.698674 -7.696936 -7.690253 -7.687829 -7.683889 -7.676050 #> ttr -9.525754 -9.522415 -9.526365 -9.525056 -9.511548 -9.485230 -9.492477 #> gs  -9.955889 -9.957317 -9.972376 -9.949593 -9.920977 -9.940087 -9.945237 #> gdp -7.707476 -7.703028 -7.698674 -7.696936 -7.690253 -7.687829 -7.683889 #>      1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 #>        [,150]    [,151]    [,152]    [,153]    [,154]    [,155]    [,156] #> ttr -9.419928 -9.419417 -9.416456 -9.407336 -9.380921 -9.393687 -9.390874 #> gs  -9.958710 -9.968522 -9.981855 -9.957449 -9.981534 -9.966978 -9.963336 #> gdp -7.653085 -7.642347 -7.638943 -7.627927 -7.620614 -7.615184 -7.610080 #> ttr -9.425677 -9.419928 -9.419417 -9.416456 -9.407336 -9.380921 -9.393687 #> gs  -9.932680 -9.958710 -9.968522 -9.981855 -9.957449 -9.981534 -9.966978 #> gdp -7.655527 -7.653085 -7.642347 -7.638943 -7.627927 -7.620614 -7.615184 #> ttr -9.435887 -9.425677 -9.419928 -9.419417 -9.416456 -9.407336 -9.380921 #> gs  -9.941143 -9.932680 -9.958710 -9.968522 -9.981855 -9.957449 -9.981534 #> gdp -7.670075 -7.655527 -7.653085 -7.642347 -7.638943 -7.627927 -7.620614 #> ttr -9.417814 -9.435887 -9.425677 -9.419928 -9.419417 -9.416456 -9.407336 #> gs  -9.936707 -9.941143 -9.932680 -9.958710 -9.968522 -9.981855 -9.957449 #> gdp -7.676050 -7.670075 -7.655527 -7.653085 -7.642347 -7.638943 -7.627927 #>      1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 #>        [,157]    [,158]    [,159]    [,160]    [,161]    [,162]    [,163] #> ttr -9.385202 -9.399419 -9.394928 -9.392117 -9.400558 -9.419978 -9.422860 #> gs  -9.973769 -9.968919 -9.963899 -9.977767 -9.974638 -9.966187 -9.966618 #> gdp -7.610350 -7.607473 -7.605950 -7.607596 -7.619450 -7.626261 -7.620517 #> ttr -9.390874 -9.385202 -9.399419 -9.394928 -9.392117 -9.400558 -9.419978 #> gs  -9.963336 -9.973769 -9.968919 -9.963899 -9.977767 -9.974638 -9.966187 #> gdp -7.610080 -7.610350 -7.607473 -7.605950 -7.607596 -7.619450 -7.626261 #> ttr -9.393687 -9.390874 -9.385202 -9.399419 -9.394928 -9.392117 -9.400558 #> gs  -9.966978 -9.963336 -9.973769 -9.968919 -9.963899 -9.977767 -9.974638 #> gdp -7.615184 -7.610080 -7.610350 -7.607473 -7.605950 -7.607596 -7.619450 #> ttr -9.380921 -9.393687 -9.390874 -9.385202 -9.399419 -9.394928 -9.392117 #> gs  -9.981534 -9.966978 -9.963336 -9.973769 -9.968919 -9.963899 -9.977767 #> gdp -7.620614 -7.615184 -7.610080 -7.610350 -7.607473 -7.605950 -7.607596 #>      1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 #>        [,164]     [,165]     [,166]     [,167]     [,168]     [,169]     [,170] #> ttr -9.423722  -9.419158  -9.409620  -9.402732  -9.401977  -9.387803  -9.394204 #> gs  -9.977350 -10.001329 -10.002239 -10.009447  -9.994371  -9.997245 -10.036085 #> gdp -7.617926  -7.617210  -7.607513  -7.598970  -7.591836  -7.584511  -7.585374 #> ttr -9.422860  -9.423722  -9.419158  -9.409620  -9.402732  -9.401977  -9.387803 #> gs  -9.966618  -9.977350 -10.001329 -10.002239 -10.009447  -9.994371  -9.997245 #> gdp -7.620517  -7.617926  -7.617210  -7.607513  -7.598970  -7.591836  -7.584511 #> ttr -9.419978  -9.422860  -9.423722  -9.419158  -9.409620  -9.402732  -9.401977 #> gs  -9.966187  -9.966618  -9.977350 -10.001329 -10.002239 -10.009447  -9.994371 #> gdp -7.626261  -7.620517  -7.617926  -7.617210  -7.607513  -7.598970  -7.591836 #> ttr -9.400558  -9.419978  -9.422860  -9.423722  -9.419158  -9.409620  -9.402732 #> gs  -9.974638  -9.966187  -9.966618  -9.977350 -10.001329 -10.002239 -10.009447 #> gdp -7.619450  -7.626261  -7.620517  -7.617926  -7.617210  -7.607513  -7.598970 #>      1.000000   1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>         [,171]     [,172]     [,173]     [,174]     [,175]     [,176] #> ttr  -9.368211  -9.368649  -9.333457  -9.346189  -9.315611  -9.317661 #> gs  -10.050549 -10.055642 -10.053259 -10.091480 -10.094297 -10.073107 #> gdp  -7.581886  -7.579748  -7.569079  -7.561780  -7.550551  -7.547398 #> ttr  -9.394204  -9.368211  -9.368649  -9.333457  -9.346189  -9.315611 #> gs  -10.036085 -10.050549 -10.055642 -10.053259 -10.091480 -10.094297 #> gdp  -7.585374  -7.581886  -7.579748  -7.569079  -7.561780  -7.550551 #> ttr  -9.387803  -9.394204  -9.368211  -9.368649  -9.333457  -9.346189 #> gs   -9.997245 -10.036085 -10.050549 -10.055642 -10.053259 -10.091480 #> gdp  -7.584511  -7.585374  -7.581886  -7.579748  -7.569079  -7.561780 #> ttr  -9.401977  -9.387803  -9.394204  -9.368211  -9.368649  -9.333457 #> gs   -9.994371  -9.997245 -10.036085 -10.050549 -10.055642 -10.053259 #> gdp  -7.591836  -7.584511  -7.585374  -7.581886  -7.579748  -7.569079 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>         [,177]     [,178]     [,179]     [,180]     [,181]     [,182] #> ttr  -9.306432  -9.296443  -9.282219  -9.282775  -9.277038  -9.254816 #> gs  -10.099725 -10.100847 -10.104445 -10.114866 -10.143342 -10.128473 #> gdp  -7.538805  -7.536695  -7.535796  -7.529908  -7.525871  -7.520533 #> ttr  -9.317661  -9.306432  -9.296443  -9.282219  -9.282775  -9.277038 #> gs  -10.073107 -10.099725 -10.100847 -10.104445 -10.114866 -10.143342 #> gdp  -7.547398  -7.538805  -7.536695  -7.535796  -7.529908  -7.525871 #> ttr  -9.315611  -9.317661  -9.306432  -9.296443  -9.282219  -9.282775 #> gs  -10.094297 -10.073107 -10.099725 -10.100847 -10.104445 -10.114866 #> gdp  -7.550551  -7.547398  -7.538805  -7.536695  -7.535796  -7.529908 #> ttr  -9.346189  -9.315611  -9.317661  -9.306432  -9.296443  -9.282219 #> gs  -10.091480 -10.094297 -10.073107 -10.099725 -10.100847 -10.104445 #> gdp  -7.561780  -7.550551  -7.547398  -7.538805  -7.536695  -7.535796 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>         [,183]     [,184]     [,185]     [,186]     [,187]     [,188] #> ttr  -9.223117  -9.222325  -9.210036  -9.193762  -9.175955  -9.159679 #> gs  -10.131162 -10.144689 -10.154594 -10.175992 -10.151683 -10.160675 #> gdp  -7.506516  -7.500429  -7.493108  -7.491319  -7.477018  -7.467201 #> ttr  -9.254816  -9.223117  -9.222325  -9.210036  -9.193762  -9.175955 #> gs  -10.128473 -10.131162 -10.144689 -10.154594 -10.175992 -10.151683 #> gdp  -7.520533  -7.506516  -7.500429  -7.493108  -7.491319  -7.477018 #> ttr  -9.277038  -9.254816  -9.223117  -9.222325  -9.210036  -9.193762 #> gs  -10.143342 -10.128473 -10.131162 -10.144689 -10.154594 -10.175992 #> gdp  -7.525871  -7.520533  -7.506516  -7.500429  -7.493108  -7.491319 #> ttr  -9.282775  -9.277038  -9.254816  -9.223117  -9.222325  -9.210036 #> gs  -10.114866 -10.143342 -10.128473 -10.131162 -10.144689 -10.154594 #> gdp  -7.529908  -7.525871  -7.520533  -7.506516  -7.500429  -7.493108 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>         [,189]     [,190]     [,191]     [,192]     [,193]     [,194] #> ttr  -9.150566  -9.141338  -9.129729  -9.114887  -9.103975  -9.094116 #> gs  -10.161303 -10.194301 -10.173434 -10.177992 -10.174253 -10.179705 #> gdp  -7.461444  -7.453755  -7.447022  -7.437393  -7.424345  -7.418726 #> ttr  -9.159679  -9.150566  -9.141338  -9.129729  -9.114887  -9.103975 #> gs  -10.160675 -10.161303 -10.194301 -10.173434 -10.177992 -10.174253 #> gdp  -7.467201  -7.461444  -7.453755  -7.447022  -7.437393  -7.424345 #> ttr  -9.175955  -9.159679  -9.150566  -9.141338  -9.129729  -9.114887 #> gs  -10.151683 -10.160675 -10.161303 -10.194301 -10.173434 -10.177992 #> gdp  -7.477018  -7.467201  -7.461444  -7.453755  -7.447022  -7.437393 #> ttr  -9.193762  -9.175955  -9.159679  -9.150566  -9.141338  -9.129729 #> gs  -10.175992 -10.151683 -10.160675 -10.161303 -10.194301 -10.173434 #> gdp  -7.491319  -7.477018  -7.467201  -7.461444  -7.453755  -7.447022 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>         [,195]     [,196]     [,197]     [,198]     [,199]     [,200] #> ttr  -9.089010  -9.078380  -9.062930  -9.041612  -9.043770  -9.042799 #> gs  -10.179299 -10.161074 -10.137341 -10.181653 -10.156372 -10.177323 #> gdp  -7.413093  -7.402896  -7.389553  -7.399844  -7.384905  -7.387076 #> ttr  -9.094116  -9.089010  -9.078380  -9.062930  -9.041612  -9.043770 #> gs  -10.179705 -10.179299 -10.161074 -10.137341 -10.181653 -10.156372 #> gdp  -7.418726  -7.413093  -7.402896  -7.389553  -7.399844  -7.384905 #> ttr  -9.103975  -9.094116  -9.089010  -9.078380  -9.062930  -9.041612 #> gs  -10.174253 -10.179705 -10.179299 -10.161074 -10.137341 -10.181653 #> gdp  -7.424345  -7.418726  -7.413093  -7.402896  -7.389553  -7.399844 #> ttr  -9.114887  -9.103975  -9.094116  -9.089010  -9.078380  -9.062930 #> gs  -10.177992 -10.174253 -10.179705 -10.179299 -10.161074 -10.137341 #> gdp  -7.437393  -7.424345  -7.418726  -7.413093  -7.402896  -7.389553 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>         [,201]     [,202]     [,203]     [,204]     [,205]     [,206] #> ttr  -9.041627  -9.048031  -9.061039  -9.166843  -9.113358  -9.200035 #> gs  -10.178514 -10.164194 -10.153629 -10.148506 -10.136446 -10.103527 #> gdp  -7.384177  -7.389942  -7.386704  -7.393909  -7.394334  -7.388637 #> ttr  -9.042799  -9.041627  -9.048031  -9.061039  -9.166843  -9.113358 #> gs  -10.177323 -10.178514 -10.164194 -10.153629 -10.148506 -10.136446 #> gdp  -7.387076  -7.384177  -7.389942  -7.386704  -7.393909  -7.394334 #> ttr  -9.043770  -9.042799  -9.041627  -9.048031  -9.061039  -9.166843 #> gs  -10.156372 -10.177323 -10.178514 -10.164194 -10.153629 -10.148506 #> gdp  -7.384905  -7.387076  -7.384177  -7.389942  -7.386704  -7.393909 #> ttr  -9.041612  -9.043770  -9.042799  -9.041627  -9.048031  -9.061039 #> gs  -10.181653 -10.156372 -10.177323 -10.178514 -10.164194 -10.153629 #> gdp  -7.399844  -7.384905  -7.387076  -7.384177  -7.389942  -7.386704 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>         [,207]     [,208]     [,209]     [,210]     [,211]     [,212] #> ttr  -9.203658  -9.211968  -9.213676  -9.220183  -9.214303  -9.262687 #> gs  -10.080759 -10.070276 -10.043912 -10.033703  -9.999011  -9.999221 #> gdp  -7.384987  -7.384019  -7.385816  -7.387794  -7.381916  -7.368729 #> ttr  -9.200035  -9.203658  -9.211968  -9.213676  -9.220183  -9.214303 #> gs  -10.103527 -10.080759 -10.070276 -10.043912 -10.033703  -9.999011 #> gdp  -7.388637  -7.384987  -7.384019  -7.385816  -7.387794  -7.381916 #> ttr  -9.113358  -9.200035  -9.203658  -9.211968  -9.213676  -9.220183 #> gs  -10.136446 -10.103527 -10.080759 -10.070276 -10.043912 -10.033703 #> gdp  -7.394334  -7.388637  -7.384987  -7.384019  -7.385816  -7.387794 #> ttr  -9.166843  -9.113358  -9.200035  -9.203658  -9.211968  -9.213676 #> gs  -10.148506 -10.136446 -10.103527 -10.080759 -10.070276 -10.043912 #> gdp  -7.393909  -7.394334  -7.388637  -7.384987  -7.384019  -7.385816 #>       1.000000   1.000000   1.000000   1.000000   1.000000   1.000000 #>         [,213]    [,214]    [,215]    [,216]    [,217]    [,218]    [,219] #> ttr  -9.215967 -9.213807 -9.198302 -9.178285 -9.175689 -9.112637 -9.111814 #> gs   -9.982976 -9.971041 -9.967240 -9.956771 -9.959930 -9.946507 -9.948562 #> gdp  -7.360698 -7.355343 -7.350357 -7.344154 -7.337277 -7.328983 -7.326956 #> ttr  -9.262687 -9.215967 -9.213807 -9.198302 -9.178285 -9.175689 -9.112637 #> gs   -9.999221 -9.982976 -9.971041 -9.967240 -9.956771 -9.959930 -9.946507 #> gdp  -7.368729 -7.360698 -7.355343 -7.350357 -7.344154 -7.337277 -7.328983 #> ttr  -9.214303 -9.262687 -9.215967 -9.213807 -9.198302 -9.178285 -9.175689 #> gs   -9.999011 -9.999221 -9.982976 -9.971041 -9.967240 -9.956771 -9.959930 #> gdp  -7.381916 -7.368729 -7.360698 -7.355343 -7.350357 -7.344154 -7.337277 #> ttr  -9.220183 -9.214303 -9.262687 -9.215967 -9.213807 -9.198302 -9.178285 #> gs  -10.033703 -9.999011 -9.999221 -9.982976 -9.971041 -9.967240 -9.956771 #> gdp  -7.387794 -7.381916 -7.368729 -7.360698 -7.355343 -7.350357 -7.344154 #>       1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 #>        [,220]    [,221]    [,222]    [,223]    [,224]    [,225]    [,226] #> ttr -9.103912 -9.089071 -9.060205 -9.059423 -9.052004 -9.047759 -9.041875 #> gs  -9.942885 -9.946751 -9.922195 -9.933855 -9.945822 -9.933137 -9.944410 #> gdp -7.322447 -7.320194 -7.309280 -7.309765 -7.311469 -7.306242 -7.307412 #> ttr -9.111814 -9.103912 -9.089071 -9.060205 -9.059423 -9.052004 -9.047759 #> gs  -9.948562 -9.942885 -9.946751 -9.922195 -9.933855 -9.945822 -9.933137 #> gdp -7.326956 -7.322447 -7.320194 -7.309280 -7.309765 -7.311469 -7.306242 #> ttr -9.112637 -9.111814 -9.103912 -9.089071 -9.060205 -9.059423 -9.052004 #> gs  -9.946507 -9.948562 -9.942885 -9.946751 -9.922195 -9.933855 -9.945822 #> gdp -7.328983 -7.326956 -7.322447 -7.320194 -7.309280 -7.309765 -7.311469 #> ttr -9.175689 -9.112637 -9.111814 -9.103912 -9.089071 -9.060205 -9.059423 #> gs  -9.959930 -9.946507 -9.948562 -9.942885 -9.946751 -9.922195 -9.933855 #> gdp -7.337277 -7.328983 -7.326956 -7.322447 -7.320194 -7.309280 -7.309765 #>      1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 #>        [,227]    [,228]    [,229]    [,230]    [,231]    [,232]    [,233] #> ttr -9.044566 -9.057487 -9.057906 -9.078990 -9.095768 -9.111365 -9.168521 #> gs  -9.929581 -9.922385 -9.905020 -9.884386 -9.860672 -9.850809 -9.848056 #> gdp -7.303828 -7.300961 -7.298002 -7.301537 -7.298417 -7.306690 -7.331818 #> ttr -9.041875 -9.044566 -9.057487 -9.057906 -9.078990 -9.095768 -9.111365 #> gs  -9.944410 -9.929581 -9.922385 -9.905020 -9.884386 -9.860672 -9.850809 #> gdp -7.307412 -7.303828 -7.300961 -7.298002 -7.301537 -7.298417 -7.306690 #> ttr -9.047759 -9.041875 -9.044566 -9.057487 -9.057906 -9.078990 -9.095768 #> gs  -9.933137 -9.944410 -9.929581 -9.922385 -9.905020 -9.884386 -9.860672 #> gdp -7.306242 -7.307412 -7.303828 -7.300961 -7.298002 -7.301537 -7.298417 #> ttr -9.052004 -9.047759 -9.041875 -9.044566 -9.057487 -9.057906 -9.078990 #> gs  -9.945822 -9.933137 -9.944410 -9.929581 -9.922385 -9.905020 -9.884386 #> gdp -7.311469 -7.306242 -7.307412 -7.303828 -7.300961 -7.298002 -7.301537 #>      1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 #>        [,234]    [,235]    [,236]    [,237]    [,238]    [,239]    [,240] #> ttr -9.286408 -9.311006 -9.326022 -9.319208 -9.284601 -9.264859 -9.257914 #> gs  -9.843369 -9.820347 -9.811987 -9.795550 -9.781834 -9.768178 -9.774321 #> gdp -7.343908 -7.347934 -7.347000 -7.339120 -7.335211 -7.327728 -7.322542 #> ttr -9.168521 -9.286408 -9.311006 -9.326022 -9.319208 -9.284601 -9.264859 #> gs  -9.848056 -9.843369 -9.820347 -9.811987 -9.795550 -9.781834 -9.768178 #> gdp -7.331818 -7.343908 -7.347934 -7.347000 -7.339120 -7.335211 -7.327728 #> ttr -9.111365 -9.168521 -9.286408 -9.311006 -9.326022 -9.319208 -9.284601 #> gs  -9.850809 -9.848056 -9.843369 -9.820347 -9.811987 -9.795550 -9.781834 #> gdp -7.306690 -7.331818 -7.343908 -7.347934 -7.347000 -7.339120 -7.335211 #> ttr -9.095768 -9.111365 -9.168521 -9.286408 -9.311006 -9.326022 -9.319208 #> gs  -9.860672 -9.850809 -9.848056 -9.843369 -9.820347 -9.811987 -9.795550 #> gdp -7.298417 -7.306690 -7.331818 -7.343908 -7.347934 -7.347000 -7.339120 #>      1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 #>        [,241]    [,242]    [,243]    [,244]    [,245]    [,246]    [,247] #> ttr -9.253576 -9.235745 -9.230644 -9.232749 -9.221353 -9.231625 -9.220342 #> gs  -9.776139 -9.787145 -9.790554 -9.817488 -9.818702 -9.829654 -9.841671 #> gdp -7.319904 -7.322908 -7.318097 -7.320798 -7.311978 -7.312135 -7.309778 #> ttr -9.257914 -9.253576 -9.235745 -9.230644 -9.232749 -9.221353 -9.231625 #> gs  -9.774321 -9.776139 -9.787145 -9.790554 -9.817488 -9.818702 -9.829654 #> gdp -7.322542 -7.319904 -7.322908 -7.318097 -7.320798 -7.311978 -7.312135 #> ttr -9.264859 -9.257914 -9.253576 -9.235745 -9.230644 -9.232749 -9.221353 #> gs  -9.768178 -9.774321 -9.776139 -9.787145 -9.790554 -9.817488 -9.818702 #> gdp -7.327728 -7.322542 -7.319904 -7.322908 -7.318097 -7.320798 -7.311978 #> ttr -9.284601 -9.264859 -9.257914 -9.253576 -9.235745 -9.230644 -9.232749 #> gs  -9.781834 -9.768178 -9.774321 -9.776139 -9.787145 -9.790554 -9.817488 #> gdp -7.335211 -7.327728 -7.322542 -7.319904 -7.322908 -7.318097 -7.320798 #>      1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 #>        [,248]    [,249]    [,250]    [,251]    [,252]    [,253]    [,254] #> ttr -9.216603 -9.190699 -9.116075 -9.112126 -9.112690 -9.108763 -9.083061 #> gs  -9.845264 -9.871761 -9.901560 -9.912720 -9.931193 -9.941819 -9.951795 #> gdp -7.310487 -7.311859 -7.305920 -7.306705 -7.301254 -7.296620 -7.302236 #> ttr -9.220342 -9.216603 -9.190699 -9.116075 -9.112126 -9.112690 -9.108763 #> gs  -9.841671 -9.845264 -9.871761 -9.901560 -9.912720 -9.931193 -9.941819 #> gdp -7.309778 -7.310487 -7.311859 -7.305920 -7.306705 -7.301254 -7.296620 #> ttr -9.231625 -9.220342 -9.216603 -9.190699 -9.116075 -9.112126 -9.112690 #> gs  -9.829654 -9.841671 -9.845264 -9.871761 -9.901560 -9.912720 -9.931193 #> gdp -7.312135 -7.309778 -7.310487 -7.311859 -7.305920 -7.306705 -7.301254 #> ttr -9.221353 -9.231625 -9.220342 -9.216603 -9.190699 -9.116075 -9.112126 #> gs  -9.818702 -9.829654 -9.841671 -9.845264 -9.871761 -9.901560 -9.912720 #> gdp -7.311978 -7.312135 -7.309778 -7.310487 -7.311859 -7.305920 -7.306705 #>      1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 #>        [,255]    [,256]    [,257]    [,258]    [,259]    [,260]    [,261] #> ttr -9.075601 -9.076629 -9.063907 -9.033269 -9.030089 -9.039725 -9.068366 #> gs  -9.961108 -9.952091 -9.969639 -9.970974 -9.974841 -9.979869 -9.975718 #> gdp -7.291661 -7.282534 -7.280509 -7.276652 -7.273109 -7.272419 -7.273509 #> ttr -9.083061 -9.075601 -9.076629 -9.063907 -9.033269 -9.030089 -9.039725 #> gs  -9.951795 -9.961108 -9.952091 -9.969639 -9.970974 -9.974841 -9.979869 #> gdp -7.302236 -7.291661 -7.282534 -7.280509 -7.276652 -7.273109 -7.272419 #> ttr -9.108763 -9.083061 -9.075601 -9.076629 -9.063907 -9.033269 -9.030089 #> gs  -9.941819 -9.951795 -9.961108 -9.952091 -9.969639 -9.970974 -9.974841 #> gdp -7.296620 -7.302236 -7.291661 -7.282534 -7.280509 -7.276652 -7.273109 #> ttr -9.112690 -9.108763 -9.083061 -9.075601 -9.076629 -9.063907 -9.033269 #> gs  -9.931193 -9.941819 -9.951795 -9.961108 -9.952091 -9.969639 -9.970974 #> gdp -7.301254 -7.296620 -7.302236 -7.291661 -7.282534 -7.280509 -7.276652 #>      1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 #>        [,262]    [,263]    [,264]    [,265]    [,266]    [,267]    [,268] #> ttr -9.049971 -9.053930 -9.045044 -9.043340 -9.067338 -9.057461 -9.044439 #> gs  -9.978246 -9.990506 -9.985954 -9.988484 -9.994245 -9.987430 -9.990167 #> gdp -7.270966 -7.270315 -7.266979 -7.264705 -7.258864 -7.255344 -7.250474 #> ttr -9.068366 -9.049971 -9.053930 -9.045044 -9.043340 -9.067338 -9.057461 #> gs  -9.975718 -9.978246 -9.990506 -9.985954 -9.988484 -9.994245 -9.987430 #> gdp -7.273509 -7.270966 -7.270315 -7.266979 -7.264705 -7.258864 -7.255344 #> ttr -9.039725 -9.068366 -9.049971 -9.053930 -9.045044 -9.043340 -9.067338 #> gs  -9.979869 -9.975718 -9.978246 -9.990506 -9.985954 -9.988484 -9.994245 #> gdp -7.272419 -7.273509 -7.270966 -7.270315 -7.266979 -7.264705 -7.258864 #> ttr -9.030089 -9.039725 -9.068366 -9.049971 -9.053930 -9.045044 -9.043340 #> gs  -9.974841 -9.979869 -9.975718 -9.978246 -9.990506 -9.985954 -9.988484 #> gdp -7.273109 -7.272419 -7.273509 -7.270966 -7.270315 -7.266979 -7.264705 #>      1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 #>        [,269]    [,270]    [,271]    [,272]    [,273]    [,274]    [,275] #> ttr -9.040190 -9.075552 -9.068175 -9.058663 -9.050837 -9.028737 -9.034628 #> gs  -9.980406 -9.975755 -9.966998 -9.958413 -9.953657 -9.941474 -9.934768 #> gdp -7.243399 -7.239679 -7.233395 -7.230954 -7.231195 -7.224019 -7.217952 #> ttr -9.044439 -9.040190 -9.075552 -9.068175 -9.058663 -9.050837 -9.028737 #> gs  -9.990167 -9.980406 -9.975755 -9.966998 -9.958413 -9.953657 -9.941474 #> gdp -7.250474 -7.243399 -7.239679 -7.233395 -7.230954 -7.231195 -7.224019 #> ttr -9.057461 -9.044439 -9.040190 -9.075552 -9.068175 -9.058663 -9.050837 #> gs  -9.987430 -9.990167 -9.980406 -9.975755 -9.966998 -9.958413 -9.953657 #> gdp -7.255344 -7.250474 -7.243399 -7.239679 -7.233395 -7.230954 -7.231195 #> ttr -9.067338 -9.057461 -9.044439 -9.040190 -9.075552 -9.068175 -9.058663 #> gs  -9.994245 -9.987430 -9.990167 -9.980406 -9.975755 -9.966998 -9.958413 #> gdp -7.258864 -7.255344 -7.250474 -7.243399 -7.239679 -7.233395 -7.230954 #>      1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 #>        [,276]    [,277]    [,278]    [,279]    [,280]    [,281]    [,282] #> ttr -9.037270 -9.026834 -9.036080 -9.119120 -9.078036 -9.040318 -8.998997 #> gs  -9.928058 -9.922111 -9.914900 -9.865015 -9.882558 -9.891237 -9.864631 #> gdp -7.213312 -7.210875 -7.222513 -7.317755 -7.246939 -7.237858 -7.222038 #> ttr -9.034628 -9.037270 -9.026834 -9.036080 -9.119120 -9.078036 -9.040318 #> gs  -9.934768 -9.928058 -9.922111 -9.914900 -9.865015 -9.882558 -9.891237 #> gdp -7.217952 -7.213312 -7.210875 -7.222513 -7.317755 -7.246939 -7.237858 #> ttr -9.028737 -9.034628 -9.037270 -9.026834 -9.036080 -9.119120 -9.078036 #> gs  -9.941474 -9.934768 -9.928058 -9.922111 -9.914900 -9.865015 -9.882558 #> gdp -7.224019 -7.217952 -7.213312 -7.210875 -7.222513 -7.317755 -7.246939 #> ttr -9.050837 -9.028737 -9.034628 -9.037270 -9.026834 -9.036080 -9.119120 #> gs  -9.953657 -9.941474 -9.934768 -9.928058 -9.922111 -9.914900 -9.865015 #> gdp -7.231195 -7.224019 -7.217952 -7.213312 -7.210875 -7.222513 -7.317755 #>      1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 #>        [,283]    [,284] #> ttr -8.977226 -8.961696 #> gs  -9.884250 -9.900998 #> gdp -7.206880 -7.202713 #> ttr -8.998997 -8.977226 #> gs  -9.864631 -9.884250 #> gdp -7.222038 -7.206880 #> ttr -9.040318 -8.998997 #> gs  -9.891237 -9.864631 #> gdp -7.237858 -7.222038 #> ttr -9.078036 -9.040318 #> gs  -9.882558 -9.891237 #> gdp -7.246939 -7.237858 #>      1.000000  1.000000 #>"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_identification_bsvars.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","title":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","text":"class IdentificationBSVARs presents identifying restrictions bsvar models.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_identification_bsvars.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","text":"VB list N matrices determining unrestricted elements matrix \\(B\\).","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_identification_bsvars.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","text":"specify_identification_bsvars$new() specify_identification_bsvars$get_identification() specify_identification_bsvars$set_identification() specify_identification_bsvars$clone()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_identification_bsvars.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","text":"Create new identifying restrictions IdentificationBSVARs.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_identification_bsvars.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","text":"","code":"specify_identification_bsvars$new(N, B)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_identification_bsvars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","text":"N positive integer - number dependent variables model. B logical NxN matrix containing value TRUE elements  structural matrix \\(B\\) estimated value FALSE exclusion restrictions  set zero.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_identification_bsvars.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","text":"Identifying restrictions IdentificationBSVARs.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_identification_bsvars.html","id":"method-get-identification-","dir":"Reference","previous_headings":"","what":"Method get_identification()","title":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","text":"Returns elements identification pattern IdentificationBSVARs list.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_identification_bsvars.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","text":"","code":"specify_identification_bsvars$get_identification()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_identification_bsvars.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","text":"","code":"B    = matrix(c(TRUE,TRUE,TRUE,FALSE,FALSE,TRUE,FALSE,TRUE,TRUE), 3, 3); B spec = specify_identification_bsvars$new(N = 3, B = B) spec$get_identification()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_identification_bsvars.html","id":"method-set-identification-","dir":"Reference","previous_headings":"","what":"Method set_identification()","title":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","text":"Set new starting values StartingValuesBSVAR.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_identification_bsvars.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","text":"","code":"specify_identification_bsvars$set_identification(N, B)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_identification_bsvars.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","text":"N positive integer - number dependent variables model. B logical NxN matrix containing value TRUE elements  structural matrix \\(B\\) estimated value FALSE exclusion restrictions  set zero.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_identification_bsvars.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","text":"","code":"spec = specify_identification_bsvars$new(N = 3) # specify a model with the default option B    = matrix(c(TRUE,TRUE,TRUE,FALSE,FALSE,TRUE,FALSE,TRUE,TRUE), 3, 3); B spec$set_identification(N = 3, B = B)  # modify an existing specification spec$get_identification()              # check the outcome"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_identification_bsvars.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","text":"objects class cloneable method.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_identification_bsvars.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","text":"","code":"specify_identification_bsvars$clone(deep = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_identification_bsvars.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","text":"deep Whether make deep clone.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_identification_bsvars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing IdentificationBSVARs — specify_identification_bsvars","text":"","code":"specify_identification_bsvars$new(N = 3) # recursive specification for a 3-variable system #> <IdentificationBSVARs> #>   Public: #>     VB: list #>     clone: function (deep = FALSE)  #>     get_identification: function ()  #>     initialize: function (N, B)  #>     set_identification: function (N, B)   B = matrix(c(TRUE,TRUE,TRUE,FALSE,FALSE,TRUE,FALSE,TRUE,TRUE), 3, 3); B #>      [,1]  [,2]  [,3] #> [1,] TRUE FALSE FALSE #> [2,] TRUE FALSE  TRUE #> [3,] TRUE  TRUE  TRUE specify_identification_bsvars$new(N = 3, B = B) # an alternative identification pattern #> <IdentificationBSVARs> #>   Public: #>     VB: list #>     clone: function (deep = FALSE)  #>     get_identification: function ()  #>     initialize: function (N, B)  #>     set_identification: function (N, B)    ## ------------------------------------------------ ## Method `specify_identification_bsvars$get_identification` ## ------------------------------------------------  B    = matrix(c(TRUE,TRUE,TRUE,FALSE,FALSE,TRUE,FALSE,TRUE,TRUE), 3, 3); B #>      [,1]  [,2]  [,3] #> [1,] TRUE FALSE FALSE #> [2,] TRUE FALSE  TRUE #> [3,] TRUE  TRUE  TRUE spec = specify_identification_bsvars$new(N = 3, B = B) spec$get_identification() #> [[1]] #>      [,1] [,2] [,3] #> [1,]    1    0    0 #>  #> [[2]] #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    0    1 #>  #> [[3]] #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 #>    ## ------------------------------------------------ ## Method `specify_identification_bsvars$set_identification` ## ------------------------------------------------  spec = specify_identification_bsvars$new(N = 3) # specify a model with the default option B    = matrix(c(TRUE,TRUE,TRUE,FALSE,FALSE,TRUE,FALSE,TRUE,TRUE), 3, 3); B #>      [,1]  [,2]  [,3] #> [1,] TRUE FALSE FALSE #> [2,] TRUE FALSE  TRUE #> [3,] TRUE  TRUE  TRUE spec$set_identification(N = 3, B = B)  # modify an existing specification spec$get_identification()              # check the outcome #> [[1]] #>      [,1] [,2] [,3] #> [1,]    1    0    0 #>  #> [[2]] #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    0    1 #>  #> [[3]] #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 #>"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"class PosteriorBSVAR contains posterior output specification including  last MCMC draw homoskedastic bsvar model.  Note due thinning MCMC output starting value element last_draw might equal last draw provided element posterior.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"last_draw object class BSVAR last draw current MCMC run  starting value passed continuation MCMC estimation using estimate(). posterior list containing Bayesian estimation output collected elements  NxNxS array B, NxKxS array , 5xS matrix hyper.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"specify_posterior_bsvar$new() specify_posterior_bsvar$get_posterior() specify_posterior_bsvar$get_last_draw() specify_posterior_bsvar$is_normalised() specify_posterior_bsvar$set_normalised() specify_posterior_bsvar$clone()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"Create new posterior output PosteriorBSVAR.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"","code":"specify_posterior_bsvar$new(specification_bsvar, posterior_bsvar)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"specification_bsvar object class BSVAR last draw current  MCMC run starting value. posterior_bsvar list containing Bayesian estimation output collected elements  NxNxS array B, NxKxS array , 5xS matrix hyper.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"posterior output PosteriorBSVAR.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"method-get-posterior-","dir":"Reference","previous_headings":"","what":"Method get_posterior()","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"Returns list containing Bayesian estimation output collected elements  NxNxS array B, NxKxS array , 5xS matrix hyper.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"","code":"specify_posterior_bsvar$get_posterior()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"","code":"data(us_fiscal_lsuw) specification  = specify_bsvar$new(us_fiscal_lsuw) set.seed(123) estimate       = estimate(specification, 50) estimate$get_posterior()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"method-get-last-draw-","dir":"Reference","previous_headings":"","what":"Method get_last_draw()","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"Returns object class BSVAR last draw current MCMC run  starting value passed continuation MCMC estimation using estimate().","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"","code":"specify_posterior_bsvar$get_last_draw()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"","code":"data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar$new(us_fiscal_lsuw, p = 4) set.seed(123)  # run the burn-in burn_in        = estimate(specification, 10)  # estimate the model posterior      = estimate(burn_in, 10)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"method-is-normalised-","dir":"Reference","previous_headings":"","what":"Method is_normalised()","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"Returns TRUE posterior normalised using normalise_posterior()  FALSE otherwise.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"","code":"specify_posterior_bsvar$is_normalised()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"","code":"# upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar$new(us_fiscal_lsuw, p = 4) set.seed(123)  # estimate the model posterior      = estimate(specification, 10, thin = 1)  # check normalisation status beforehand posterior$is_normalised()  # normalise the posterior BB            = posterior$last_draw$starting_values$B      # get the last draw of B B_hat         = diag((-1) * sign(diag(BB))) %*% BB         # set negative diagonal elements normalise_posterior(posterior, B_hat)                      # draws in posterior are normalised  # check normalisation status afterwards posterior$is_normalised()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"method-set-normalised-","dir":"Reference","previous_headings":"","what":"Method set_normalised()","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"Sets private indicator normalised TRUE.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"","code":"specify_posterior_bsvar$set_normalised(value)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"value (optional) logical value passed indicator normalised.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"","code":"# This is an internal function that is run while executing normalise_posterior() # Observe its working by analysing the workflow:  # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar$new(us_fiscal_lsuw, p = 4) set.seed(123)  # estimate the model posterior      = estimate(specification, 10, thin = 1)  # check normalisation status beforehand posterior$is_normalised()  # normalise the posterior BB            = posterior$last_draw$starting_values$B      # get the last draw of B B_hat         = diag(sign(diag(BB))) %*% BB                # set positive diagonal elements normalise_posterior(posterior, B_hat)                      # draws in posterior are normalised  # check normalisation status afterwards posterior$is_normalised()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"objects class cloneable method.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"","code":"specify_posterior_bsvar$clone(deep = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"deep Whether make deep clone.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVAR — specify_posterior_bsvar","text":"","code":"# This is a function that is used within estimate() data(us_fiscal_lsuw) specification  = specify_bsvar$new(us_fiscal_lsuw, p = 4) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123) estimate       = estimate(specification, 50) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| class(estimate) #> [1] \"PosteriorBSVAR\" \"R6\"               ## ------------------------------------------------ ## Method `specify_posterior_bsvar$get_posterior` ## ------------------------------------------------  data(us_fiscal_lsuw) specification  = specify_bsvar$new(us_fiscal_lsuw) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123) estimate       = estimate(specification, 50) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 50 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| estimate$get_posterior() #> $B #> , , 1 #>  #>           [,1]       [,2]     [,3] #> [1,]  8.246166  0.0000000 0.000000 #> [2,]  1.059041 11.6452808 0.000000 #> [3,] -7.996275  0.4316857 2.261235 #>  #> , , 2 #>  #>            [,1]      [,2]     [,3] #> [1,]  33.590756  0.000000  0.00000 #> [2,]  -3.478451 40.250206  0.00000 #> [3,] -15.266535  4.873712 90.30222 #>  #> , , 3 #>  #>            [,1]      [,2]     [,3] #> [1,]  30.116324  0.000000  0.00000 #> [2,]   3.541067 41.653790  0.00000 #> [3,] -19.119636 -6.463221 93.50055 #>  #> , , 4 #>  #>            [,1]      [,2]     [,3] #> [1,]  35.183505  0.000000   0.0000 #> [2,]   1.847766 43.171694   0.0000 #> [3,] -23.689133 -2.534326 111.5848 #>  #> , , 5 #>  #>            [,1]       [,2]     [,3] #> [1,]  36.031990  0.0000000  0.00000 #> [2,]  -1.576095 38.3546955  0.00000 #> [3,] -23.228999 -0.1570972 96.51917 #>  #>  #> $A #> , , 1 #>  #>           [,1]       [,2]       [,3]       [,4] #> [1,] 1.1866015  0.1602957 -0.5349327 -0.7315587 #> [2,] 0.8954104  0.6432868 -0.8644682 -1.7147952 #> [3,] 0.3805066 -0.2156476  0.7718210 -0.2814126 #>  #> , , 2 #>  #>             [,1]        [,2]       [,3]       [,4] #> [1,]  0.83866638 -0.06224097 0.16616630 -0.8729357 #> [2,] -0.03192797  0.90959939 0.04500161 -0.8655784 #> [3,] -0.02648412 -0.01614322 1.02711225 -0.2006913 #>  #> , , 3 #>  #>              [,1]        [,2]        [,3]       [,4] #> [1,]  0.836689341 -0.04713884 0.171885014 -0.6975883 #> [2,] -0.002848658  0.92929187 0.003938336 -0.7056664 #> [3,] -0.010527385 -0.01187284 1.009039976 -0.1452509 #>  #> , , 4 #>  #>             [,1]         [,2]       [,3]       [,4] #> [1,]  0.82452699 -0.060110791 0.18791420 -0.8169635 #> [2,] -0.03511680  0.940951152 0.04171935 -0.6000846 #> [3,] -0.01831109 -0.007950811 1.01583539 -0.1272184 #>  #> , , 5 #>  #>              [,1]        [,2]       [,3]       [,4] #> [1,]  0.769546765 -0.08933037 0.24445603 -1.1979836 #> [2,] -0.004482105  0.91594267 0.01414451 -0.7769671 #> [3,] -0.027187239 -0.01298539 1.02651867 -0.1792951 #>  #>  #> $hyper #> , , 1 #>  #>           [,1]       [,2] #> [1,]  2.234132  1.1381151 #> [2,]  6.153157  1.0534307 #> [3,]  3.382887  0.5247989 #> [4,] 22.651755 17.4748071 #> [5,] 26.013064 15.6841633 #> [6,] 41.449674 10.0039639 #> [7,]  2.962011  0.8364195 #>  #> , , 2 #>  #>           [,1]      [,2] #> [1,]  121.6087 0.3877076 #> [2,]  353.8306 0.6605503 #> [3,]  405.9349 0.7588620 #> [4,]  876.6317 2.8224731 #> [5,] 1738.5579 5.1629408 #> [6,] 1728.2621 5.6213194 #> [7,]  169.4077 0.4774617 #>  #> , , 3 #>  #>           [,1]      [,2] #> [1,]  259.2463 0.1948415 #> [2,]  652.2263 0.4213016 #> [3,]  140.8131 0.2925567 #> [4,] 2476.1142 2.7281900 #> [5,] 2917.3593 5.1115057 #> [6,] 1897.8527 2.4840262 #> [7,]  230.3552 0.3727511 #>  #> , , 4 #>  #>           [,1]      [,2] #> [1,]  158.7195 0.4255014 #> [2,]  310.6153 0.1457934 #> [3,]  375.7099 0.2420101 #> [4,] 1162.3256 5.6961452 #> [5,] 1347.4836 2.8160795 #> [6,] 1503.9487 3.0972682 #> [7,]  132.2265 0.3534807 #>  #> , , 5 #>  #>           [,1]      [,2] #> [1,]  295.1975 0.3112446 #> [2,]  257.9352 0.3856760 #> [3,] 1084.9318 0.1912311 #> [4,] 2988.4797 1.9001633 #> [5,] 2039.3955 2.2455686 #> [6,] 3020.6710 2.1677368 #> [7,]  305.0629 0.3006561 #>  #>    ## ------------------------------------------------ ## Method `specify_posterior_bsvar$get_last_draw` ## ------------------------------------------------  data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar$new(us_fiscal_lsuw, p = 4) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # run the burn-in burn_in        = estimate(specification, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 10) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 10th draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|   ## ------------------------------------------------ ## Method `specify_posterior_bsvar$is_normalised` ## ------------------------------------------------  # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar$new(us_fiscal_lsuw, p = 4) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # estimate the model posterior      = estimate(specification, 10, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # check normalisation status beforehand posterior$is_normalised() #> [1] TRUE  # normalise the posterior BB            = posterior$last_draw$starting_values$B      # get the last draw of B B_hat         = diag((-1) * sign(diag(BB))) %*% BB         # set negative diagonal elements normalise_posterior(posterior, B_hat)                      # draws in posterior are normalised  # check normalisation status afterwards posterior$is_normalised() #> [1] TRUE   ## ------------------------------------------------ ## Method `specify_posterior_bsvar$set_normalised` ## ------------------------------------------------  # This is an internal function that is run while executing normalise_posterior() # Observe its working by analysing the workflow:  # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar$new(us_fiscal_lsuw, p = 4) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # estimate the model posterior      = estimate(specification, 10, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # check normalisation status beforehand posterior$is_normalised() #> [1] TRUE  # normalise the posterior BB            = posterior$last_draw$starting_values$B      # get the last draw of B B_hat         = diag(sign(diag(BB))) %*% BB                # set positive diagonal elements normalise_posterior(posterior, B_hat)                      # draws in posterior are normalised  # check normalisation status afterwards posterior$is_normalised() #> [1] TRUE"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"class PosteriorBSVARMIX contains posterior output specification including  last MCMC draw bsvar model zero-mean mixture normals model structural shocks. Note due thinning MCMC output starting value element last_draw might equal last draw provided element posterior.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"last_draw object class BSVARMIX last draw current MCMC run starting value passed continuation MCMC estimation using estimate(). posterior list containing Bayesian estimation output.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"specify_posterior_bsvar_mix$new() specify_posterior_bsvar_mix$get_posterior() specify_posterior_bsvar_mix$get_last_draw() specify_posterior_bsvar_mix$is_normalised() specify_posterior_bsvar_mix$set_normalised() specify_posterior_bsvar_mix$clone()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"Create new posterior output PosteriorBSVARMIX.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"","code":"specify_posterior_bsvar_mix$new(specification_bsvar, posterior_bsvar)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"specification_bsvar object class BSVARMIX last draw current MCMC run starting value. posterior_bsvar list containing Bayesian estimation output.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"posterior output PosteriorBSVARMIX.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"method-get-posterior-","dir":"Reference","previous_headings":"","what":"Method get_posterior()","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"Returns list containing Bayesian estimation output.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"","code":"specify_posterior_bsvar_mix$get_posterior()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"","code":"data(us_fiscal_lsuw) specification  = specify_bsvar_mix$new(us_fiscal_lsuw, M = 2) set.seed(123) estimate       = estimate(specification, 10, thin = 1) estimate$get_posterior()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"method-get-last-draw-","dir":"Reference","previous_headings":"","what":"Method get_last_draw()","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"Returns object class BSVARMIX last draw current MCMC run starting value passed continuation MCMC estimation using estimate().","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"","code":"specify_posterior_bsvar_mix$get_last_draw()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"","code":"data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_mix$new(us_fiscal_lsuw, p = 4, M = 2)  # run the burn-in set.seed(123) burn_in        = estimate(specification, 10, thin = 2)  # estimate the model posterior      = estimate(burn_in, 10, thin = 2)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"method-is-normalised-","dir":"Reference","previous_headings":"","what":"Method is_normalised()","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"Returns TRUE posterior normalised using normalise_posterior() FALSE otherwise.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"","code":"specify_posterior_bsvar_mix$is_normalised()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"","code":"# upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_mix$new(us_fiscal_lsuw, p = 4, M = 2)  # estimate the model set.seed(123) posterior      = estimate(specification, 10, thin = 1)  # check normalisation status beforehand posterior$is_normalised()  # normalise the posterior BB            = posterior$last_draw$starting_values$B      # get the last draw of B B_hat         = diag((-1) * sign(diag(BB))) %*% BB         # set negative diagonal elements normalise_posterior(posterior, B_hat)                      # draws in posterior are normalised  # check normalisation status afterwards posterior$is_normalised()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"method-set-normalised-","dir":"Reference","previous_headings":"","what":"Method set_normalised()","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"Sets private indicator normalised TRUE.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"","code":"specify_posterior_bsvar_mix$set_normalised(value)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"value (optional) logical value passed indicator normalised.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"","code":"# This is an internal function that is run while executing normalise_posterior() # Observe its working by analysing the workflow:  # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_mix$new(us_fiscal_lsuw, p = 4, M = 2) set.seed(123)  # estimate the model posterior      = estimate(specification, 10, thin = 1)  # check normalisation status beforehand posterior$is_normalised()  # normalise the posterior BB            = posterior$last_draw$starting_values$B      # get the last draw of B B_hat         = diag(sign(diag(BB))) %*% BB                # set positive diagonal elements normalise_posterior(posterior, B_hat)                      # draws in posterior are normalised  # check normalisation status afterwards posterior$is_normalised()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"objects class cloneable method.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"","code":"specify_posterior_bsvar_mix$clone(deep = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"deep Whether make deep clone.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_mix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVARMIX — specify_posterior_bsvar_mix","text":"","code":"# This is a function that is used within estimate() data(us_fiscal_lsuw) specification  = specify_bsvar_mix$new(us_fiscal_lsuw, p = 4, M = 2) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123) estimate       = estimate(specification, 10, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| class(estimate) #> [1] \"PosteriorBSVARMIX\" \"R6\"                  ## ------------------------------------------------ ## Method `specify_posterior_bsvar_mix$get_posterior` ## ------------------------------------------------  data(us_fiscal_lsuw) specification  = specify_bsvar_mix$new(us_fiscal_lsuw, M = 2) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123) estimate       = estimate(specification, 10, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| estimate$get_posterior() #> $B #> , , 1 #>  #>            [,1]        [,2]     [,3] #> [1,]  0.1184046  0.00000000  0.00000 #> [2,] -3.5501941  5.98079681  0.00000 #> [3,] -1.6622406 -0.05235605 29.65845 #>  #> , , 2 #>  #>             [,1]         [,2]     [,3] #> [1,]   0.1173776  0.000000000  0.00000 #> [2,] -11.0914265 18.693800983  0.00000 #> [3,]  -1.2223079  0.009808446 21.21336 #>  #> , , 3 #>  #>             [,1]      [,2]    [,3] #> [1,]   0.1093746  0.000000  0.0000 #> [2,] -14.2097936 23.964653  0.0000 #> [3,]  -2.1854295  1.286335 24.9253 #>  #> , , 4 #>  #>             [,1]      [,2]     [,3] #> [1,]   0.1179102  0.000000  0.00000 #> [2,] -12.0788808 20.362066  0.00000 #> [3,]  -5.5529648  5.488606 40.49778 #>  #> , , 5 #>  #>             [,1]       [,2]    [,3] #> [1,]   0.1123551  0.0000000  0.0000 #> [2,] -12.4786818 21.0231863  0.0000 #> [3,]  -1.5723679 -0.9061623 36.9193 #>  #> , , 6 #>  #>            [,1]     [,2]     [,3] #> [1,]  0.1350045  0.00000  0.00000 #> [2,] -9.8384814 16.58314  0.00000 #> [3,] -2.8404893  1.73894 31.56774 #>  #> , , 7 #>  #>           [,1]      [,2]     [,3] #> [1,]  0.113097  0.000000  0.00000 #> [2,] -7.935463 13.363055  0.00000 #> [3,] -5.202831  3.680382 52.68962 #>  #> , , 8 #>  #>            [,1]      [,2]     [,3] #> [1,]  0.1200275  0.000000  0.00000 #> [2,] -8.7000399 14.644920  0.00000 #> [3,] -2.8074607  1.627266 32.15407 #>  #> , , 9 #>  #>            [,1]      [,2]     [,3] #> [1,]  0.1123323  0.000000  0.00000 #> [2,] -9.6697965 16.274648  0.00000 #> [3,] -2.9173165  1.976018 30.36513 #>  #> , , 10 #>  #>            [,1]      [,2]     [,3] #> [1,]  0.1252953  0.000000  0.00000 #> [2,] -9.1441999 15.379003  0.00000 #> [3,] -2.5637493  0.836553 35.92573 #>  #>  #> $A #> , , 1 #>  #>             [,1]        [,2]        [,3]       [,4] #> [1,]  1.07952828 -0.65068650 -0.28928855  0.4056830 #> [2,] -0.09619737  0.69724651 -0.06674184  0.5247577 #> [3,] -0.02940041 -0.07261079  1.01321163 -0.4243181 #>  #> , , 2 #>  #>             [,1]        [,2]        [,3]       [,4] #> [1,]  0.69737315 -0.49775834  0.03783309  0.8369635 #> [2,] -0.09060158  0.65810431 -0.05644883  0.2630604 #> [3,] -0.08593227 -0.06999997  1.06362608 -0.5459031 #>  #> , , 3 #>  #>             [,1]        [,2]        [,3]        [,4] #> [1,]  0.75492001 -0.49452376 -0.01098208  1.03971810 #> [2,]  0.02694972  0.71469816 -0.17840237  1.00486023 #> [3,] -0.09915347 -0.02828677  1.09271919 -0.02950252 #>  #> , , 4 #>  #>             [,1]       [,2]        [,3]       [,4] #> [1,]  0.82814356 -0.4545713 -0.06733622  1.6993530 #> [2,]  0.06758617  0.7437511 -0.22639525  1.3141979 #> [3,] -0.05485465 -0.0433040  1.04248355 -0.1449795 #>  #> , , 5 #>  #>              [,1]       [,2]       [,3]      [,4] #> [1,]  0.906056297 -0.4701675 -0.1767446 1.4343472 #> [2,]  0.014495904  0.7058862 -0.1844931 0.7528483 #> [3,] -0.004101943 -0.0142762  0.9827867 0.1701606 #>  #> , , 6 #>  #>             [,1]        [,2]       [,3]        [,4] #> [1,]  0.93185006 -0.42557435 -0.2334229  1.69620846 #> [2,]  0.07686955  0.75813210 -0.2610122  1.28498243 #> [3,] -0.02529938 -0.04382919  1.0123537 -0.09946556 #>  #> , , 7 #>  #>             [,1]        [,2]       [,3]        [,4] #> [1,] 1.037227139 -0.44780767 -0.3354385  1.68530538 #> [2,] 0.111182146  0.75952501 -0.2913476  1.39196285 #> [3,] 0.003307712 -0.03665073  0.9776318 -0.02357098 #>  #> , , 8 #>  #>              [,1]        [,2]       [,3]       [,4] #> [1,] 1.0985446427 -0.40291947 -0.3948931 2.25732856 #> [2,] 0.1092116406  0.74653108 -0.2952122 1.21236344 #> [3,] 0.0008470804 -0.02819586  0.9821810 0.07422345 #>  #> , , 9 #>  #>            [,1]        [,2]       [,3]       [,4] #> [1,]  1.1141068 -0.40136482 -0.4256308 2.18371604 #> [2,]  0.1182971  0.74202394 -0.3026598 1.19698756 #> [3,] -0.0075830 -0.02304543  0.9867690 0.08216402 #>  #> , , 10 #>  #>              [,1]        [,2]       [,3]        [,4] #> [1,]  1.108005034 -0.42770026 -0.4037156 2.022659007 #> [2,]  0.114669362  0.72993599 -0.2982428 1.074515587 #> [3,] -0.004248242 -0.03523701  0.9886464 0.006167771 #>  #>  #> $sigma2 #> , , 1 #>  #>           [,1]     [,2] #> [1,] 0.9767598 1.023240 #> [2,] 0.9143821 1.085618 #> [3,] 0.5246598 1.475340 #>  #> , , 2 #>  #>           [,1]      [,2] #> [1,] 1.0133642 0.9866358 #> [2,] 0.5952339 1.4047661 #> [3,] 0.8361418 1.1638582 #>  #> , , 3 #>  #>           [,1]    [,2] #> [1,] 0.9520498 1.04795 #> [2,] 0.5603505 1.43965 #> [3,] 0.6960500 1.30395 #>  #> , , 4 #>  #>           [,1]     [,2] #> [1,] 0.9860194 1.013981 #> [2,] 0.4151558 1.584844 #> [3,] 0.5365582 1.463442 #>  #> , , 5 #>  #>           [,1]      [,2] #> [1,] 1.0859868 0.9140132 #> [2,] 0.2721265 1.7278735 #> [3,] 0.1797049 1.8202951 #>  #> , , 6 #>  #>           [,1]     [,2] #> [1,] 0.9529280 1.047072 #> [2,] 0.1015274 1.898473 #> [3,] 0.2418402 1.758160 #>  #> , , 7 #>  #>            [,1]     [,2] #> [1,] 0.84586785 1.154132 #> [2,] 0.12654212 1.873458 #> [3,] 0.07984806 1.920152 #>  #> , , 8 #>  #>            [,1]     [,2] #> [1,] 0.83026050 1.169740 #> [2,] 0.18454754 1.815452 #> [3,] 0.08400095 1.915999 #>  #> , , 9 #>  #>           [,1]      [,2] #> [1,] 1.1056943 0.8943057 #> [2,] 0.1482786 1.8517214 #> [3,] 0.0981281 1.9018719 #>  #> , , 10 #>  #>            [,1]      [,2] #> [1,] 1.35453424 0.6454658 #> [2,] 0.12928855 1.8707114 #> [3,] 0.05149378 1.9485062 #>  #>  #> $PR_TR #> , , 1 #>  #>           [,1]      [,2] #> [1,] 0.5189772 0.4810228 #> [2,] 0.5189772 0.4810228 #>  #> , , 2 #>  #>           [,1]      [,2] #> [1,] 0.5698039 0.4301961 #> [2,] 0.5698039 0.4301961 #>  #> , , 3 #>  #>          [,1]     [,2] #> [1,] 0.720388 0.279612 #> [2,] 0.720388 0.279612 #>  #> , , 4 #>  #>           [,1]      [,2] #> [1,] 0.8549849 0.1450151 #> [2,] 0.8549849 0.1450151 #>  #> , , 5 #>  #>           [,1]       [,2] #> [1,] 0.9205269 0.07947309 #> [2,] 0.9205269 0.07947309 #>  #> , , 6 #>  #>           [,1]      [,2] #> [1,] 0.9509885 0.0490115 #> [2,] 0.9509885 0.0490115 #>  #> , , 7 #>  #>           [,1]       [,2] #> [1,] 0.9456186 0.05438145 #> [2,] 0.9456186 0.05438145 #>  #> , , 8 #>  #>           [,1]       [,2] #> [1,] 0.9294235 0.07057655 #> [2,] 0.9294235 0.07057655 #>  #> , , 9 #>  #>           [,1]       [,2] #> [1,] 0.9626018 0.03739817 #> [2,] 0.9626018 0.03739817 #>  #> , , 10 #>  #>           [,1]       [,2] #> [1,] 0.9624814 0.03751857 #> [2,] 0.9624814 0.03751857 #>  #>  #> $pi_0 #>           [,1]      [,2]     [,3]      [,4]       [,5]      [,6]       [,7] #> [1,] 0.5189772 0.5698039 0.720388 0.8549849 0.92052691 0.9509885 0.94561855 #> [2,] 0.4810228 0.4301961 0.279612 0.1450151 0.07947309 0.0490115 0.05438145 #>            [,8]       [,9]      [,10] #> [1,] 0.92942345 0.96260183 0.96248143 #> [2,] 0.07057655 0.03739817 0.03751857 #>  #> $xi #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    0    0    0    0    1    0    0    0    0     1     1     1     1     1 #> [2,]    1    1    1    1    0    1    1    1    1     0     0     0     0     0 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     1     1     0     1     0     1     1     0     0     0     0     1 #> [2,]     0     0     1     0     1     0     0     1     1     1     1     0 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     0     1     1     1     1     1     1     0     0     1     1 #> [2,]     0     1     0     0     0     0     0     0     1     1     0     0 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     1     1     0     1     1     1     1     0     1     0     0 #> [2,]     0     0     0     1     0     0     0     0     1     0     1     1 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     0     0     0     0     1     1     0     1     1     0 #> [2,]     0     0     1     1     1     1     0     0     1     0     0     1 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     1     0     0     0     0     1     0     1     1     1     1     0 #> [2,]     0     1     1     1     1     0     1     0     0     0     0     1 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     1     0     1     1     1     1     0     1     0     0     0     1 #> [2,]     0     1     0     0     0     0     1     0     1     1     1     0 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     0     0     0     1     0     0     1     1     1     0     1     0 #> [2,]     1     1     1     0     1     1     0     0     0     1     0     1 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     1      1      0      0      1      0      1      1      1      0 #> [2,]     0      0      1      1      0      1      0      0      0      1 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      0      0      0      0      0      0      1      1      1 #> [2,]      0      1      1      1      1      1      1      0      0      0 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      1      0      0      1      1      0      0      0      0      1 #> [2,]      0      1      1      0      0      1      1      1      1      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      1      1      0      1      1      0      0      0      1      0 #> [2,]      0      0      1      0      0      1      1      1      0      1 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      1      1      1      0      1      1      0      1      0      1 #> [2,]      0      0      0      1      0      0      1      0      1      0 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      1      0      0      1      0      1      0      0      1      1 #> [2,]      0      1      1      0      1      0      1      1      0      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      0      0      0      1      1      1      0      1      0      0 #> [2,]      1      1      1      0      0      0      1      0      1      1 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      0      1      0      0      1      0      1      1      0      1 #> [2,]      1      0      1      1      0      1      0      0      1      0 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      0      0      0      0      1      1      0      1      1      0 #> [2,]      1      1      1      1      0      0      1      0      0      1 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      1      1      1      0      1      0      0      0      1      0 #> [2,]      0      0      0      1      0      1      1      1      0      1 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      0      0      0      0      1      0      1      0      1      1 #> [2,]      1      1      1      1      0      1      0      1      0      0 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      0      1      0      1      1      1      1      1      1      1 #> [2,]      1      0      1      0      0      0      0      0      0      0 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      0      1      0      1      0      1      1      1      1      0 #> [2,]      1      0      1      0      1      0      0      0      0      1 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      0      0      1      0      1      0      0      1      0      1 #> [2,]      1      1      0      1      0      1      1      0      1      0 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      1      1      0      1      0      0      0      1      1      0 #> [2,]      0      0      1      0      1      1      1      0      0      1 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      1      1      0      1      0      0      1      0      1      0 #> [2,]      0      0      1      0      1      1      0      1      0      1 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      0      1      1      0      1      1      0      1      1      1 #> [2,]      1      0      0      1      0      0      1      0      0      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      1      0      1      0      0      0      1      1      0      1 #> [2,]      0      1      0      1      1      1      0      0      1      0 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      0      0      0      0      0      0      1      0 #> [2,]      0      1      1      1      1      1      1      0      1 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    0    0    1    0    0    1    1    1    0     0     0     0     1     0 #> [2,]    1    1    0    1    1    0    0    0    1     1     1     1     0     1 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     1     0     1     0     0     1     1     0     1     0     1     0 #> [2,]     0     1     0     1     1     0     0     1     0     1     0     1 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     0     1     1     0     0     1     1     1     1     0     1 #> [2,]     0     1     0     0     1     1     0     0     0     0     1     0 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     0     0     1     0     0     1     1     0     0     1     0     1 #> [2,]     1     1     0     1     1     0     0     1     1     0     1     0 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     0     0     1     1     1     1     1     1     0     0 #> [2,]     0     0     1     1     0     0     0     0     0     0     1     1 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     0     0     1     1     1     0     0     1     0     1     1     0 #> [2,]     1     1     0     0     0     1     1     0     1     0     0     1 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     1     1     1     0     1     1     1     0     0     1     0     0 #> [2,]     0     0     0     1     0     0     0     1     1     0     1     1 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     1     1     0     0     1     0     1     1     0     0     1     1 #> [2,]     0     0     1     1     0     1     0     0     1     1     0     0 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     1      1      1      0      1      1      0      0      1      1 #> [2,]     0      0      0      1      0      0      1      1      0      0 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      0      1      0      1      1      0      0      0      1      0 #> [2,]      1      0      1      0      0      1      1      1      0      1 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      0      1      0      1      1      0      1      1      1      1 #> [2,]      1      0      1      0      0      1      0      0      0      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      0      1      1      1      1      0      1      0      1      1 #> [2,]      1      0      0      0      0      1      0      1      0      0 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      0      0      1      0      1      0      0      1      0      1 #> [2,]      1      1      0      1      0      1      1      0      1      0 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      1      1      1      0      0      1      1      1      1      1 #> [2,]      0      0      0      1      1      0      0      0      0      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      1      0      1      0      1      0      1      0      1      0 #> [2,]      0      1      0      1      0      1      0      1      0      1 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      1      0      0      1      1      1      1      1      1      0 #> [2,]      0      1      1      0      0      0      0      0      0      1 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      1      1      1      1      0      0      1      1      1      1 #> [2,]      0      0      0      0      1      1      0      0      0      0 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      0      0      0      0      1      0      1      0      0      1 #> [2,]      1      1      1      1      0      1      0      1      1      0 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      1      1      1      0      0      0      0      1      1      0 #> [2,]      0      0      0      1      1      1      1      0      0      1 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      1      1      1      1      0      1      1      1      1      0 #> [2,]      0      0      0      0      1      0      0      0      0      1 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      0      0      0      0      1      1      1      0      1 #> [2,]      0      1      1      1      1      0      0      0      1      0 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      0      1      0      1      0      1      1      1      1      1 #> [2,]      1      0      1      0      1      0      0      0      0      0 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      0      1      0      1      0      1      0      0      1      1 #> [2,]      1      0      1      0      1      0      1      1      0      0 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      1      1      0      1      1      1      1      0      1      1 #> [2,]      0      0      1      0      0      0      0      1      0      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      1      1      1      1      0      1      1      0      1      1 #> [2,]      0      0      0      0      1      0      0      1      0      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      1      1      0      1      1      1      1      0      0      0 #> [2,]      0      0      1      0      0      0      0      1      1      1 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      1      0      1      0      0      1      1      0 #> [2,]      0      0      1      0      1      1      0      0      1 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    1    0    0    1    0    0    0    0    1     1     1     1     1     0 #> [2,]    0    1    1    0    1    1    1    1    0     0     0     0     0     1 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     0     1     1     1     1     1     1     1     1     1     1     0 #> [2,]     1     0     0     0     0     0     0     0     0     0     0     1 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     1     1     0     0     0     0     1     1     0     1     0 #> [2,]     0     0     0     1     1     1     1     0     0     1     0     1 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     0     1     1     1     1     1     0     0     1     1     0     1 #> [2,]     1     0     0     0     0     0     1     1     0     0     1     0 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     0     1     1     1     1     1     1     1     1     1     0 #> [2,]     0     1     0     0     0     0     0     0     0     0     0     1 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     1     0     1     1     1     0     1     1     1     1     1     0 #> [2,]     0     1     0     0     0     1     0     0     0     0     0     1 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     1     1     1     1     1     1     1     1     0     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     1     0     0     0 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     0     1     1     0     1     1     1     0     1     1     1     1 #> [2,]     1     0     0     1     0     0     0     1     0     0     0     0 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     0      0      0      0      0      0      1      1      1      1 #> [2,]     1      1      1      1      1      1      0      0      0      0 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      1      1      1      0      1      0      0      1      1      1 #> [2,]      0      0      0      1      0      1      1      0      0      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      1      1      1      1      1      0      1      0      1      1 #> [2,]      0      0      0      0      0      1      0      1      0      0 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      0      0      0      1      1      1      1      1      0      1 #> [2,]      1      1      1      0      0      0      0      0      1      0 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      1      0      1      0      1      1      0      0      0      1 #> [2,]      0      1      0      1      0      0      1      1      1      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      0      1      0      1      1      0      1      1      1      1 #> [2,]      1      0      1      0      0      1      0      0      0      0 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      1      1      1      0      1      1      1      1      0      1 #> [2,]      0      0      0      1      0      0      0      0      1      0 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      1      1      1      1      1      0      1      1      1      0 #> [2,]      0      0      0      0      0      1      0      0      0      1 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      1      0      0      1      1      1      1      0      1      1 #> [2,]      0      1      1      0      0      0      0      1      0      0 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      0      1      1      0      1      0      1      0      1      1 #> [2,]      1      0      0      1      0      1      0      1      0      0 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      1      1      0      1      0      0      1      1      1 #> [2,]      0      0      0      1      0      1      1      0      0      0 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      1      0      1      1      1      0      1      1      0      1 #> [2,]      0      1      0      0      0      1      0      0      1      0 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      1      1      1      1      1      1      1      0      1      1 #> [2,]      0      0      0      0      0      0      0      1      0      0 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      1      1      1      1      0      1      1      1      1      1 #> [2,]      0      0      0      0      1      0      0      0      0      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      1      0      1      1      1      1      0      0      1      1 #> [2,]      0      1      0      0      0      0      1      1      0      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      1      1      1      0      1      1      1      1      1      0 #> [2,]      0      0      0      1      0      0      0      0      0      1 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      0      0      1      1      0      0      0      1 #> [2,]      0      1      1      0      0      1      1      1      0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    1    0    1    0    0    0    1    1    1     1     1     1     1     1 #> [2,]    0    1    0    1    1    1    0    0    0     0     0     0     0     0 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     1     1     1     1     1     1     1     1     0     1     1     0 #> [2,]     0     0     0     0     0     0     0     0     1     0     0     1 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     1     1     1     1     0     1     0     1     1     0     1 #> [2,]     0     0     0     0     0     1     0     1     0     0     1     0 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     1     1     0     1     1     0     1     1     1     1     0 #> [2,]     0     0     0     1     0     0     1     0     0     0     0     1 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     1     0     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     1     0     0     0     0     0     0     0     0 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     0     1     1     1     1     1     0     0     0     1     1     1 #> [2,]     1     0     0     0     0     0     1     1     1     0     0     0 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     1     1     1     1     1     1     1     1     0     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     1     0     0     0 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     1      1      1      1      1      1      1      0      1      1 #> [2,]     0      0      0      0      0      0      0      1      0      0 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      0      0      1      1      1      1      1      0      1 #> [2,]      0      1      1      0      0      0      0      0      1      0 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      1      0      1      1      1      1      1      1      1      1 #> [2,]      0      1      0      0      0      0      0      0      0      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      1      1      1      1      0      1      1      0      1      0 #> [2,]      0      0      0      0      1      0      0      1      0      1 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      1      1      0      1      1      1      1      1      1      1 #> [2,]      0      0      1      0      0      0      0      0      0      0 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      1      1      1      1      1      1      1      1      0      1 #> [2,]      0      0      0      0      0      0      0      0      1      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      1      0      0      1      1      0      1      1      1      1 #> [2,]      0      1      1      0      0      1      0      0      0      0 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      1      1      1      1      1      1      1      1      1      0 #> [2,]      0      0      0      0      0      0      0      0      0      1 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      1      1      1      1      1      1      1      0      1      0 #> [2,]      0      0      0      0      0      0      0      1      0      1 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      1      1      1      1      1      1      1      1      1      0 #> [2,]      0      0      0      0      0      0      0      0      0      1 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      1      1      1      1      1      1      0      1      1      0 #> [2,]      0      0      0      0      0      0      1      0      0      1 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      1      0      1      1      1      1      1      0      1 #> [2,]      0      0      1      0      0      0      0      0      1      0 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      1      1      0      1      1      1      1      0      0      1 #> [2,]      0      0      1      0      0      0      0      1      1      0 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      0      0      1      1      1      1      1      1      1      1 #> [2,]      1      1      0      0      0      0      0      0      0      0 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      1      1      1      1      1      1      1      1      0      1 #> [2,]      0      0      0      0      0      0      0      0      1      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      0      1      0      1      1      1      1      0      1      1 #> [2,]      1      0      1      0      0      0      0      1      0      0 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      1      0      1      1      1      0      1      1 #> [2,]      0      0      1      0      0      0      1      0      0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    1    0    1    0    0    0    1    1    1     1     1     1     1     1 #> [2,]    0    1    0    1    1    1    0    0    0     0     0     0     0     0 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     1     1     1     1     1     1     1     0     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     1     0     0 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     1     1     1     0     1     1     0     1     1     1     1     1 #> [2,]     0     0     0     1     0     0     1     0     0     0     0     0 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     0      1      1      1      1      1      1      1      1      1 #> [2,]     1      0      0      0      0      0      0      0      0      0 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      1      1      0      1      1      1      1      1      0 #> [2,]      0      0      0      1      0      0      0      0      0      1 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      1      1      1      1      1      1      1      0      1      1 #> [2,]      0      0      0      0      0      0      0      1      0      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      0      1      0      1      1      1      1      1      1      1 #> [2,]      1      0      1      0      0      0      0      0      0      0 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      0      1      0      1      1      1      1      1      0      1 #> [2,]      1      0      1      0      0      0      0      0      1      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      1      1      1      1      1      1      0      1      0      0 #> [2,]      0      0      0      0      0      0      1      0      1      1 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      1      1      1      1      1      1      1      1      1      0 #> [2,]      0      0      0      0      0      0      0      0      0      1 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      1      1      1      0      1      1      1      1      1 #> [2,]      0      0      0      0      1      0      0      0      0      0 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      1      1      1      1      1      1      1      0      1      1 #> [2,]      0      0      0      0      0      0      0      1      0      0 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      1      1      1      1      1      1      1      1      0      1 #> [2,]      0      0      0      0      0      0      0      0      1      0 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      1      1      1      1      1      1      0      1      1      1 #> [2,]      0      0      0      0      0      0      1      0      0      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      1      0      0      1      1      1      1      1 #> [2,]      0      0      1      1      0      0      0      0      0 #>  #> , , 6 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    1    0    0    0    0    0    1    1    1     1     1     1     1     1 #> [2,]    0    1    1    1    1    1    0    0    0     0     0     0     0     0 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     1     1     1     1     1     1     1     0     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     1     0     0     0 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     0 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     1 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     1      1      1      1      1      1      1      1      1      1 #> [2,]     0      0      0      0      0      0      0      0      0      0 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      1      1      1      1      1      1      0      1      1      1 #> [2,]      0      0      0      0      0      0      1      0      0      0 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      1      1      0      1      1      1      1      1      1      1 #> [2,]      0      0      1      0      0      0      0      0      0      0 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      1      1      0      1      1      1      1      1      1      1 #> [2,]      0      0      1      0      0      0      0      0      0      0 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      1      0      0      1      1      1      1      1 #> [2,]      0      0      1      1      0      0      0      0      0 #>  #> , , 7 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    1    0    1    0    0    0    1    1    1     1     1     1     1     1 #> [2,]    0    1    0    1    1    1    0    0    0     0     0     0     0     0 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     0     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     1     0     0     0     0     0     0     0     0     0     0 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     0 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     1 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     1     1     1     1     1     0     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     1     0     0     0     0     0     0 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     1      1      1      1      1      1      1      1      1      1 #> [2,]     0      0      0      0      0      0      0      0      0      0 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      1      0      1      1      1      1      1      0      1      1 #> [2,]      0      1      0      0      0      0      0      1      0      0 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      1      1      1      1      1      1      0      0      1      1 #> [2,]      0      0      0      0      0      0      1      1      0      0 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      1      1      1      0      1      1      1      1      1      1 #> [2,]      0      0      0      1      0      0      0      0      0      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      1      0      0      1      1      1      1      1 #> [2,]      0      0      1      1      0      0      0      0      0 #>  #> , , 8 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    1    0    1    0    0    0    1    1    1     1     1     1     1     1 #> [2,]    0    1    0    1    1    1    0    0    0     0     0     0     0     0 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     1     1     1     1     1     1     1     1     0     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     1     0     0 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     1     1     1     1     1     1     1     0     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     1     0     0     0     0 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     1      1      0      1      1      1      1      1      1      1 #> [2,]     0      0      1      0      0      0      0      0      0      0 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      1      1      0      1      1      1      1      1      1      1 #> [2,]      0      0      1      0      0      0      0      0      0      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      1      1      1      1      1      1      1      1      1      0 #> [2,]      0      0      0      0      0      0      0      0      0      1 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      1      1      1      1      1      1      1      1      1      0 #> [2,]      0      0      0      0      0      0      0      0      0      1 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      1      0      0      1      1      1      1      1 #> [2,]      0      0      1      1      0      0      0      0      0 #>  #> , , 9 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    1    0    1    0    0    0    1    1    1     1     1     1     1     1 #> [2,]    0    1    0    1    1    1    0    0    0     0     0     0     0     0 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     1     1     1     1     0     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     1     0     0     0     0     0     0 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     0     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     1     0     0     0     0     0     0     0     0     0     0 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     1     1     1     0     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     1     0     0     0     0     0     0     0     0 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     1      1      1      1      1      1      1      1      1      1 #> [2,]     0      0      0      0      0      0      0      0      0      0 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      1      1      1      1      1      1      0      1      1      1 #> [2,]      0      0      0      0      0      0      1      0      0      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      1      1      1      1      1      1      1      1      1      0 #> [2,]      0      0      0      0      0      0      0      0      0      1 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      1      1      1      1      1      1      1      0      1      1 #> [2,]      0      0      0      0      0      0      0      1      0      0 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      1      0      0      1      1      1      1      1 #> [2,]      0      0      1      1      0      0      0      0      0 #>  #> , , 10 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    1    0    1    0    0    0    1    1    1     1     1     1     1     1 #> [2,]    0    1    0    1    1    1    0    0    0     0     0     0     0     0 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     0     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     1     0     0     0     0     0     0     0     0     0     0 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     1      1      1      1      1      1      1      1      1      1 #> [2,]     0      0      0      0      0      0      0      0      0      0 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      1      1      0      1      1      1      1      1      1      1 #> [2,]      0      0      1      0      0      0      0      0      0      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      1      1      1      1      1      1      1      0      1      1 #> [2,]      0      0      0      0      0      0      0      1      0      0 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      1      0      0      1      1      1      1      1 #> [2,]      0      0      1      1      0      0      0      0      0 #>  #>  #> $hyper #> , , 1 #>  #>           [,1]       [,2] #> [1,]  2.234132  1.1814938 #> [2,]  6.153157  1.0693226 #> [3,]  3.382887  0.4896206 #> [4,] 22.651755 17.4748071 #> [5,] 26.013064 15.6841633 #> [6,] 41.449674 10.0039639 #> [7,]  2.962011  0.8364195 #>  #> , , 2 #>  #>           [,1]       [,2] #> [1,]  5.789075  2.1670132 #> [2,]  2.696252  1.4322540 #> [3,]  1.565133  0.6118335 #> [4,] 34.049109 13.1289475 #> [5,] 37.204351 13.2710791 #> [6,] 26.131708  4.7278626 #> [7,]  4.026556  1.4704932 #>  #> , , 3 #>  #>           [,1]      [,2] #> [1,] 14.742506  1.132011 #> [2,]  5.680918  2.228425 #> [3,]  2.270136  1.292629 #> [4,] 63.946935 13.221029 #> [5,] 48.056231 15.012967 #> [6,] 32.357760 11.789454 #> [7,]  4.762437  1.212488 #>  #> , , 4 #>  #>           [,1]       [,2] #> [1,]  7.173948  0.6598308 #> [2,]  3.973019  1.1116182 #> [3,]  7.061436  1.2056892 #> [4,] 89.864201 15.9349049 #> [5,] 36.992681 12.5570979 #> [6,] 50.130033 13.2345841 #> [7,]  7.574047  1.5482655 #>  #> , , 5 #>  #>            [,1]       [,2] #> [1,]  11.912425  1.0801221 #> [2,]   3.835945  0.8036728 #> [3,]   5.679323  1.5115766 #> [4,] 122.112868  9.6182546 #> [5,]  51.843974 11.2431221 #> [6,]  66.314536 21.3341718 #> [7,]   7.111158  1.9337495 #>  #> , , 6 #>  #>            [,1]       [,2] #> [1,]   9.986640  0.8727410 #> [2,]   5.948981  0.6704516 #> [3,]   4.833735  1.1485957 #> [4,] 134.913914 12.3135830 #> [5,]  48.543481 10.4363475 #> [6,]  98.447216 14.1609297 #> [7,]  10.374152  1.2761627 #>  #> , , 7 #>  #>           [,1]      [,2] #> [1,]  13.16949 1.2329071 #> [2,]  16.52444 0.4452091 #> [3,]  36.78559 0.6719479 #> [4,] 156.13511 9.7125290 #> [5,]  95.39734 6.9959207 #> [6,] 110.41681 7.8338301 #> [7,]  11.23744 0.9583984 #>  #> , , 8 #>  #>           [,1]      [,2] #> [1,]  17.25000 0.7311478 #> [2,]  12.33382 0.3414826 #> [3,]  18.46061 0.9848513 #> [4,] 158.04657 7.2797936 #> [5,] 184.04474 5.9000518 #> [6,] 168.60708 7.7233832 #> [7,]  15.59608 0.7524227 #>  #> , , 9 #>  #>            [,1]      [,2] #> [1,]  13.691887 1.2044327 #> [2,]   8.240985 0.7786461 #> [3,]  12.450171 0.6095003 #> [4,] 198.786279 9.4516524 #> [5,] 152.902380 7.4242689 #> [6,] 201.429439 4.7540941 #> [7,]  18.190624 0.9409730 #>  #> , , 10 #>  #>           [,1]       [,2] #> [1,]  44.17720  1.2688773 #> [2,]  10.86254  1.3252813 #> [3,]  12.81055  0.5925926 #> [4,] 223.24605 12.4725333 #> [5,] 109.24724  8.2003940 #> [6,] 222.90884  7.8855513 #> [7,]  20.14233  0.8251814 #>  #>  #> $sigma #> , , 1 #>  #>          [,1]     [,2]     [,3]     [,4]      [,5]     [,6]     [,7]     [,8] #> [1,] 1.011553 1.011553 1.011553 1.011553 0.9883116 1.011553 1.011553 1.011553 #> [2,] 1.041930 1.041930 1.041930 1.041930 0.9562333 1.041930 1.041930 1.041930 #> [3,] 1.214636 1.214636 1.214636 1.214636 0.7243340 1.214636 1.214636 1.214636 #>          [,9]     [,10]     [,11]     [,12]     [,13]     [,14]     [,15] #> [1,] 1.011553 0.9883116 0.9883116 0.9883116 0.9883116 0.9883116 0.9883116 #> [2,] 1.041930 0.9562333 0.9562333 0.9562333 0.9562333 0.9562333 0.9562333 #> [3,] 1.214636 0.7243340 0.7243340 0.7243340 0.7243340 0.7243340 0.7243340 #>          [,16]    [,17]     [,18]    [,19]     [,20]     [,21]    [,22] #> [1,] 0.9883116 1.011553 0.9883116 1.011553 0.9883116 0.9883116 1.011553 #> [2,] 0.9562333 1.041930 0.9562333 1.041930 0.9562333 0.9562333 1.041930 #> [3,] 0.7243340 1.214636 0.7243340 1.214636 0.7243340 0.7243340 1.214636 #>         [,23]    [,24]    [,25]     [,26]     [,27]    [,28]     [,29] #> [1,] 1.011553 1.011553 1.011553 0.9883116 0.9883116 1.011553 0.9883116 #> [2,] 1.041930 1.041930 1.041930 0.9562333 0.9562333 1.041930 0.9562333 #> [3,] 1.214636 1.214636 1.214636 0.7243340 0.7243340 1.214636 0.7243340 #>          [,30]     [,31]     [,32]     [,33]     [,34]    [,35]    [,36] #> [1,] 0.9883116 0.9883116 0.9883116 0.9883116 0.9883116 1.011553 1.011553 #> [2,] 0.9562333 0.9562333 0.9562333 0.9562333 0.9562333 1.041930 1.041930 #> [3,] 0.7243340 0.7243340 0.7243340 0.7243340 0.7243340 1.214636 1.214636 #>          [,37]     [,38]     [,39]     [,40]     [,41]    [,42]     [,43] #> [1,] 0.9883116 0.9883116 0.9883116 0.9883116 0.9883116 1.011553 0.9883116 #> [2,] 0.9562333 0.9562333 0.9562333 0.9562333 0.9562333 1.041930 0.9562333 #> [3,] 0.7243340 0.7243340 0.7243340 0.7243340 0.7243340 1.214636 0.7243340 #>          [,44]     [,45]     [,46]    [,47]     [,48]    [,49]    [,50] #> [1,] 0.9883116 0.9883116 0.9883116 1.011553 0.9883116 1.011553 1.011553 #> [2,] 0.9562333 0.9562333 0.9562333 1.041930 0.9562333 1.041930 1.041930 #> [3,] 0.7243340 0.7243340 0.7243340 1.214636 0.7243340 1.214636 1.214636 #>          [,51]     [,52]    [,53]    [,54]    [,55]    [,56]     [,57] #> [1,] 0.9883116 0.9883116 1.011553 1.011553 1.011553 1.011553 0.9883116 #> [2,] 0.9562333 0.9562333 1.041930 1.041930 1.041930 1.041930 0.9562333 #> [3,] 0.7243340 0.7243340 1.214636 1.214636 1.214636 1.214636 0.7243340 #>          [,58]    [,59]     [,60]     [,61]    [,62]     [,63]    [,64] #> [1,] 0.9883116 1.011553 0.9883116 0.9883116 1.011553 0.9883116 1.011553 #> [2,] 0.9562333 1.041930 0.9562333 0.9562333 1.041930 0.9562333 1.041930 #> [3,] 0.7243340 1.214636 0.7243340 0.7243340 1.214636 0.7243340 1.214636 #>         [,65]    [,66]    [,67]     [,68]    [,69]     [,70]     [,71] #> [1,] 1.011553 1.011553 1.011553 0.9883116 1.011553 0.9883116 0.9883116 #> [2,] 1.041930 1.041930 1.041930 0.9562333 1.041930 0.9562333 0.9562333 #> [3,] 1.214636 1.214636 1.214636 0.7243340 1.214636 0.7243340 0.7243340 #>          [,72]     [,73]    [,74]     [,75]    [,76]     [,77]     [,78] #> [1,] 0.9883116 0.9883116 1.011553 0.9883116 1.011553 0.9883116 0.9883116 #> [2,] 0.9562333 0.9562333 1.041930 0.9562333 1.041930 0.9562333 0.9562333 #> [3,] 0.7243340 0.7243340 1.214636 0.7243340 1.214636 0.7243340 0.7243340 #>          [,79]     [,80]    [,81]     [,82]    [,83]    [,84]    [,85] #> [1,] 0.9883116 0.9883116 1.011553 0.9883116 1.011553 1.011553 1.011553 #> [2,] 0.9562333 0.9562333 1.041930 0.9562333 1.041930 1.041930 1.041930 #> [3,] 0.7243340 0.7243340 1.214636 0.7243340 1.214636 1.214636 1.214636 #>          [,86]    [,87]    [,88]    [,89]     [,90]    [,91]    [,92]     [,93] #> [1,] 0.9883116 1.011553 1.011553 1.011553 0.9883116 1.011553 1.011553 0.9883116 #> [2,] 0.9562333 1.041930 1.041930 1.041930 0.9562333 1.041930 1.041930 0.9562333 #> [3,] 0.7243340 1.214636 1.214636 1.214636 0.7243340 1.214636 1.214636 0.7243340 #>          [,94]     [,95]    [,96]     [,97]    [,98]     [,99]    [,100] #> [1,] 0.9883116 0.9883116 1.011553 0.9883116 1.011553 0.9883116 0.9883116 #> [2,] 0.9562333 0.9562333 1.041930 0.9562333 1.041930 0.9562333 0.9562333 #> [3,] 0.7243340 0.7243340 1.214636 0.7243340 1.214636 0.7243340 0.7243340 #>        [,101]   [,102]    [,103]   [,104]    [,105]    [,106]    [,107] #> [1,] 1.011553 1.011553 0.9883116 1.011553 0.9883116 0.9883116 0.9883116 #> [2,] 1.041930 1.041930 0.9562333 1.041930 0.9562333 0.9562333 0.9562333 #> [3,] 1.214636 1.214636 0.7243340 1.214636 0.7243340 0.7243340 0.7243340 #>        [,108]    [,109]   [,110]   [,111]   [,112]   [,113]   [,114]   [,115] #> [1,] 1.011553 0.9883116 1.011553 1.011553 1.011553 1.011553 1.011553 1.011553 #> [2,] 1.041930 0.9562333 1.041930 1.041930 1.041930 1.041930 1.041930 1.041930 #> [3,] 1.214636 0.7243340 1.214636 1.214636 1.214636 1.214636 1.214636 1.214636 #>         [,116]    [,117]    [,118]    [,119]   [,120]   [,121]    [,122] #> [1,] 0.9883116 0.9883116 0.9883116 0.9883116 1.011553 1.011553 0.9883116 #> [2,] 0.9562333 0.9562333 0.9562333 0.9562333 1.041930 1.041930 0.9562333 #> [3,] 0.7243340 0.7243340 0.7243340 0.7243340 1.214636 1.214636 0.7243340 #>         [,123]   [,124]   [,125]   [,126]   [,127]    [,128]    [,129] #> [1,] 0.9883116 1.011553 1.011553 1.011553 1.011553 0.9883116 0.9883116 #> [2,] 0.9562333 1.041930 1.041930 1.041930 1.041930 0.9562333 0.9562333 #> [3,] 0.7243340 1.214636 1.214636 1.214636 1.214636 0.7243340 0.7243340 #>         [,130]   [,131]    [,132]    [,133]   [,134]   [,135]   [,136] #> [1,] 0.9883116 1.011553 0.9883116 0.9883116 1.011553 1.011553 1.011553 #> [2,] 0.9562333 1.041930 0.9562333 0.9562333 1.041930 1.041930 1.041930 #> [3,] 0.7243340 1.214636 0.7243340 0.7243340 1.214636 1.214636 1.214636 #>         [,137]   [,138]    [,139]    [,140]    [,141]   [,142]    [,143] #> [1,] 0.9883116 1.011553 0.9883116 0.9883116 0.9883116 1.011553 0.9883116 #> [2,] 0.9562333 1.041930 0.9562333 0.9562333 0.9562333 1.041930 0.9562333 #> [3,] 0.7243340 1.214636 0.7243340 0.7243340 0.7243340 1.214636 0.7243340 #>         [,144]   [,145]    [,146]   [,147]    [,148]    [,149]   [,150] #> [1,] 0.9883116 1.011553 0.9883116 1.011553 0.9883116 0.9883116 1.011553 #> [2,] 0.9562333 1.041930 0.9562333 1.041930 0.9562333 0.9562333 1.041930 #> [3,] 0.7243340 1.214636 0.7243340 1.214636 0.7243340 0.7243340 1.214636 #>        [,151]    [,152]   [,153]    [,154]   [,155]   [,156]    [,157] #> [1,] 1.011553 0.9883116 1.011553 0.9883116 1.011553 1.011553 0.9883116 #> [2,] 1.041930 0.9562333 1.041930 0.9562333 1.041930 1.041930 0.9562333 #> [3,] 1.214636 0.7243340 1.214636 0.7243340 1.214636 1.214636 0.7243340 #>         [,158]   [,159]   [,160]   [,161]    [,162]    [,163]    [,164] #> [1,] 0.9883116 1.011553 1.011553 1.011553 0.9883116 0.9883116 0.9883116 #> [2,] 0.9562333 1.041930 1.041930 1.041930 0.9562333 0.9562333 0.9562333 #> [3,] 0.7243340 1.214636 1.214636 1.214636 0.7243340 0.7243340 0.7243340 #>        [,165]    [,166]   [,167]   [,168]   [,169]    [,170]   [,171]   [,172] #> [1,] 1.011553 0.9883116 1.011553 1.011553 1.011553 0.9883116 1.011553 1.011553 #> [2,] 1.041930 0.9562333 1.041930 1.041930 1.041930 0.9562333 1.041930 1.041930 #> [3,] 1.214636 0.7243340 1.214636 1.214636 1.214636 0.7243340 1.214636 1.214636 #>         [,173]   [,174]    [,175]    [,176]   [,177]    [,178]   [,179] #> [1,] 0.9883116 1.011553 0.9883116 0.9883116 1.011553 0.9883116 1.011553 #> [2,] 0.9562333 1.041930 0.9562333 0.9562333 1.041930 0.9562333 1.041930 #> [3,] 0.7243340 1.214636 0.7243340 0.7243340 1.214636 0.7243340 1.214636 #>        [,180]   [,181]   [,182]    [,183]    [,184]   [,185]    [,186] #> [1,] 1.011553 1.011553 1.011553 0.9883116 0.9883116 1.011553 0.9883116 #> [2,] 1.041930 1.041930 1.041930 0.9562333 0.9562333 1.041930 0.9562333 #> [3,] 1.214636 1.214636 1.214636 0.7243340 0.7243340 1.214636 0.7243340 #>         [,187]   [,188]    [,189]    [,190]    [,191]   [,192]    [,193] #> [1,] 0.9883116 1.011553 0.9883116 0.9883116 0.9883116 1.011553 0.9883116 #> [2,] 0.9562333 1.041930 0.9562333 0.9562333 0.9562333 1.041930 0.9562333 #> [3,] 0.7243340 1.214636 0.7243340 0.7243340 0.7243340 1.214636 0.7243340 #>        [,194]   [,195]   [,196]    [,197]   [,198]   [,199]   [,200]   [,201] #> [1,] 1.011553 1.011553 1.011553 0.9883116 1.011553 1.011553 1.011553 1.011553 #> [2,] 1.041930 1.041930 1.041930 0.9562333 1.041930 1.041930 1.041930 1.041930 #> [3,] 1.214636 1.214636 1.214636 0.7243340 1.214636 1.214636 1.214636 1.214636 #>        [,202]    [,203]   [,204]    [,205]   [,206]    [,207]    [,208] #> [1,] 1.011553 0.9883116 1.011553 0.9883116 1.011553 0.9883116 0.9883116 #> [2,] 1.041930 0.9562333 1.041930 0.9562333 1.041930 0.9562333 0.9562333 #> [3,] 1.214636 0.7243340 1.214636 0.7243340 1.214636 0.7243340 0.7243340 #>        [,209]    [,210]   [,211]    [,212]    [,213]    [,214]    [,215] #> [1,] 1.011553 0.9883116 1.011553 0.9883116 0.9883116 0.9883116 0.9883116 #> [2,] 1.041930 0.9562333 1.041930 0.9562333 0.9562333 0.9562333 0.9562333 #> [3,] 1.214636 0.7243340 1.214636 0.7243340 0.7243340 0.7243340 0.7243340 #>         [,216]    [,217]    [,218]   [,219]    [,220]   [,221]    [,222] #> [1,] 0.9883116 0.9883116 0.9883116 1.011553 0.9883116 1.011553 0.9883116 #> [2,] 0.9562333 0.9562333 0.9562333 1.041930 0.9562333 1.041930 0.9562333 #> [3,] 0.7243340 0.7243340 0.7243340 1.214636 0.7243340 1.214636 0.7243340 #>        [,223]    [,224]    [,225]    [,226]    [,227]   [,228]   [,229] #> [1,] 1.011553 0.9883116 0.9883116 0.9883116 0.9883116 1.011553 1.011553 #> [2,] 1.041930 0.9562333 0.9562333 0.9562333 0.9562333 1.041930 1.041930 #> [3,] 1.214636 0.7243340 0.7243340 0.7243340 0.7243340 1.214636 1.214636 #>        [,230]    [,231]   [,232]    [,233]   [,234]   [,235]    [,236]   [,237] #> [1,] 1.011553 0.9883116 1.011553 0.9883116 1.011553 1.011553 0.9883116 1.011553 #> [2,] 1.041930 0.9562333 1.041930 0.9562333 1.041930 1.041930 0.9562333 1.041930 #> [3,] 1.214636 0.7243340 1.214636 0.7243340 1.214636 1.214636 0.7243340 1.214636 #>         [,238]    [,239]    [,240]   [,241]    [,242]   [,243]   [,244] #> [1,] 0.9883116 0.9883116 0.9883116 1.011553 0.9883116 1.011553 1.011553 #> [2,] 0.9562333 0.9562333 0.9562333 1.041930 0.9562333 1.041930 1.041930 #> [3,] 0.7243340 0.7243340 0.7243340 1.214636 0.7243340 1.214636 1.214636 #>        [,245]    [,246]    [,247]   [,248]    [,249]    [,250]   [,251] #> [1,] 1.011553 0.9883116 0.9883116 1.011553 0.9883116 0.9883116 1.011553 #> [2,] 1.041930 0.9562333 0.9562333 1.041930 0.9562333 0.9562333 1.041930 #> [3,] 1.214636 0.7243340 0.7243340 1.214636 0.7243340 0.7243340 1.214636 #>         [,252]   [,253]   [,254]    [,255]   [,256]    [,257]   [,258]   [,259] #> [1,] 0.9883116 1.011553 1.011553 0.9883116 1.011553 0.9883116 1.011553 1.011553 #> [2,] 0.9562333 1.041930 1.041930 0.9562333 1.041930 0.9562333 1.041930 1.041930 #> [3,] 0.7243340 1.214636 1.214636 0.7243340 1.214636 0.7243340 1.214636 1.214636 #>         [,260]    [,261]   [,262]    [,263]    [,264]   [,265]    [,266] #> [1,] 0.9883116 0.9883116 1.011553 0.9883116 0.9883116 1.011553 0.9883116 #> [2,] 0.9562333 0.9562333 1.041930 0.9562333 0.9562333 1.041930 0.9562333 #> [3,] 0.7243340 0.7243340 1.214636 0.7243340 0.7243340 1.214636 0.7243340 #>         [,267]    [,268]    [,269]   [,270]    [,271]   [,272]   [,273] #> [1,] 0.9883116 0.9883116 0.9883116 1.011553 0.9883116 1.011553 1.011553 #> [2,] 0.9562333 0.9562333 0.9562333 1.041930 0.9562333 1.041930 1.041930 #> [3,] 0.7243340 0.7243340 0.7243340 1.214636 0.7243340 1.214636 1.214636 #>        [,274]    [,275]    [,276]   [,277]    [,278]    [,279]   [,280] #> [1,] 1.011553 0.9883116 0.9883116 1.011553 0.9883116 0.9883116 1.011553 #> [2,] 1.041930 0.9562333 0.9562333 1.041930 0.9562333 0.9562333 1.041930 #> [3,] 1.214636 0.7243340 0.7243340 1.214636 0.7243340 0.7243340 1.214636 #>        [,281]   [,282]   [,283]   [,284]   [,285]    [,286]   [,287] #> [1,] 1.011553 1.011553 1.011553 1.011553 1.011553 0.9883116 1.011553 #> [2,] 1.041930 1.041930 1.041930 1.041930 1.041930 0.9562333 1.041930 #> [3,] 1.214636 1.214636 1.214636 1.214636 1.214636 0.7243340 1.214636 #>  #> , , 2 #>  #>           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #> [1,] 0.9932954 0.9932954 1.0066599 0.9932954 0.9932954 1.0066599 1.0066599 #> [2,] 1.1852283 1.1852283 0.7715140 1.1852283 1.1852283 0.7715140 0.7715140 #> [3,] 1.0788226 1.0788226 0.9144079 1.0788226 1.0788226 0.9144079 0.9144079 #>           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14] #> [1,] 1.0066599 0.9932954 0.9932954 0.9932954 0.9932954 1.0066599 0.9932954 #> [2,] 0.7715140 1.1852283 1.1852283 1.1852283 1.1852283 0.7715140 1.1852283 #> [3,] 0.9144079 1.0788226 1.0788226 1.0788226 1.0788226 0.9144079 1.0788226 #>          [,15]     [,16]     [,17]     [,18]     [,19]     [,20]     [,21] #> [1,] 1.0066599 0.9932954 1.0066599 0.9932954 0.9932954 1.0066599 1.0066599 #> [2,] 0.7715140 1.1852283 0.7715140 1.1852283 1.1852283 0.7715140 0.7715140 #> [3,] 0.9144079 1.0788226 0.9144079 1.0788226 1.0788226 0.9144079 0.9144079 #>          [,22]     [,23]     [,24]     [,25]     [,26]     [,27]     [,28] #> [1,] 0.9932954 1.0066599 0.9932954 1.0066599 0.9932954 1.0066599 0.9932954 #> [2,] 1.1852283 0.7715140 1.1852283 0.7715140 1.1852283 0.7715140 1.1852283 #> [3,] 1.0788226 0.9144079 1.0788226 0.9144079 1.0788226 0.9144079 1.0788226 #>          [,29]     [,30]     [,31]     [,32]     [,33]     [,34]     [,35] #> [1,] 1.0066599 1.0066599 0.9932954 0.9932954 1.0066599 1.0066599 1.0066599 #> [2,] 0.7715140 0.7715140 1.1852283 1.1852283 0.7715140 0.7715140 0.7715140 #> [3,] 0.9144079 0.9144079 1.0788226 1.0788226 0.9144079 0.9144079 0.9144079 #>          [,36]     [,37]     [,38]     [,39]     [,40]     [,41]     [,42] #> [1,] 1.0066599 0.9932954 1.0066599 0.9932954 0.9932954 1.0066599 0.9932954 #> [2,] 0.7715140 1.1852283 0.7715140 1.1852283 1.1852283 0.7715140 1.1852283 #> [3,] 0.9144079 1.0788226 0.9144079 1.0788226 1.0788226 0.9144079 1.0788226 #>          [,43]     [,44]     [,45]     [,46]     [,47]     [,48]     [,49] #> [1,] 0.9932954 1.0066599 1.0066599 0.9932954 0.9932954 1.0066599 0.9932954 #> [2,] 1.1852283 0.7715140 0.7715140 1.1852283 1.1852283 0.7715140 1.1852283 #> [3,] 1.0788226 0.9144079 0.9144079 1.0788226 1.0788226 0.9144079 1.0788226 #>          [,50]     [,51]     [,52]     [,53]     [,54]     [,55]     [,56] #> [1,] 1.0066599 1.0066599 1.0066599 0.9932954 0.9932954 1.0066599 1.0066599 #> [2,] 0.7715140 0.7715140 0.7715140 1.1852283 1.1852283 0.7715140 0.7715140 #> [3,] 0.9144079 0.9144079 0.9144079 1.0788226 1.0788226 0.9144079 0.9144079 #>          [,57]     [,58]     [,59]     [,60]     [,61]     [,62]     [,63] #> [1,] 1.0066599 1.0066599 1.0066599 1.0066599 0.9932954 0.9932954 0.9932954 #> [2,] 0.7715140 0.7715140 0.7715140 0.7715140 1.1852283 1.1852283 1.1852283 #> [3,] 0.9144079 0.9144079 0.9144079 0.9144079 1.0788226 1.0788226 1.0788226 #>          [,64]     [,65]     [,66]     [,67]     [,68]     [,69]     [,70] #> [1,] 0.9932954 1.0066599 1.0066599 1.0066599 0.9932954 0.9932954 1.0066599 #> [2,] 1.1852283 0.7715140 0.7715140 0.7715140 1.1852283 1.1852283 0.7715140 #> [3,] 1.0788226 0.9144079 0.9144079 0.9144079 1.0788226 1.0788226 0.9144079 #>          [,71]     [,72]     [,73]     [,74]     [,75]     [,76]     [,77] #> [1,] 0.9932954 1.0066599 1.0066599 0.9932954 1.0066599 1.0066599 1.0066599 #> [2,] 1.1852283 0.7715140 0.7715140 1.1852283 0.7715140 0.7715140 0.7715140 #> [3,] 1.0788226 0.9144079 0.9144079 1.0788226 0.9144079 0.9144079 0.9144079 #>          [,78]     [,79]     [,80]     [,81]     [,82]     [,83]     [,84] #> [1,] 0.9932954 1.0066599 1.0066599 1.0066599 0.9932954 0.9932954 1.0066599 #> [2,] 1.1852283 0.7715140 0.7715140 0.7715140 1.1852283 1.1852283 0.7715140 #> [3,] 1.0788226 0.9144079 0.9144079 0.9144079 1.0788226 1.0788226 0.9144079 #>          [,85]     [,86]     [,87]     [,88]     [,89]     [,90]     [,91] #> [1,] 0.9932954 0.9932954 1.0066599 1.0066599 0.9932954 0.9932954 1.0066599 #> [2,] 1.1852283 1.1852283 0.7715140 0.7715140 1.1852283 1.1852283 0.7715140 #> [3,] 1.0788226 1.0788226 0.9144079 0.9144079 1.0788226 1.0788226 0.9144079 #>          [,92]     [,93]     [,94]     [,95]     [,96]     [,97]     [,98] #> [1,] 0.9932954 1.0066599 1.0066599 0.9932954 0.9932954 1.0066599 1.0066599 #> [2,] 1.1852283 0.7715140 0.7715140 1.1852283 1.1852283 0.7715140 0.7715140 #> [3,] 1.0788226 0.9144079 0.9144079 1.0788226 1.0788226 0.9144079 0.9144079 #>          [,99]    [,100]    [,101]    [,102]    [,103]    [,104]    [,105] #> [1,] 1.0066599 1.0066599 1.0066599 0.9932954 1.0066599 1.0066599 0.9932954 #> [2,] 0.7715140 0.7715140 0.7715140 1.1852283 0.7715140 0.7715140 1.1852283 #> [3,] 0.9144079 0.9144079 0.9144079 1.0788226 0.9144079 0.9144079 1.0788226 #>         [,106]    [,107]    [,108]    [,109]    [,110]    [,111]    [,112] #> [1,] 0.9932954 1.0066599 1.0066599 0.9932954 1.0066599 0.9932954 1.0066599 #> [2,] 1.1852283 0.7715140 0.7715140 1.1852283 0.7715140 1.1852283 0.7715140 #> [3,] 1.0788226 0.9144079 0.9144079 1.0788226 0.9144079 1.0788226 0.9144079 #>         [,113]    [,114]    [,115]    [,116]    [,117]    [,118]    [,119] #> [1,] 1.0066599 0.9932954 0.9932954 0.9932954 1.0066599 0.9932954 0.9932954 #> [2,] 0.7715140 1.1852283 1.1852283 1.1852283 0.7715140 1.1852283 1.1852283 #> [3,] 0.9144079 1.0788226 1.0788226 1.0788226 0.9144079 1.0788226 1.0788226 #>         [,120]    [,121]    [,122]    [,123]    [,124]    [,125]    [,126] #> [1,] 1.0066599 0.9932954 1.0066599 1.0066599 0.9932954 1.0066599 1.0066599 #> [2,] 0.7715140 1.1852283 0.7715140 0.7715140 1.1852283 0.7715140 0.7715140 #> [3,] 0.9144079 1.0788226 0.9144079 0.9144079 1.0788226 0.9144079 0.9144079 #>         [,127]    [,128]    [,129]    [,130]    [,131]    [,132]    [,133] #> [1,] 1.0066599 1.0066599 0.9932954 1.0066599 1.0066599 1.0066599 1.0066599 #> [2,] 0.7715140 0.7715140 1.1852283 0.7715140 0.7715140 0.7715140 0.7715140 #> [3,] 0.9144079 0.9144079 1.0788226 0.9144079 0.9144079 0.9144079 0.9144079 #>         [,134]    [,135]    [,136]    [,137]    [,138]    [,139]    [,140] #> [1,] 0.9932954 1.0066599 0.9932954 1.0066599 1.0066599 0.9932954 0.9932954 #> [2,] 1.1852283 0.7715140 1.1852283 0.7715140 0.7715140 1.1852283 1.1852283 #> [3,] 1.0788226 0.9144079 1.0788226 0.9144079 0.9144079 1.0788226 1.0788226 #>         [,141]    [,142]    [,143]    [,144]    [,145]    [,146]    [,147] #> [1,] 1.0066599 0.9932954 1.0066599 0.9932954 0.9932954 1.0066599 0.9932954 #> [2,] 0.7715140 1.1852283 0.7715140 1.1852283 1.1852283 0.7715140 1.1852283 #> [3,] 0.9144079 1.0788226 0.9144079 1.0788226 1.0788226 0.9144079 1.0788226 #>         [,148]    [,149]    [,150]    [,151]    [,152]    [,153]    [,154] #> [1,] 1.0066599 1.0066599 1.0066599 1.0066599 0.9932954 0.9932954 1.0066599 #> [2,] 0.7715140 0.7715140 0.7715140 0.7715140 1.1852283 1.1852283 0.7715140 #> [3,] 0.9144079 0.9144079 0.9144079 0.9144079 1.0788226 1.0788226 0.9144079 #>         [,155]    [,156]    [,157]    [,158]    [,159]    [,160]    [,161] #> [1,] 1.0066599 1.0066599 1.0066599 1.0066599 1.0066599 0.9932954 1.0066599 #> [2,] 0.7715140 0.7715140 0.7715140 0.7715140 0.7715140 1.1852283 0.7715140 #> [3,] 0.9144079 0.9144079 0.9144079 0.9144079 0.9144079 1.0788226 0.9144079 #>         [,162]    [,163]    [,164]    [,165]    [,166]    [,167]    [,168] #> [1,] 0.9932954 1.0066599 0.9932954 1.0066599 0.9932954 1.0066599 0.9932954 #> [2,] 1.1852283 0.7715140 1.1852283 0.7715140 1.1852283 0.7715140 1.1852283 #> [3,] 1.0788226 0.9144079 1.0788226 0.9144079 1.0788226 0.9144079 1.0788226 #>         [,169]    [,170]    [,171]    [,172]    [,173]    [,174]    [,175] #> [1,] 1.0066599 0.9932954 0.9932954 1.0066599 1.0066599 1.0066599 1.0066599 #> [2,] 0.7715140 1.1852283 1.1852283 0.7715140 0.7715140 0.7715140 0.7715140 #> [3,] 0.9144079 1.0788226 1.0788226 0.9144079 0.9144079 0.9144079 0.9144079 #>         [,176]    [,177]    [,178]    [,179]    [,180]    [,181]    [,182] #> [1,] 1.0066599 1.0066599 0.9932954 1.0066599 1.0066599 1.0066599 1.0066599 #> [2,] 0.7715140 0.7715140 1.1852283 0.7715140 0.7715140 0.7715140 0.7715140 #> [3,] 0.9144079 0.9144079 1.0788226 0.9144079 0.9144079 0.9144079 0.9144079 #>         [,183]    [,184]    [,185]    [,186]    [,187]    [,188]    [,189] #> [1,] 0.9932954 0.9932954 1.0066599 1.0066599 1.0066599 1.0066599 0.9932954 #> [2,] 1.1852283 1.1852283 0.7715140 0.7715140 0.7715140 0.7715140 1.1852283 #> [3,] 1.0788226 1.0788226 0.9144079 0.9144079 0.9144079 0.9144079 1.0788226 #>         [,190]    [,191]    [,192]    [,193]    [,194]    [,195]    [,196] #> [1,] 0.9932954 0.9932954 0.9932954 1.0066599 0.9932954 1.0066599 0.9932954 #> [2,] 1.1852283 1.1852283 1.1852283 0.7715140 1.1852283 0.7715140 1.1852283 #> [3,] 1.0788226 1.0788226 1.0788226 0.9144079 1.0788226 0.9144079 1.0788226 #>         [,197]    [,198]    [,199]    [,200]    [,201]    [,202]    [,203] #> [1,] 0.9932954 1.0066599 1.0066599 1.0066599 1.0066599 0.9932954 0.9932954 #> [2,] 1.1852283 0.7715140 0.7715140 0.7715140 0.7715140 1.1852283 1.1852283 #> [3,] 1.0788226 0.9144079 0.9144079 0.9144079 0.9144079 1.0788226 1.0788226 #>         [,204]    [,205]    [,206]    [,207]    [,208]    [,209]    [,210] #> [1,] 0.9932954 0.9932954 1.0066599 1.0066599 0.9932954 1.0066599 1.0066599 #> [2,] 1.1852283 1.1852283 0.7715140 0.7715140 1.1852283 0.7715140 0.7715140 #> [3,] 1.0788226 1.0788226 0.9144079 0.9144079 1.0788226 0.9144079 0.9144079 #>         [,211]    [,212]    [,213]    [,214]    [,215]    [,216]    [,217] #> [1,] 1.0066599 1.0066599 0.9932954 1.0066599 1.0066599 1.0066599 1.0066599 #> [2,] 0.7715140 0.7715140 1.1852283 0.7715140 0.7715140 0.7715140 0.7715140 #> [3,] 0.9144079 0.9144079 1.0788226 0.9144079 0.9144079 0.9144079 0.9144079 #>         [,218]    [,219]    [,220]    [,221]    [,222]    [,223]    [,224] #> [1,] 0.9932954 1.0066599 0.9932954 0.9932954 0.9932954 0.9932954 1.0066599 #> [2,] 1.1852283 0.7715140 1.1852283 1.1852283 1.1852283 1.1852283 0.7715140 #> [3,] 1.0788226 0.9144079 1.0788226 1.0788226 1.0788226 1.0788226 0.9144079 #>         [,225]    [,226]    [,227]    [,228]    [,229]    [,230]    [,231] #> [1,] 1.0066599 1.0066599 0.9932954 1.0066599 0.9932954 1.0066599 0.9932954 #> [2,] 0.7715140 0.7715140 1.1852283 0.7715140 1.1852283 0.7715140 1.1852283 #> [3,] 0.9144079 0.9144079 1.0788226 0.9144079 1.0788226 0.9144079 1.0788226 #>         [,232]    [,233]    [,234]    [,235]    [,236]    [,237]    [,238] #> [1,] 1.0066599 0.9932954 1.0066599 1.0066599 1.0066599 1.0066599 1.0066599 #> [2,] 0.7715140 1.1852283 0.7715140 0.7715140 0.7715140 0.7715140 0.7715140 #> [3,] 0.9144079 1.0788226 0.9144079 0.9144079 0.9144079 0.9144079 0.9144079 #>         [,239]    [,240]    [,241]    [,242]    [,243]    [,244]    [,245] #> [1,] 0.9932954 1.0066599 0.9932954 1.0066599 0.9932954 1.0066599 0.9932954 #> [2,] 1.1852283 0.7715140 1.1852283 0.7715140 1.1852283 0.7715140 1.1852283 #> [3,] 1.0788226 0.9144079 1.0788226 0.9144079 1.0788226 0.9144079 1.0788226 #>         [,246]    [,247]    [,248]    [,249]    [,250]    [,251]    [,252] #> [1,] 0.9932954 1.0066599 1.0066599 1.0066599 1.0066599 0.9932954 1.0066599 #> [2,] 1.1852283 0.7715140 0.7715140 0.7715140 0.7715140 1.1852283 0.7715140 #> [3,] 1.0788226 0.9144079 0.9144079 0.9144079 0.9144079 1.0788226 0.9144079 #>         [,253]    [,254]    [,255]    [,256]    [,257]    [,258]    [,259] #> [1,] 1.0066599 1.0066599 1.0066599 0.9932954 1.0066599 1.0066599 1.0066599 #> [2,] 0.7715140 0.7715140 0.7715140 1.1852283 0.7715140 0.7715140 0.7715140 #> [3,] 0.9144079 0.9144079 0.9144079 1.0788226 0.9144079 0.9144079 0.9144079 #>         [,260]    [,261]    [,262]    [,263]    [,264]    [,265]    [,266] #> [1,] 1.0066599 1.0066599 1.0066599 0.9932954 1.0066599 1.0066599 0.9932954 #> [2,] 0.7715140 0.7715140 0.7715140 1.1852283 0.7715140 0.7715140 1.1852283 #> [3,] 0.9144079 0.9144079 0.9144079 1.0788226 0.9144079 0.9144079 1.0788226 #>         [,267]    [,268]    [,269]    [,270]    [,271]    [,272]    [,273] #> [1,] 1.0066599 1.0066599 1.0066599 1.0066599 0.9932954 1.0066599 1.0066599 #> [2,] 0.7715140 0.7715140 0.7715140 0.7715140 1.1852283 0.7715140 0.7715140 #> [3,] 0.9144079 0.9144079 0.9144079 0.9144079 1.0788226 0.9144079 0.9144079 #>         [,274]    [,275]    [,276]    [,277]    [,278]    [,279]    [,280] #> [1,] 1.0066599 1.0066599 0.9932954 0.9932954 0.9932954 1.0066599 1.0066599 #> [2,] 0.7715140 0.7715140 1.1852283 1.1852283 1.1852283 0.7715140 0.7715140 #> [3,] 0.9144079 0.9144079 1.0788226 1.0788226 1.0788226 0.9144079 0.9144079 #>         [,281]    [,282]    [,283]    [,284]    [,285]    [,286]    [,287] #> [1,] 0.9932954 1.0066599 0.9932954 0.9932954 1.0066599 1.0066599 0.9932954 #> [2,] 1.1852283 0.7715140 1.1852283 1.1852283 0.7715140 0.7715140 1.1852283 #> [3,] 1.0788226 0.9144079 1.0788226 1.0788226 0.9144079 0.9144079 1.0788226 #>  #> , , 3 #>  #>           [,1]     [,2]     [,3]      [,4]     [,5]     [,6]     [,7]     [,8] #> [1,] 0.9757304 1.023694 1.023694 0.9757304 1.023694 1.023694 1.023694 1.023694 #> [2,] 0.7485656 1.199854 1.199854 0.7485656 1.199854 1.199854 1.199854 1.199854 #> [3,] 0.8342961 1.141906 1.141906 0.8342961 1.141906 1.141906 1.141906 1.141906 #>           [,9]     [,10]     [,11]     [,12]     [,13]    [,14]    [,15] #> [1,] 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 1.023694 1.023694 #> [2,] 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 1.199854 1.199854 #> [3,] 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 1.141906 1.141906 #>          [,16]     [,17]     [,18]     [,19]     [,20]     [,21]     [,22] #> [1,] 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 #> [2,] 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 #> [3,] 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 #>          [,23]     [,24]     [,25]    [,26]     [,27]     [,28]     [,29] #> [1,] 0.9757304 0.9757304 0.9757304 1.023694 0.9757304 0.9757304 0.9757304 #> [2,] 0.7485656 0.7485656 0.7485656 1.199854 0.7485656 0.7485656 0.7485656 #> [3,] 0.8342961 0.8342961 0.8342961 1.141906 0.8342961 0.8342961 0.8342961 #>         [,30]    [,31]    [,32]    [,33]     [,34]     [,35]    [,36]     [,37] #> [1,] 1.023694 1.023694 1.023694 1.023694 0.9757304 0.9757304 1.023694 0.9757304 #> [2,] 1.199854 1.199854 1.199854 1.199854 0.7485656 0.7485656 1.199854 0.7485656 #> [3,] 1.141906 1.141906 1.141906 1.141906 0.8342961 0.8342961 1.141906 0.8342961 #>         [,38]    [,39]     [,40]     [,41]     [,42]     [,43]     [,44] #> [1,] 1.023694 1.023694 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 #> [2,] 1.199854 1.199854 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 #> [3,] 1.141906 1.141906 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 #>         [,45]    [,46]     [,47]     [,48]    [,49]     [,50]     [,51] #> [1,] 1.023694 1.023694 0.9757304 0.9757304 1.023694 0.9757304 0.9757304 #> [2,] 1.199854 1.199854 0.7485656 0.7485656 1.199854 0.7485656 0.7485656 #> [3,] 1.141906 1.141906 0.8342961 0.8342961 1.141906 0.8342961 0.8342961 #>         [,52]     [,53]     [,54]     [,55]     [,56]     [,57]     [,58] #> [1,] 1.023694 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 #> [2,] 1.199854 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 #> [3,] 1.141906 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 #>          [,59]     [,60]     [,61]    [,62]     [,63]    [,64]     [,65] #> [1,] 0.9757304 0.9757304 0.9757304 1.023694 0.9757304 1.023694 0.9757304 #> [2,] 0.7485656 0.7485656 0.7485656 1.199854 0.7485656 1.199854 0.7485656 #> [3,] 0.8342961 0.8342961 0.8342961 1.141906 0.8342961 1.141906 0.8342961 #>          [,66]     [,67]    [,68]     [,69]     [,70]     [,71]     [,72] #> [1,] 0.9757304 0.9757304 1.023694 0.9757304 0.9757304 0.9757304 0.9757304 #> [2,] 0.7485656 0.7485656 1.199854 0.7485656 0.7485656 0.7485656 0.7485656 #> [3,] 0.8342961 0.8342961 1.141906 0.8342961 0.8342961 0.8342961 0.8342961 #>          [,73]    [,74]     [,75]     [,76]     [,77]     [,78]     [,79] #> [1,] 0.9757304 1.023694 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 #> [2,] 0.7485656 1.199854 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 #> [3,] 0.8342961 1.141906 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 #>          [,80]     [,81]     [,82]    [,83]     [,84]     [,85]     [,86] #> [1,] 0.9757304 0.9757304 0.9757304 1.023694 0.9757304 0.9757304 0.9757304 #> [2,] 0.7485656 0.7485656 0.7485656 1.199854 0.7485656 0.7485656 0.7485656 #> [3,] 0.8342961 0.8342961 0.8342961 1.141906 0.8342961 0.8342961 0.8342961 #>         [,87]     [,88]     [,89]    [,90]     [,91]     [,92]     [,93] #> [1,] 1.023694 0.9757304 0.9757304 1.023694 0.9757304 0.9757304 0.9757304 #> [2,] 1.199854 0.7485656 0.7485656 1.199854 0.7485656 0.7485656 0.7485656 #> [3,] 1.141906 0.8342961 0.8342961 1.141906 0.8342961 0.8342961 0.8342961 #>         [,94]     [,95]     [,96]     [,97]     [,98]    [,99]   [,100] #> [1,] 1.023694 0.9757304 0.9757304 0.9757304 0.9757304 1.023694 1.023694 #> [2,] 1.199854 0.7485656 0.7485656 0.7485656 0.7485656 1.199854 1.199854 #> [3,] 1.141906 0.8342961 0.8342961 0.8342961 0.8342961 1.141906 1.141906 #>        [,101]   [,102]   [,103]   [,104]    [,105]    [,106]    [,107] #> [1,] 1.023694 1.023694 1.023694 1.023694 0.9757304 0.9757304 0.9757304 #> [2,] 1.199854 1.199854 1.199854 1.199854 0.7485656 0.7485656 0.7485656 #> [3,] 1.141906 1.141906 1.141906 1.141906 0.8342961 0.8342961 0.8342961 #>         [,108]    [,109]    [,110]    [,111]    [,112]    [,113]    [,114] #> [1,] 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 #> [2,] 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 #> [3,] 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 #>         [,115]    [,116]    [,117]    [,118]    [,119]    [,120]    [,121] #> [1,] 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 #> [2,] 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 #> [3,] 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 #>        [,122]    [,123]   [,124]   [,125]    [,126]    [,127]    [,128] #> [1,] 1.023694 0.9757304 1.023694 1.023694 0.9757304 0.9757304 0.9757304 #> [2,] 1.199854 0.7485656 1.199854 1.199854 0.7485656 0.7485656 0.7485656 #> [3,] 1.141906 0.8342961 1.141906 1.141906 0.8342961 0.8342961 0.8342961 #>         [,129]    [,130]    [,131]    [,132]    [,133]   [,134]    [,135] #> [1,] 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 1.023694 0.9757304 #> [2,] 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 1.199854 0.7485656 #> [3,] 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 1.141906 0.8342961 #>        [,136]    [,137]    [,138]   [,139]   [,140]   [,141]    [,142] #> [1,] 1.023694 0.9757304 0.9757304 1.023694 1.023694 1.023694 0.9757304 #> [2,] 1.199854 0.7485656 0.7485656 1.199854 1.199854 1.199854 0.7485656 #> [3,] 1.141906 0.8342961 0.8342961 1.141906 1.141906 1.141906 0.8342961 #>         [,143]    [,144]    [,145]    [,146]   [,147]    [,148]    [,149] #> [1,] 0.9757304 0.9757304 0.9757304 0.9757304 1.023694 0.9757304 0.9757304 #> [2,] 0.7485656 0.7485656 0.7485656 0.7485656 1.199854 0.7485656 0.7485656 #> [3,] 0.8342961 0.8342961 0.8342961 0.8342961 1.141906 0.8342961 0.8342961 #>        [,150]    [,151]   [,152]    [,153]    [,154]   [,155]   [,156]   [,157] #> [1,] 1.023694 0.9757304 1.023694 0.9757304 0.9757304 1.023694 1.023694 1.023694 #> [2,] 1.199854 0.7485656 1.199854 0.7485656 0.7485656 1.199854 1.199854 1.199854 #> [3,] 1.141906 0.8342961 1.141906 0.8342961 0.8342961 1.141906 1.141906 1.141906 #>         [,158]   [,159]    [,160]   [,161]    [,162]    [,163]   [,164] #> [1,] 0.9757304 1.023694 0.9757304 1.023694 0.9757304 0.9757304 1.023694 #> [2,] 0.7485656 1.199854 0.7485656 1.199854 0.7485656 0.7485656 1.199854 #> [3,] 0.8342961 1.141906 0.8342961 1.141906 0.8342961 0.8342961 1.141906 #>         [,165]    [,166]    [,167]    [,168]    [,169]    [,170]    [,171] #> [1,] 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 #> [2,] 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 #> [3,] 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 #>        [,172]    [,173]    [,174]    [,175]    [,176]   [,177]    [,178] #> [1,] 1.023694 0.9757304 0.9757304 0.9757304 0.9757304 1.023694 0.9757304 #> [2,] 1.199854 0.7485656 0.7485656 0.7485656 0.7485656 1.199854 0.7485656 #> [3,] 1.141906 0.8342961 0.8342961 0.8342961 0.8342961 1.141906 0.8342961 #>         [,179]    [,180]    [,181]    [,182]    [,183]    [,184]    [,185] #> [1,] 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 #> [2,] 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 #> [3,] 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 #>         [,186]    [,187]    [,188]    [,189]    [,190]    [,191]    [,192] #> [1,] 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 0.9757304 #> [2,] 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 0.7485656 #> [3,] 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 0.8342961 #>         [,193]   [,194]    [,195]    [,196]    [,197]   [,198]    [,199] #> [1,] 0.9757304 1.023694 0.9757304 0.9757304 0.9757304 1.023694 0.9757304 #> [2,] 0.7485656 1.199854 0.7485656 0.7485656 0.7485656 1.199854 0.7485656 #> [3,] 0.8342961 1.141906 0.8342961 0.8342961 0.8342961 1.141906 0.8342961 #>        [,200]   [,201]    [,202]    [,203]    [,204]    [,205]   [,206] #> [1,] 1.023694 1.023694 0.9757304 0.9757304 0.9757304 0.9757304 1.023694 #> [2,] 1.199854 1.199854 0.7485656 0.7485656 0.7485656 0.7485656 1.199854 #> [3,] 1.141906 1.141906 0.8342961 0.8342961 0.8342961 0.8342961 1.141906 #>         [,207]    [,208]   [,209]    [,210]    [,211]   [,212]    [,213] #> [1,] 0.9757304 0.9757304 1.023694 0.9757304 0.9757304 1.023694 0.9757304 #> [2,] 0.7485656 0.7485656 1.199854 0.7485656 0.7485656 1.199854 0.7485656 #> [3,] 0.8342961 0.8342961 1.141906 0.8342961 0.8342961 1.141906 0.8342961 #>        [,214]    [,215]   [,216]    [,217]    [,218]    [,219]    [,220] #> [1,] 1.023694 0.9757304 1.023694 0.9757304 0.9757304 0.9757304 0.9757304 #> [2,] 1.199854 0.7485656 1.199854 0.7485656 0.7485656 0.7485656 0.7485656 #> [3,] 1.141906 0.8342961 1.141906 0.8342961 0.8342961 0.8342961 0.8342961 #>         [,221]   [,222]    [,223]   [,224]   [,225]    [,226]    [,227] #> [1,] 0.9757304 1.023694 0.9757304 1.023694 1.023694 0.9757304 0.9757304 #> [2,] 0.7485656 1.199854 0.7485656 1.199854 1.199854 0.7485656 0.7485656 #> [3,] 0.8342961 1.141906 0.8342961 1.141906 1.141906 0.8342961 0.8342961 #>         [,228]    [,229]   [,230]    [,231]    [,232]    [,233]   [,234] #> [1,] 0.9757304 0.9757304 1.023694 0.9757304 0.9757304 0.9757304 1.023694 #> [2,] 0.7485656 0.7485656 1.199854 0.7485656 0.7485656 0.7485656 1.199854 #> [3,] 0.8342961 0.8342961 1.141906 0.8342961 0.8342961 0.8342961 1.141906 #>         [,235]    [,236]   [,237]    [,238]    [,239]    [,240]    [,241] #> [1,] 0.9757304 0.9757304 1.023694 0.9757304 0.9757304 0.9757304 0.9757304 #> [2,] 0.7485656 0.7485656 1.199854 0.7485656 0.7485656 0.7485656 0.7485656 #> [3,] 0.8342961 0.8342961 1.141906 0.8342961 0.8342961 0.8342961 0.8342961 #>         [,242]    [,243]    [,244]    [,245]   [,246]    [,247]    [,248] #> [1,] 0.9757304 0.9757304 0.9757304 0.9757304 1.023694 0.9757304 0.9757304 #> [2,] 0.7485656 0.7485656 0.7485656 0.7485656 1.199854 0.7485656 0.7485656 #> [3,] 0.8342961 0.8342961 0.8342961 0.8342961 1.141906 0.8342961 0.8342961 #>         [,249]    [,250]    [,251]    [,252]   [,253]    [,254]    [,255] #> [1,] 0.9757304 0.9757304 0.9757304 0.9757304 1.023694 0.9757304 0.9757304 #> [2,] 0.7485656 0.7485656 0.7485656 0.7485656 1.199854 0.7485656 0.7485656 #> [3,] 0.8342961 0.8342961 0.8342961 0.8342961 1.141906 0.8342961 0.8342961 #>         [,256]    [,257]    [,258]    [,259]   [,260]    [,261]    [,262] #> [1,] 0.9757304 0.9757304 0.9757304 0.9757304 1.023694 0.9757304 0.9757304 #> [2,] 0.7485656 0.7485656 0.7485656 0.7485656 1.199854 0.7485656 0.7485656 #> [3,] 0.8342961 0.8342961 0.8342961 0.8342961 1.141906 0.8342961 0.8342961 #>         [,263]    [,264]   [,265]   [,266]    [,267]    [,268]    [,269] #> [1,] 0.9757304 0.9757304 1.023694 1.023694 0.9757304 0.9757304 0.9757304 #> [2,] 0.7485656 0.7485656 1.199854 1.199854 0.7485656 0.7485656 0.7485656 #> [3,] 0.8342961 0.8342961 1.141906 1.141906 0.8342961 0.8342961 0.8342961 #>         [,270]    [,271]   [,272]    [,273]    [,274]    [,275]    [,276] #> [1,] 0.9757304 0.9757304 1.023694 0.9757304 0.9757304 0.9757304 0.9757304 #> [2,] 0.7485656 0.7485656 1.199854 0.7485656 0.7485656 0.7485656 0.7485656 #> [3,] 0.8342961 0.8342961 1.141906 0.8342961 0.8342961 0.8342961 0.8342961 #>         [,277]   [,278]    [,279]   [,280]   [,281]    [,282]    [,283] #> [1,] 0.9757304 1.023694 0.9757304 1.023694 1.023694 0.9757304 0.9757304 #> [2,] 0.7485656 1.199854 0.7485656 1.199854 1.199854 0.7485656 0.7485656 #> [3,] 0.8342961 1.141906 0.8342961 1.141906 1.141906 0.8342961 0.8342961 #>        [,284]   [,285]   [,286]    [,287] #> [1,] 1.023694 1.023694 1.023694 0.9757304 #> [2,] 1.199854 1.199854 1.199854 0.7485656 #> [3,] 1.141906 1.141906 1.141906 0.8342961 #>  #> , , 4 #>  #>           [,1]     [,2]      [,3]     [,4]     [,5]     [,6]      [,7] #> [1,] 0.9929851 1.006966 0.9929851 1.006966 1.006966 1.006966 0.9929851 #> [2,] 0.6443258 1.258906 0.6443258 1.258906 1.258906 1.258906 0.6443258 #> [3,] 0.7325013 1.209728 0.7325013 1.209728 1.209728 1.209728 0.7325013 #>           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 #>          [,15]     [,16]     [,17]     [,18]     [,19]     [,20]     [,21] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 #>          [,22]    [,23]     [,24]     [,25]    [,26]     [,27]     [,28] #> [1,] 0.9929851 1.006966 0.9929851 0.9929851 1.006966 0.9929851 0.9929851 #> [2,] 0.6443258 1.258906 0.6443258 0.6443258 1.258906 0.6443258 0.6443258 #> [3,] 0.7325013 1.209728 0.7325013 0.7325013 1.209728 0.7325013 0.7325013 #>          [,29]     [,30]     [,31]    [,32]     [,33]    [,34]     [,35] #> [1,] 0.9929851 0.9929851 0.9929851 1.006966 0.9929851 1.006966 0.9929851 #> [2,] 0.6443258 0.6443258 0.6443258 1.258906 0.6443258 1.258906 0.6443258 #> [3,] 0.7325013 0.7325013 0.7325013 1.209728 0.7325013 1.209728 0.7325013 #>          [,36]    [,37]     [,38]     [,39]     [,40]     [,41]    [,42] #> [1,] 0.9929851 1.006966 0.9929851 0.9929851 0.9929851 0.9929851 1.006966 #> [2,] 0.6443258 1.258906 0.6443258 0.6443258 0.6443258 0.6443258 1.258906 #> [3,] 0.7325013 1.209728 0.7325013 0.7325013 0.7325013 0.7325013 1.209728 #>          [,43]     [,44]    [,45]     [,46]     [,47]     [,48]     [,49] #> [1,] 0.9929851 0.9929851 1.006966 0.9929851 0.9929851 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 1.258906 0.6443258 0.6443258 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 1.209728 0.7325013 0.7325013 0.7325013 0.7325013 #>         [,50]     [,51]     [,52]     [,53]    [,54]     [,55]     [,56] #> [1,] 1.006966 0.9929851 0.9929851 0.9929851 1.006966 0.9929851 0.9929851 #> [2,] 1.258906 0.6443258 0.6443258 0.6443258 1.258906 0.6443258 0.6443258 #> [3,] 1.209728 0.7325013 0.7325013 0.7325013 1.209728 0.7325013 0.7325013 #>          [,57]     [,58]     [,59]     [,60]     [,61]     [,62]    [,63] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 1.006966 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 1.258906 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 1.209728 #>          [,64]     [,65]     [,66]     [,67]     [,68]    [,69]    [,70] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 1.006966 1.006966 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 1.258906 1.258906 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 1.209728 1.209728 #>         [,71]     [,72]     [,73]     [,74]     [,75]     [,76]     [,77] #> [1,] 1.006966 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 #> [2,] 1.258906 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 #> [3,] 1.209728 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 #>          [,78]     [,79]     [,80]     [,81]     [,82]    [,83]     [,84] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 1.006966 0.9929851 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 1.258906 0.6443258 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 1.209728 0.7325013 #>          [,85]     [,86]     [,87]     [,88]     [,89]     [,90]     [,91] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 #>          [,92]     [,93]     [,94]     [,95]     [,96]     [,97]     [,98] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 #>          [,99]    [,100]    [,101]    [,102]    [,103]    [,104]    [,105] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 #>        [,106]    [,107]    [,108]    [,109]   [,110]   [,111]    [,112] #> [1,] 1.006966 0.9929851 0.9929851 0.9929851 1.006966 1.006966 0.9929851 #> [2,] 1.258906 0.6443258 0.6443258 0.6443258 1.258906 1.258906 0.6443258 #> [3,] 1.209728 0.7325013 0.7325013 0.7325013 1.209728 1.209728 0.7325013 #>         [,113]    [,114]    [,115]    [,116]   [,117]    [,118]    [,119] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 1.006966 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 1.258906 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 1.209728 0.7325013 0.7325013 #>        [,120]    [,121]    [,122]    [,123]    [,124]    [,125]    [,126] #> [1,] 1.006966 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 #> [2,] 1.258906 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 #> [3,] 1.209728 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 #>         [,127]    [,128]    [,129]    [,130]    [,131]    [,132]   [,133] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 1.006966 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 1.258906 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 1.209728 #>         [,134]    [,135]   [,136]    [,137]   [,138]    [,139]    [,140] #> [1,] 0.9929851 0.9929851 1.006966 0.9929851 1.006966 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 1.258906 0.6443258 1.258906 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 1.209728 0.7325013 1.209728 0.7325013 0.7325013 #>        [,141]    [,142]    [,143]    [,144]    [,145]    [,146]    [,147] #> [1,] 1.006966 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 #> [2,] 1.258906 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 #> [3,] 1.209728 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 #>         [,148]    [,149]    [,150]    [,151]    [,152]    [,153]    [,154] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 #>         [,155]    [,156]   [,157]    [,158]    [,159]    [,160]    [,161] #> [1,] 0.9929851 0.9929851 1.006966 0.9929851 0.9929851 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 1.258906 0.6443258 0.6443258 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 1.209728 0.7325013 0.7325013 0.7325013 0.7325013 #>         [,162]    [,163]    [,164]    [,165]    [,166]    [,167]    [,168] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 #>         [,169]   [,170]   [,171]    [,172]    [,173]   [,174]    [,175] #> [1,] 0.9929851 1.006966 1.006966 0.9929851 0.9929851 1.006966 0.9929851 #> [2,] 0.6443258 1.258906 1.258906 0.6443258 0.6443258 1.258906 0.6443258 #> [3,] 0.7325013 1.209728 1.209728 0.7325013 0.7325013 1.209728 0.7325013 #>         [,176]    [,177]    [,178]    [,179]    [,180]    [,181]    [,182] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 #>         [,183]    [,184]    [,185]    [,186]    [,187]   [,188]    [,189] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 1.006966 0.9929851 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 1.258906 0.6443258 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 1.209728 0.7325013 #>         [,190]    [,191]    [,192]    [,193]    [,194]    [,195]   [,196] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 1.006966 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 1.258906 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 1.209728 #>         [,197]   [,198]    [,199]    [,200]    [,201]    [,202]    [,203] #> [1,] 0.9929851 1.006966 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 #> [2,] 0.6443258 1.258906 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 #> [3,] 0.7325013 1.209728 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 #>         [,204]    [,205]    [,206]    [,207]   [,208]    [,209]    [,210] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 1.006966 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 1.258906 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 1.209728 0.7325013 0.7325013 #>         [,211]    [,212]    [,213]    [,214]   [,215]    [,216]    [,217] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 1.006966 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 1.258906 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 1.209728 0.7325013 0.7325013 #>        [,218]    [,219]    [,220]   [,221]    [,222]    [,223]    [,224] #> [1,] 1.006966 0.9929851 0.9929851 1.006966 0.9929851 0.9929851 0.9929851 #> [2,] 1.258906 0.6443258 0.6443258 1.258906 0.6443258 0.6443258 0.6443258 #> [3,] 1.209728 0.7325013 0.7325013 1.209728 0.7325013 0.7325013 0.7325013 #>         [,225]    [,226]   [,227]    [,228]    [,229]    [,230]   [,231] #> [1,] 0.9929851 0.9929851 1.006966 0.9929851 0.9929851 0.9929851 1.006966 #> [2,] 0.6443258 0.6443258 1.258906 0.6443258 0.6443258 0.6443258 1.258906 #> [3,] 0.7325013 0.7325013 1.209728 0.7325013 0.7325013 0.7325013 1.209728 #>         [,232]    [,233]    [,234]    [,235]   [,236]   [,237]    [,238] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 1.006966 1.006966 0.9929851 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 1.258906 1.258906 0.6443258 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 1.209728 1.209728 0.7325013 #>        [,239]   [,240]    [,241]    [,242]    [,243]    [,244]    [,245] #> [1,] 1.006966 1.006966 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 #> [2,] 1.258906 1.258906 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 #> [3,] 1.209728 1.209728 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 #>         [,246]    [,247]    [,248]    [,249]    [,250]    [,251]    [,252] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 #>         [,253]    [,254]    [,255]    [,256]   [,257]    [,258]    [,259] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 1.006966 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 1.258906 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 1.209728 0.7325013 0.7325013 #>         [,260]    [,261]    [,262]    [,263]    [,264]    [,265]    [,266] #> [1,] 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 0.7325013 #>         [,267]    [,268]   [,269]    [,270]   [,271]    [,272]    [,273] #> [1,] 0.9929851 0.9929851 1.006966 0.9929851 1.006966 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 1.258906 0.6443258 1.258906 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 1.209728 0.7325013 1.209728 0.7325013 0.7325013 #>         [,274]    [,275]   [,276]    [,277]    [,278]    [,279]    [,280] #> [1,] 0.9929851 0.9929851 1.006966 0.9929851 0.9929851 0.9929851 0.9929851 #> [2,] 0.6443258 0.6443258 1.258906 0.6443258 0.6443258 0.6443258 0.6443258 #> [3,] 0.7325013 0.7325013 1.209728 0.7325013 0.7325013 0.7325013 0.7325013 #>        [,281]    [,282]    [,283]    [,284]   [,285]    [,286]    [,287] #> [1,] 1.006966 0.9929851 0.9929851 0.9929851 1.006966 0.9929851 0.9929851 #> [2,] 1.258906 0.6443258 0.6443258 0.6443258 1.258906 0.6443258 0.6443258 #> [3,] 1.209728 0.7325013 0.7325013 0.7325013 1.209728 0.7325013 0.7325013 #>  #> , , 5 #>  #>           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #> [1,] 1.0421069 0.9560404 1.0421069 0.9560404 0.9560404 0.9560404 1.0421069 #> [2,] 0.5216574 1.3144860 0.5216574 1.3144860 1.3144860 1.3144860 0.5216574 #> [3,] 0.4239162 1.3491831 0.4239162 1.3491831 1.3491831 1.3491831 0.4239162 #>           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>          [,15]     [,16]     [,17]     [,18]     [,19]     [,20]     [,21] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>          [,22]     [,23]     [,24]     [,25]     [,26]     [,27]     [,28] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>          [,29]     [,30]     [,31]     [,32]     [,33]     [,34]     [,35] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>          [,36]     [,37]     [,38]     [,39]     [,40]     [,41]     [,42] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>          [,43]     [,44]     [,45]     [,46]     [,47]     [,48]     [,49] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>          [,50]     [,51]     [,52]     [,53]     [,54]     [,55]     [,56] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>          [,57]     [,58]     [,59]     [,60]     [,61]     [,62]     [,63] #> [1,] 1.0421069 1.0421069 1.0421069 0.9560404 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 1.3144860 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 1.3491831 0.4239162 0.4239162 0.4239162 #>          [,64]     [,65]     [,66]     [,67]     [,68]     [,69]     [,70] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>          [,71]     [,72]     [,73]     [,74]     [,75]     [,76]     [,77] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>          [,78]     [,79]     [,80]     [,81]     [,82]     [,83]     [,84] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>          [,85]     [,86]     [,87]     [,88]     [,89]     [,90]     [,91] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 0.9560404 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 1.3144860 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 1.3491831 0.4239162 #>          [,92]     [,93]     [,94]     [,95]     [,96]     [,97]     [,98] #> [1,] 1.0421069 0.9560404 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 1.3144860 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 1.3491831 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>          [,99]    [,100]    [,101]    [,102]    [,103]    [,104]    [,105] #> [1,] 0.9560404 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 1.3144860 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 1.3491831 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>         [,106]    [,107]    [,108]    [,109]    [,110]    [,111]    [,112] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 0.9560404 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 1.3144860 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 1.3491831 #>         [,113]    [,114]    [,115]    [,116]    [,117]    [,118]    [,119] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 0.9560404 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 1.3144860 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 1.3491831 0.4239162 #>         [,120]    [,121]    [,122]    [,123]    [,124]    [,125]    [,126] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 0.9560404 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 1.3144860 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 1.3491831 #>         [,127]    [,128]    [,129]    [,130]    [,131]    [,132]    [,133] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>         [,134]    [,135]    [,136]    [,137]    [,138]    [,139]    [,140] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 0.9560404 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 1.3144860 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 1.3491831 0.4239162 #>         [,141]    [,142]    [,143]    [,144]    [,145]    [,146]    [,147] #> [1,] 0.9560404 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 1.3144860 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 1.3491831 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>         [,148]    [,149]    [,150]    [,151]    [,152]    [,153]    [,154] #> [1,] 1.0421069 0.9560404 1.0421069 0.9560404 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 1.3144860 0.5216574 1.3144860 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 1.3491831 0.4239162 1.3491831 0.4239162 0.4239162 0.4239162 #>         [,155]    [,156]    [,157]    [,158]    [,159]    [,160]    [,161] #> [1,] 1.0421069 1.0421069 0.9560404 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 1.3144860 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 1.3491831 0.4239162 0.4239162 0.4239162 0.4239162 #>         [,162]    [,163]    [,164]    [,165]    [,166]    [,167]    [,168] #> [1,] 1.0421069 1.0421069 1.0421069 0.9560404 1.0421069 0.9560404 0.9560404 #> [2,] 0.5216574 0.5216574 0.5216574 1.3144860 0.5216574 1.3144860 1.3144860 #> [3,] 0.4239162 0.4239162 0.4239162 1.3491831 0.4239162 1.3491831 1.3491831 #>         [,169]    [,170]    [,171]    [,172]    [,173]    [,174]    [,175] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>         [,176]    [,177]    [,178]    [,179]    [,180]    [,181]    [,182] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>         [,183]    [,184]    [,185]    [,186]    [,187]    [,188]    [,189] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>         [,190]    [,191]    [,192]    [,193]    [,194]    [,195]    [,196] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>         [,197]    [,198]    [,199]    [,200]    [,201]    [,202]    [,203] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>         [,204]    [,205]    [,206]    [,207]    [,208]    [,209]    [,210] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>         [,211]    [,212]    [,213]    [,214]    [,215]    [,216]    [,217] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>         [,218]    [,219]    [,220]    [,221]    [,222]    [,223]    [,224] #> [1,] 0.9560404 1.0421069 1.0421069 1.0421069 1.0421069 0.9560404 1.0421069 #> [2,] 1.3144860 0.5216574 0.5216574 0.5216574 0.5216574 1.3144860 0.5216574 #> [3,] 1.3491831 0.4239162 0.4239162 0.4239162 0.4239162 1.3491831 0.4239162 #>         [,225]    [,226]    [,227]    [,228]    [,229]    [,230]    [,231] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>         [,232]    [,233]    [,234]    [,235]    [,236]    [,237]    [,238] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 0.9560404 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 1.3144860 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 1.3491831 0.4239162 0.4239162 #>         [,239]    [,240]    [,241]    [,242]    [,243]    [,244]    [,245] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>         [,246]    [,247]    [,248]    [,249]    [,250]    [,251]    [,252] #> [1,] 1.0421069 0.9560404 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 1.3144860 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 1.3491831 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>         [,253]    [,254]    [,255]    [,256]    [,257]    [,258]    [,259] #> [1,] 1.0421069 1.0421069 0.9560404 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 1.3144860 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 1.3491831 0.4239162 0.4239162 0.4239162 0.4239162 #>         [,260]    [,261]    [,262]    [,263]    [,264]    [,265]    [,266] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>         [,267]    [,268]    [,269]    [,270]    [,271]    [,272]    [,273] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>         [,274]    [,275]    [,276]    [,277]    [,278]    [,279]    [,280] #> [1,] 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>         [,281]    [,282]    [,283]    [,284]    [,285]    [,286]    [,287] #> [1,] 0.9560404 0.9560404 1.0421069 1.0421069 1.0421069 1.0421069 1.0421069 #> [2,] 1.3144860 1.3144860 0.5216574 0.5216574 0.5216574 0.5216574 0.5216574 #> [3,] 1.3491831 1.3491831 0.4239162 0.4239162 0.4239162 0.4239162 0.4239162 #>  #> , , 6 #>  #>           [,1]     [,2]     [,3]     [,4]     [,5]     [,6]      [,7]      [,8] #> [1,] 0.9761803 1.023265 1.023265 1.023265 1.023265 1.023265 0.9761803 0.9761803 #> [2,] 0.3186336 1.377851 1.377851 1.377851 1.377851 1.377851 0.3186336 0.3186336 #> [3,] 0.4917725 1.325956 1.325956 1.325956 1.325956 1.325956 0.4917725 0.4917725 #>           [,9]     [,10]     [,11]     [,12]     [,13]     [,14]     [,15] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>          [,16]     [,17]     [,18]     [,19]     [,20]     [,21]     [,22] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>          [,23]     [,24]     [,25]     [,26]     [,27]     [,28]     [,29] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>          [,30]     [,31]     [,32]     [,33]     [,34]     [,35]     [,36] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>          [,37]     [,38]     [,39]     [,40]     [,41]     [,42]     [,43] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>          [,44]     [,45]     [,46]    [,47]     [,48]     [,49]     [,50] #> [1,] 0.9761803 0.9761803 0.9761803 1.023265 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 1.377851 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 1.325956 0.4917725 0.4917725 0.4917725 #>          [,51]     [,52]     [,53]     [,54]     [,55]     [,56]     [,57] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>          [,58]     [,59]     [,60]     [,61]    [,62]     [,63]     [,64] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 1.023265 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 1.377851 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 1.325956 0.4917725 0.4917725 #>          [,65]     [,66]     [,67]     [,68]     [,69]     [,70]     [,71] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>          [,72]     [,73]     [,74]     [,75]     [,76]     [,77]     [,78] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>          [,79]     [,80]     [,81]     [,82]     [,83]     [,84]     [,85] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>          [,86]     [,87]     [,88]     [,89]     [,90]     [,91]     [,92] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>          [,93]     [,94]     [,95]     [,96]     [,97]     [,98]     [,99] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,100]    [,101]    [,102]    [,103]    [,104]    [,105]    [,106] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,107]    [,108]    [,109]    [,110]    [,111]    [,112]    [,113] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,114]    [,115]    [,116]    [,117]    [,118]    [,119]    [,120] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,121]    [,122]    [,123]    [,124]    [,125]    [,126]    [,127] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,128]    [,129]    [,130]    [,131]    [,132]    [,133]    [,134] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,135]    [,136]    [,137]    [,138]    [,139]    [,140]    [,141] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,142]    [,143]    [,144]    [,145]    [,146]    [,147]    [,148] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,149]    [,150]    [,151]    [,152]    [,153]    [,154]    [,155] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,156]    [,157]    [,158]    [,159]    [,160]    [,161]    [,162] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,163]    [,164]    [,165]    [,166]    [,167]    [,168]    [,169] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,170]    [,171]    [,172]    [,173]    [,174]   [,175]    [,176] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 1.023265 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 1.377851 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 1.325956 0.4917725 #>         [,177]    [,178]    [,179]    [,180]    [,181]    [,182]    [,183] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,184]    [,185]    [,186]    [,187]    [,188]    [,189]    [,190] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,191]    [,192]    [,193]    [,194]    [,195]    [,196]    [,197] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,198]    [,199]    [,200]   [,201]    [,202]    [,203]    [,204] #> [1,] 0.9761803 0.9761803 0.9761803 1.023265 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 1.377851 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 1.325956 0.4917725 0.4917725 0.4917725 #>         [,205]    [,206]    [,207]    [,208]    [,209]    [,210]    [,211] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,212]    [,213]    [,214]    [,215]    [,216]    [,217]    [,218] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,219]    [,220]    [,221]    [,222]    [,223]    [,224]    [,225] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,226]    [,227]    [,228]    [,229]    [,230]   [,231]    [,232] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 1.023265 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 1.377851 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 1.325956 0.4917725 #>         [,233]    [,234]    [,235]    [,236]    [,237]    [,238]    [,239] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,240]    [,241]    [,242]    [,243]    [,244]    [,245]    [,246] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,247]    [,248]    [,249]    [,250]    [,251]    [,252]    [,253] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,254]    [,255]    [,256]    [,257]    [,258]    [,259]    [,260] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,261]    [,262]    [,263]    [,264]    [,265]    [,266]    [,267] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,268]    [,269]    [,270]    [,271]    [,272]    [,273]    [,274] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>         [,275]    [,276]    [,277]    [,278]    [,279]    [,280]   [,281] #> [1,] 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 1.023265 #> [2,] 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 1.377851 #> [3,] 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 1.325956 #>        [,282]    [,283]    [,284]    [,285]    [,286]    [,287] #> [1,] 1.023265 0.9761803 0.9761803 0.9761803 0.9761803 0.9761803 #> [2,] 1.377851 0.3186336 0.3186336 0.3186336 0.3186336 0.3186336 #> [3,] 1.325956 0.4917725 0.4917725 0.4917725 0.4917725 0.4917725 #>  #> , , 7 #>  #>           [,1]     [,2]      [,3]     [,4]     [,5]     [,6]      [,7] #> [1,] 0.9197107 1.074305 0.9197107 1.074305 1.074305 1.074305 0.9197107 #> [2,] 0.3557276 1.368743 0.3557276 1.368743 1.368743 1.368743 0.3557276 #> [3,] 0.2825740 1.385695 0.2825740 1.385695 1.385695 1.385695 0.2825740 #>           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>          [,15]     [,16]     [,17]     [,18]     [,19]     [,20]     [,21] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>          [,22]     [,23]     [,24]     [,25]     [,26]     [,27]     [,28] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>          [,29]     [,30]     [,31]     [,32]     [,33]     [,34]     [,35] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>          [,36]     [,37]     [,38]     [,39]    [,40]     [,41]     [,42] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 1.074305 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 1.368743 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 1.385695 0.2825740 0.2825740 #>          [,43]     [,44]     [,45]     [,46]     [,47]     [,48]     [,49] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>          [,50]     [,51]     [,52]     [,53]     [,54]     [,55]     [,56] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>          [,57]     [,58]     [,59]     [,60]     [,61]    [,62]     [,63] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 1.074305 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 1.368743 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 1.385695 0.2825740 #>          [,64]     [,65]     [,66]     [,67]    [,68]     [,69]     [,70] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 1.074305 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 1.368743 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 1.385695 0.2825740 0.2825740 #>          [,71]     [,72]     [,73]     [,74]     [,75]     [,76]     [,77] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>          [,78]     [,79]     [,80]     [,81]     [,82]     [,83]     [,84] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>          [,85]     [,86]     [,87]     [,88]     [,89]     [,90]     [,91] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>          [,92]     [,93]     [,94]     [,95]     [,96]     [,97]     [,98] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>          [,99]    [,100]    [,101]    [,102]    [,103]    [,104]    [,105] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,106]    [,107]    [,108]    [,109]    [,110]    [,111]    [,112] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,113]    [,114]    [,115]    [,116]    [,117]    [,118]    [,119] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,120]    [,121]    [,122]    [,123]    [,124]    [,125]    [,126] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,127]    [,128]    [,129]    [,130]    [,131]    [,132]    [,133] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,134]    [,135]    [,136]    [,137]    [,138]    [,139]    [,140] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,141]    [,142]    [,143]    [,144]    [,145]    [,146]    [,147] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,148]    [,149]    [,150]    [,151]    [,152]    [,153]    [,154] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,155]    [,156]    [,157]    [,158]    [,159]    [,160]    [,161] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,162]    [,163]    [,164]    [,165]    [,166]    [,167]    [,168] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,169]    [,170]    [,171]    [,172]    [,173]    [,174]    [,175] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,176]    [,177]    [,178]    [,179]    [,180]    [,181]    [,182] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,183]    [,184]    [,185]    [,186]    [,187]    [,188]    [,189] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,190]    [,191]    [,192]    [,193]    [,194]    [,195]    [,196] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,197]    [,198]    [,199]   [,200]    [,201]    [,202]    [,203] #> [1,] 0.9197107 0.9197107 0.9197107 1.074305 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 1.368743 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 1.385695 0.2825740 0.2825740 0.2825740 #>         [,204]    [,205]   [,206]    [,207]    [,208]    [,209]    [,210] #> [1,] 0.9197107 0.9197107 1.074305 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 1.368743 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 1.385695 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,211]    [,212]    [,213]    [,214]    [,215]    [,216]    [,217] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,218]    [,219]    [,220]    [,221]    [,222]    [,223]    [,224] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,225]    [,226]    [,227]    [,228]    [,229]    [,230]    [,231] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,232]    [,233]    [,234]   [,235]   [,236]    [,237]    [,238] #> [1,] 0.9197107 0.9197107 0.9197107 1.074305 1.074305 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 1.368743 1.368743 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 1.385695 1.385695 0.2825740 0.2825740 #>         [,239]    [,240]    [,241]    [,242]    [,243]    [,244]    [,245] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,246]    [,247]    [,248]    [,249]    [,250]    [,251]   [,252] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 1.074305 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 1.368743 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 1.385695 #>         [,253]    [,254]    [,255]    [,256]    [,257]    [,258]    [,259] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,260]    [,261]    [,262]    [,263]    [,264]    [,265]    [,266] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,267]    [,268]    [,269]    [,270]    [,271]    [,272]    [,273] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>         [,274]    [,275]    [,276]    [,277]    [,278]    [,279]    [,280] #> [1,] 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>        [,281]   [,282]    [,283]    [,284]    [,285]    [,286]    [,287] #> [1,] 1.074305 1.074305 0.9197107 0.9197107 0.9197107 0.9197107 0.9197107 #> [2,] 1.368743 1.368743 0.3557276 0.3557276 0.3557276 0.3557276 0.3557276 #> [3,] 1.385695 1.385695 0.2825740 0.2825740 0.2825740 0.2825740 0.2825740 #>  #> , , 8 #>  #>           [,1]     [,2]      [,3]     [,4]     [,5]     [,6]      [,7] #> [1,] 0.9111863 1.081545 0.9111863 1.081545 1.081545 1.081545 0.9111863 #> [2,] 0.4295900 1.347387 0.4295900 1.347387 1.347387 1.347387 0.4295900 #> [3,] 0.2898292 1.384196 0.2898292 1.384196 1.384196 1.384196 0.2898292 #>           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>          [,15]     [,16]     [,17]     [,18]     [,19]     [,20]     [,21] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>          [,22]     [,23]     [,24]     [,25]     [,26]     [,27]     [,28] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>          [,29]     [,30]     [,31]     [,32]     [,33]     [,34]     [,35] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,36]     [,37]     [,38]     [,39]     [,40]     [,41]     [,42] #> [1,] 1.081545 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 1.347387 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 1.384196 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>          [,43]     [,44]     [,45]     [,46]     [,47]     [,48]     [,49] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>          [,50]     [,51]     [,52]     [,53]     [,54]     [,55]     [,56] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>          [,57]     [,58]     [,59]     [,60]     [,61]     [,62]     [,63] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>          [,64]     [,65]     [,66]     [,67]     [,68]     [,69]     [,70] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>          [,71]     [,72]     [,73]     [,74]     [,75]     [,76]     [,77] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>          [,78]     [,79]     [,80]     [,81]    [,82]     [,83]     [,84] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 1.081545 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 1.347387 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 1.384196 0.2898292 0.2898292 #>          [,85]     [,86]     [,87]     [,88]     [,89]     [,90]     [,91] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>          [,92]     [,93]     [,94]     [,95]     [,96]     [,97]     [,98] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>          [,99]    [,100]   [,101]    [,102]    [,103]    [,104]    [,105] #> [1,] 0.9111863 0.9111863 1.081545 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 1.347387 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 1.384196 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,106]    [,107]    [,108]    [,109]    [,110]    [,111]    [,112] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,113]    [,114]    [,115]    [,116]    [,117]    [,118]    [,119] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,120]   [,121]    [,122]    [,123]    [,124]    [,125]    [,126] #> [1,] 0.9111863 1.081545 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 1.347387 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 1.384196 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,127]    [,128]    [,129]    [,130]    [,131]    [,132]    [,133] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,134]    [,135]    [,136]    [,137]    [,138]    [,139]    [,140] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,141]    [,142]    [,143]    [,144]    [,145]    [,146]    [,147] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,148]    [,149]    [,150]    [,151]    [,152]    [,153]    [,154] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,155]    [,156]    [,157]    [,158]    [,159]    [,160]    [,161] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,162]    [,163]    [,164]    [,165]    [,166]    [,167]    [,168] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,169]    [,170]    [,171]    [,172]    [,173]    [,174]    [,175] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,176]    [,177]    [,178]    [,179]    [,180]    [,181]    [,182] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,183]    [,184]    [,185]    [,186]    [,187]    [,188]    [,189] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,190]    [,191]    [,192]    [,193]    [,194]    [,195]    [,196] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,197]    [,198]    [,199]    [,200]    [,201]    [,202]    [,203] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,204]    [,205]    [,206]    [,207]   [,208]    [,209]    [,210] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 1.081545 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 1.347387 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 1.384196 0.2898292 0.2898292 #>         [,211]    [,212]    [,213]    [,214]    [,215]    [,216]    [,217] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,218]    [,219]    [,220]    [,221]    [,222]    [,223]    [,224] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,225]    [,226]    [,227]    [,228]    [,229]    [,230]    [,231] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,232]    [,233]    [,234]    [,235]    [,236]    [,237]   [,238] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 1.081545 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 1.347387 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 1.384196 #>         [,239]    [,240]    [,241]    [,242]    [,243]    [,244]    [,245] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,246]    [,247]    [,248]    [,249]    [,250]    [,251]    [,252] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,253]    [,254]    [,255]    [,256]    [,257]    [,258]    [,259] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,260]    [,261]    [,262]    [,263]    [,264]    [,265]    [,266] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,267]    [,268]    [,269]    [,270]    [,271]    [,272]    [,273] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>         [,274]    [,275]    [,276]    [,277]    [,278]    [,279]    [,280] #> [1,] 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>        [,281]   [,282]    [,283]    [,284]    [,285]    [,286]    [,287] #> [1,] 1.081545 1.081545 0.9111863 0.9111863 0.9111863 0.9111863 0.9111863 #> [2,] 1.347387 1.347387 0.4295900 0.4295900 0.4295900 0.4295900 0.4295900 #> [3,] 1.384196 1.384196 0.2898292 0.2898292 0.2898292 0.2898292 0.2898292 #>  #> , , 9 #>  #>           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #> [1,] 1.0515200 0.9456774 1.0515200 0.9456774 0.9456774 0.9456774 1.0515200 #> [2,] 0.3850696 1.3607797 0.3850696 1.3607797 1.3607797 1.3607797 0.3850696 #> [3,] 0.3132540 1.3790837 0.3132540 1.3790837 1.3790837 1.3790837 0.3132540 #>           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>          [,15]     [,16]     [,17]     [,18]     [,19]     [,20]     [,21] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>          [,22]     [,23]     [,24]     [,25]     [,26]     [,27]     [,28] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>          [,29]     [,30]     [,31]     [,32]     [,33]     [,34]     [,35] #> [1,] 1.0515200 1.0515200 1.0515200 0.9456774 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 1.3607797 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 1.3790837 0.3132540 0.3132540 0.3132540 #>          [,36]     [,37]     [,38]     [,39]     [,40]     [,41]     [,42] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 0.9456774 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 1.3607797 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 1.3790837 0.3132540 0.3132540 #>          [,43]     [,44]     [,45]     [,46]     [,47]     [,48]     [,49] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>          [,50]     [,51]     [,52]     [,53]     [,54]     [,55]     [,56] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>          [,57]     [,58]     [,59]     [,60]     [,61]     [,62]     [,63] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>          [,64]     [,65]     [,66]     [,67]     [,68]     [,69]     [,70] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>          [,71]     [,72]     [,73]     [,74]     [,75]     [,76]     [,77] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>          [,78]     [,79]     [,80]     [,81]     [,82]     [,83]     [,84] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>          [,85]     [,86]     [,87]     [,88]     [,89]     [,90]     [,91] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 0.9456774 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 1.3607797 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 1.3790837 0.3132540 #>          [,92]     [,93]     [,94]     [,95]     [,96]     [,97]     [,98] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>          [,99]    [,100]    [,101]    [,102]    [,103]    [,104]    [,105] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,106]    [,107]    [,108]    [,109]    [,110]    [,111]    [,112] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,113]    [,114]    [,115]    [,116]    [,117]    [,118]    [,119] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,120]    [,121]    [,122]    [,123]    [,124]    [,125]    [,126] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,127]    [,128]    [,129]    [,130]    [,131]    [,132]    [,133] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,134]    [,135]    [,136]    [,137]    [,138]    [,139]    [,140] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,141]    [,142]    [,143]    [,144]    [,145]    [,146]    [,147] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,148]    [,149]    [,150]    [,151]    [,152]    [,153]    [,154] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,155]    [,156]    [,157]    [,158]    [,159]    [,160]    [,161] #> [1,] 0.9456774 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 1.3607797 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 1.3790837 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,162]    [,163]    [,164]    [,165]    [,166]    [,167]    [,168] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,169]    [,170]    [,171]    [,172]    [,173]    [,174]    [,175] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,176]    [,177]    [,178]    [,179]    [,180]    [,181]    [,182] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,183]    [,184]    [,185]    [,186]    [,187]    [,188]    [,189] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,190]    [,191]    [,192]    [,193]    [,194]    [,195]    [,196] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,197]    [,198]    [,199]    [,200]    [,201]    [,202]    [,203] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,204]    [,205]    [,206]    [,207]    [,208]    [,209]    [,210] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 0.9456774 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 1.3607797 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 1.3790837 0.3132540 0.3132540 #>         [,211]    [,212]    [,213]    [,214]    [,215]    [,216]    [,217] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,218]    [,219]    [,220]    [,221]    [,222]    [,223]    [,224] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,225]    [,226]    [,227]    [,228]    [,229]    [,230]    [,231] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,232]    [,233]    [,234]    [,235]    [,236]    [,237]    [,238] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 0.9456774 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 1.3607797 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 1.3790837 0.3132540 0.3132540 #>         [,239]    [,240]    [,241]    [,242]    [,243]    [,244]    [,245] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,246]    [,247]    [,248]    [,249]    [,250]    [,251]    [,252] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,253]    [,254]    [,255]    [,256]    [,257]    [,258]    [,259] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,260]    [,261]    [,262]    [,263]    [,264]    [,265]    [,266] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,267]    [,268]    [,269]    [,270]    [,271]    [,272]    [,273] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,274]    [,275]    [,276]    [,277]    [,278]    [,279]    [,280] #> [1,] 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>         [,281]    [,282]    [,283]    [,284]    [,285]    [,286]    [,287] #> [1,] 0.9456774 0.9456774 1.0515200 1.0515200 1.0515200 1.0515200 1.0515200 #> [2,] 1.3607797 1.3607797 0.3850696 0.3850696 0.3850696 0.3850696 0.3850696 #> [3,] 1.3790837 1.3790837 0.3132540 0.3132540 0.3132540 0.3132540 0.3132540 #>  #> , , 10 #>  #>           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #> [1,] 1.1638446 0.8034088 1.1638446 0.8034088 0.8034088 0.8034088 1.1638446 #> [2,] 0.3595672 1.3677395 0.3595672 1.3677395 1.3677395 1.3677395 0.3595672 #> [3,] 0.2269224 1.3958890 0.2269224 1.3958890 1.3958890 1.3958890 0.2269224 #>           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>          [,15]     [,16]     [,17]     [,18]     [,19]     [,20]     [,21] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>          [,22]     [,23]     [,24]     [,25]     [,26]     [,27]     [,28] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>          [,29]     [,30]     [,31]     [,32]     [,33]     [,34]     [,35] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>          [,36]     [,37]     [,38]     [,39]     [,40]     [,41]     [,42] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 0.8034088 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 1.3677395 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 1.3958890 0.2269224 0.2269224 #>          [,43]     [,44]     [,45]     [,46]     [,47]     [,48]     [,49] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>          [,50]     [,51]     [,52]     [,53]     [,54]     [,55]     [,56] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>          [,57]     [,58]     [,59]     [,60]     [,61]     [,62]     [,63] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>          [,64]     [,65]     [,66]     [,67]     [,68]     [,69]     [,70] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>          [,71]     [,72]     [,73]     [,74]     [,75]     [,76]     [,77] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>          [,78]     [,79]     [,80]     [,81]     [,82]     [,83]     [,84] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>          [,85]     [,86]     [,87]     [,88]     [,89]     [,90]     [,91] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>          [,92]     [,93]     [,94]     [,95]     [,96]     [,97]     [,98] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>          [,99]    [,100]    [,101]    [,102]    [,103]    [,104]    [,105] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,106]    [,107]    [,108]    [,109]    [,110]    [,111]    [,112] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,113]    [,114]    [,115]    [,116]    [,117]    [,118]    [,119] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,120]    [,121]    [,122]    [,123]    [,124]    [,125]    [,126] #> [1,] 1.1638446 0.8034088 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 1.3677395 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 1.3958890 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,127]    [,128]    [,129]    [,130]    [,131]    [,132]    [,133] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,134]    [,135]    [,136]    [,137]    [,138]    [,139]    [,140] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,141]    [,142]    [,143]    [,144]    [,145]    [,146]    [,147] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,148]    [,149]    [,150]    [,151]    [,152]    [,153]    [,154] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,155]    [,156]    [,157]    [,158]    [,159]    [,160]    [,161] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,162]    [,163]    [,164]    [,165]    [,166]    [,167]    [,168] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,169]    [,170]    [,171]    [,172]    [,173]    [,174]    [,175] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,176]    [,177]    [,178]    [,179]    [,180]    [,181]    [,182] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,183]    [,184]    [,185]    [,186]    [,187]    [,188]    [,189] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,190]    [,191]    [,192]    [,193]    [,194]    [,195]    [,196] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,197]    [,198]    [,199]    [,200]    [,201]    [,202]    [,203] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,204]    [,205]    [,206]    [,207]    [,208]    [,209]    [,210] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,211]    [,212]    [,213]    [,214]    [,215]    [,216]    [,217] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,218]    [,219]    [,220]    [,221]    [,222]    [,223]    [,224] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,225]    [,226]    [,227]    [,228]    [,229]    [,230]    [,231] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,232]    [,233]    [,234]    [,235]    [,236]    [,237]    [,238] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 0.8034088 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 1.3677395 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 1.3958890 0.2269224 0.2269224 #>         [,239]    [,240]    [,241]    [,242]    [,243]    [,244]    [,245] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,246]    [,247]    [,248]    [,249]    [,250]    [,251]    [,252] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,253]    [,254]    [,255]    [,256]    [,257]    [,258]    [,259] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,260]    [,261]    [,262]    [,263]    [,264]    [,265]    [,266] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,267]    [,268]    [,269]    [,270]    [,271]    [,272]    [,273] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,274]    [,275]    [,276]    [,277]    [,278]    [,279]    [,280] #> [1,] 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>         [,281]    [,282]    [,283]    [,284]    [,285]    [,286]    [,287] #> [1,] 0.8034088 0.8034088 1.1638446 1.1638446 1.1638446 1.1638446 1.1638446 #> [2,] 1.3677395 1.3677395 0.3595672 0.3595672 0.3595672 0.3595672 0.3595672 #> [3,] 1.3958890 1.3958890 0.2269224 0.2269224 0.2269224 0.2269224 0.2269224 #>  #>    ## ------------------------------------------------ ## Method `specify_posterior_bsvar_mix$get_last_draw` ## ------------------------------------------------  data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_mix$new(us_fiscal_lsuw, p = 4, M = 2) #> The identification is set to the default option of lower-triangular structural matrix.  # run the burn-in set.seed(123) burn_in        = estimate(specification, 10, thin = 2) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 2nd draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 10, thin = 2) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 2nd draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|   ## ------------------------------------------------ ## Method `specify_posterior_bsvar_mix$is_normalised` ## ------------------------------------------------  # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_mix$new(us_fiscal_lsuw, p = 4, M = 2) #> The identification is set to the default option of lower-triangular structural matrix.  # estimate the model set.seed(123) posterior      = estimate(specification, 10, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # check normalisation status beforehand posterior$is_normalised() #> [1] TRUE  # normalise the posterior BB            = posterior$last_draw$starting_values$B      # get the last draw of B B_hat         = diag((-1) * sign(diag(BB))) %*% BB         # set negative diagonal elements normalise_posterior(posterior, B_hat)                      # draws in posterior are normalised  # check normalisation status afterwards posterior$is_normalised() #> [1] TRUE   ## ------------------------------------------------ ## Method `specify_posterior_bsvar_mix$set_normalised` ## ------------------------------------------------  # This is an internal function that is run while executing normalise_posterior() # Observe its working by analysing the workflow:  # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_mix$new(us_fiscal_lsuw, p = 4, M = 2) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # estimate the model posterior      = estimate(specification, 10, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # check normalisation status beforehand posterior$is_normalised() #> [1] TRUE  # normalise the posterior BB            = posterior$last_draw$starting_values$B      # get the last draw of B B_hat         = diag(sign(diag(BB))) %*% BB                # set positive diagonal elements normalise_posterior(posterior, B_hat)                      # draws in posterior are normalised  # check normalisation status afterwards posterior$is_normalised() #> [1] TRUE"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"class PosteriorBSVARMSH contains posterior output specification including  last MCMC draw bsvar model Markov Switching Heteroskedasticity.  Note due thinning MCMC output starting value element last_draw might equal last draw provided element posterior.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"last_draw object class BSVARMSH last draw current MCMC run starting value passed continuation MCMC estimation using estimate(). posterior list containing Bayesian estimation output.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"specify_posterior_bsvar_msh$new() specify_posterior_bsvar_msh$get_posterior() specify_posterior_bsvar_msh$get_last_draw() specify_posterior_bsvar_msh$is_normalised() specify_posterior_bsvar_msh$set_normalised() specify_posterior_bsvar_msh$clone()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"Create new posterior output PosteriorBSVARMSH.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"","code":"specify_posterior_bsvar_msh$new(specification_bsvar, posterior_bsvar)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"specification_bsvar object class BSVARMSH last draw current MCMC run starting value. posterior_bsvar list containing Bayesian estimation output.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"posterior output PosteriorBSVARMSH.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"method-get-posterior-","dir":"Reference","previous_headings":"","what":"Method get_posterior()","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"Returns list containing Bayesian estimation output.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"","code":"specify_posterior_bsvar_msh$get_posterior()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"","code":"data(us_fiscal_lsuw) specification  = specify_bsvar_msh$new(us_fiscal_lsuw, M = 2) set.seed(123) estimate       = estimate(specification, 10, thin = 1) estimate$get_posterior()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"method-get-last-draw-","dir":"Reference","previous_headings":"","what":"Method get_last_draw()","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"Returns object class BSVARMSH last draw current MCMC run starting value passed continuation MCMC estimation using estimate().","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"","code":"specify_posterior_bsvar_msh$get_last_draw()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"","code":"data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_msh$new(us_fiscal_lsuw, p = 4, M = 2)  # run the burn-in set.seed(123) burn_in        = estimate(specification, 10, thin = 2)  # estimate the model posterior      = estimate(burn_in, 10, thin = 2)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"method-is-normalised-","dir":"Reference","previous_headings":"","what":"Method is_normalised()","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"Returns TRUE posterior normalised using normalise_posterior() FALSE otherwise.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"","code":"specify_posterior_bsvar_msh$is_normalised()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"","code":"# upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_msh$new(us_fiscal_lsuw, p = 4, M = 2)  # estimate the model set.seed(123) posterior      = estimate(specification, 10, thin = 1)  # check normalisation status beforehand posterior$is_normalised()  # normalise the posterior BB            = posterior$last_draw$starting_values$B      # get the last draw of B B_hat         = diag((-1) * sign(diag(BB))) %*% BB         # set negative diagonal elements normalise_posterior(posterior, B_hat)                      # draws in posterior are normalised  # check normalisation status afterwards posterior$is_normalised()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"method-set-normalised-","dir":"Reference","previous_headings":"","what":"Method set_normalised()","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"Sets private indicator normalised TRUE.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"","code":"specify_posterior_bsvar_msh$set_normalised(value)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"value (optional) logical value passed indicator normalised.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"","code":"# This is an internal function that is run while executing normalise_posterior() # Observe its working by analysing the workflow:  # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_msh$new(us_fiscal_lsuw, p = 4, M = 2) set.seed(123)  # estimate the model posterior      = estimate(specification, 10, thin = 1)  # check normalisation status beforehand posterior$is_normalised()  # normalise the posterior BB            = posterior$last_draw$starting_values$B      # get the last draw of B B_hat         = diag(sign(diag(BB))) %*% BB                # set positive diagonal elements normalise_posterior(posterior, B_hat)                      # draws in posterior are normalised  # check normalisation status afterwards posterior$is_normalised()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"objects class cloneable method.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"","code":"specify_posterior_bsvar_msh$clone(deep = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"deep Whether make deep clone.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_msh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVARMSH — specify_posterior_bsvar_msh","text":"","code":"# This is a function that is used within estimate() data(us_fiscal_lsuw) specification  = specify_bsvar_msh$new(us_fiscal_lsuw, p = 4, M = 2) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123) estimate       = estimate(specification, 10, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| class(estimate) #> [1] \"PosteriorBSVARMSH\" \"R6\"                  ## ------------------------------------------------ ## Method `specify_posterior_bsvar_msh$get_posterior` ## ------------------------------------------------  data(us_fiscal_lsuw) specification  = specify_bsvar_msh$new(us_fiscal_lsuw, M = 2) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123) estimate       = estimate(specification, 10, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| estimate$get_posterior() #> $B #> , , 1 #>  #>             [,1]      [,2]     [,3] #> [1,]   0.1870108 0.0000000  0.00000 #> [2,]  -5.5611626 5.6226452  0.00000 #> [3,] -11.8301777 0.9137795 22.79658 #>  #> , , 2 #>  #>             [,1]      [,2]     [,3] #> [1,]   0.1860389  0.000000  0.00000 #> [2,] -18.8837847 19.108347  0.00000 #> [3,]  -8.8916609 -3.779883 26.34842 #>  #> , , 3 #>  #>             [,1]      [,2]     [,3] #> [1,]   0.1793859  0.000000  0.00000 #> [2,] -21.3993334 21.654222  0.00000 #> [3,]  -8.1501628 -9.062918 35.73396 #>  #> , , 4 #>  #>             [,1]      [,2]     [,3] #> [1,]   0.1875891  0.000000  0.00000 #> [2,] -19.8886662 20.127296  0.00000 #> [3,] -10.3009394 -5.667708 33.20414 #>  #> , , 5 #>  #>             [,1]      [,2]     [,3] #> [1,]   0.1770999  0.000000  0.00000 #> [2,] -19.4123218 19.659904  0.00000 #> [3,]  -5.1267922 -4.369058 19.71114 #>  #> , , 6 #>  #>             [,1]      [,2]     [,3] #> [1,]   0.2033931  0.000000  0.00000 #> [2,] -16.2953995 16.496270  0.00000 #> [3,]  -8.2805605 -7.844452 33.48454 #>  #> , , 7 #>  #>             [,1]      [,2]     [,3] #> [1,]   0.1837111  0.000000  0.00000 #> [2,] -17.5151503 17.734051  0.00000 #> [3,]  -5.4215441 -6.359693 24.45742 #>  #> , , 8 #>  #>             [,1]      [,2]     [,3] #> [1,]   0.1566844  0.000000  0.00000 #> [2,] -12.4389782 12.590442  0.00000 #> [3,]  -7.3318895 -5.378167 26.40612 #>  #> , , 9 #>  #>             [,1]      [,2]     [,3] #> [1,]   0.1850112  0.000000  0.00000 #> [2,] -12.0353065 12.176582  0.00000 #> [3,]  -5.7036959 -4.819994 21.84828 #>  #> , , 10 #>  #>             [,1]      [,2]     [,3] #> [1,]   0.1906341  0.000000  0.00000 #> [2,] -13.7505055 13.912736  0.00000 #> [3,]  -6.6369985 -4.815935 23.78087 #>  #>  #> $A #> , , 1 #>  #>             [,1]       [,2]       [,3]       [,4] #> [1,]  0.93738970 -0.1566517 -0.4575410 -0.3588462 #> [2,] -0.12803139  0.9295674 -0.3792855  0.4256886 #> [3,]  0.01677082 -0.0878782  0.7235682 -0.2966988 #>  #> , , 2 #>  #>             [,1]        [,2]       [,3]       [,4] #> [1,]  0.75540579 -0.07981309 -0.2663024 0.15804585 #> [2,]  0.04624155  0.89898272 -0.5473067 0.47834154 #> [3,] -0.08339996 -0.05722740  0.8514763 0.04474213 #>  #> , , 3 #>  #>             [,1]        [,2]       [,3]       [,4] #> [1,]  0.86968764 -0.15888377 -0.3443853 -0.1496328 #> [2,]  0.02070931  0.84548319 -0.4906767  0.1338192 #> [3,] -0.03984130 -0.04991271  0.8082900  0.2005064 #>  #> , , 4 #>  #>              [,1]        [,2]       [,3]        [,4] #> [1,]  0.872713468 -0.17494123 -0.3300749 -0.17130065 #> [2,]  0.007940192  0.83331178 -0.4698864  0.04962525 #> [3,] -0.015027560 -0.09682197  0.7932587 -0.15231187 #>  #> , , 5 #>  #>             [,1]        [,2]       [,3]       [,4] #> [1,]  0.85615000 -0.25165394 -0.2933350 -0.8160260 #> [2,] -0.06410572  0.78420756 -0.3735709 -0.3846794 #> [3,] -0.02891951 -0.09913877  0.8177154 -0.1170611 #>  #> , , 6 #>  #>             [,1]        [,2]       [,3]       [,4] #> [1,]  0.85030412 -0.23324832 -0.2830620 -0.6056283 #> [2,] -0.06493516  0.80608216 -0.3702397 -0.1451101 #> [3,] -0.04809171 -0.08857792  0.8329028 -0.0757091 #>  #> , , 7 #>  #>             [,1]        [,2]       [,3]        [,4] #> [1,]  0.85929452 -0.18591497 -0.3038904 -0.20460168 #> [2,] -0.03696821  0.82553444 -0.4086962  0.01979699 #> [3,] -0.01592898 -0.07180108  0.8020513  0.16232347 #>  #> , , 8 #>  #>             [,1]        [,2]       [,3]        [,4] #> [1,]  0.82361390 -0.18299170 -0.2669694 -0.22995054 #> [2,] -0.09676909  0.80712134 -0.3473001 -0.26042340 #> [3,] -0.04984992 -0.07016342  0.8277144  0.05420559 #>  #> , , 9 #>  #>             [,1]        [,2]       [,3]       [,4] #> [1,]  0.86504557 -0.18531640 -0.3103764 -0.1955500 #> [2,] -0.04917831  0.84740152 -0.4015016  0.1806641 #> [3,] -0.07257712 -0.08872667  0.8572161 -0.1183475 #>  #> , , 10 #>  #>             [,1]        [,2]       [,3]        [,4] #> [1,]  0.87132207 -0.18644974 -0.3155249 -0.18327905 #> [2,] -0.11392357  0.82065633 -0.3301170 -0.15217923 #> [3,] -0.04491871 -0.07686571  0.8278634  0.03638142 #>  #>  #> $sigma2 #> , , 1 #>  #>           [,1]     [,2] #> [1,] 0.9925498 1.007450 #> [2,] 0.9666931 1.033307 #> [3,] 0.9589559 1.041044 #>  #> , , 2 #>  #>           [,1]     [,2] #> [1,] 0.8189735 1.181027 #> [2,] 0.8534499 1.146550 #> [3,] 0.7777778 1.222222 #>  #> , , 3 #>  #>           [,1]     [,2] #> [1,] 0.9876258 1.012374 #> [2,] 0.5955665 1.404434 #> [3,] 0.6172704 1.382730 #>  #> , , 4 #>  #>           [,1]     [,2] #> [1,] 0.8461373 1.153863 #> [2,] 0.3460343 1.653966 #> [3,] 0.3394454 1.660555 #>  #> , , 5 #>  #>           [,1]     [,2] #> [1,] 1.0087270 0.991273 #> [2,] 0.2779673 1.722033 #> [3,] 0.2931984 1.706802 #>  #> , , 6 #>  #>           [,1]      [,2] #> [1,] 1.0572758 0.9427242 #> [2,] 0.2674844 1.7325156 #> [3,] 0.1619874 1.8380126 #>  #> , , 7 #>  #>           [,1]     [,2] #> [1,] 0.6819375 1.318063 #> [2,] 0.1296849 1.870315 #> [3,] 0.2096300 1.790370 #>  #> , , 8 #>  #>           [,1]     [,2] #> [1,] 0.8360601 1.163940 #> [2,] 0.1463368 1.853663 #> [3,] 0.1284147 1.871585 #>  #> , , 9 #>  #>            [,1]      [,2] #> [1,] 1.09170072 0.9082993 #> [2,] 0.19770317 1.8022968 #> [3,] 0.09207796 1.9079220 #>  #> , , 10 #>  #>            [,1]     [,2] #> [1,] 0.82804320 1.171957 #> [2,] 0.09184596 1.908154 #> [3,] 0.14281103 1.857189 #>  #>  #> $PR_TR #> , , 1 #>  #>           [,1]      [,2] #> [1,] 0.4830742 0.5169258 #> [2,] 0.5468338 0.4531662 #>  #> , , 2 #>  #>           [,1]      [,2] #> [1,] 0.4804591 0.5195409 #> [2,] 0.5665427 0.4334573 #>  #> , , 3 #>  #>           [,1]      [,2] #> [1,] 0.6447020 0.3552980 #> [2,] 0.5895523 0.4104477 #>  #> , , 4 #>  #>           [,1]      [,2] #> [1,] 0.7114371 0.2885629 #> [2,] 0.8149795 0.1850205 #>  #> , , 5 #>  #>           [,1]      [,2] #> [1,] 0.8234531 0.1765469 #> [2,] 0.6570864 0.3429136 #>  #> , , 6 #>  #>           [,1]       [,2] #> [1,] 0.9293899 0.07061005 #> [2,] 0.5881249 0.41187515 #>  #> , , 7 #>  #>           [,1]       [,2] #> [1,] 0.9563819 0.04361814 #> [2,] 0.5717927 0.42820728 #>  #> , , 8 #>  #>           [,1]       [,2] #> [1,] 0.9605659 0.03943414 #> [2,] 0.4103269 0.58967307 #>  #> , , 9 #>  #>           [,1]       [,2] #> [1,] 0.9662592 0.03374084 #> [2,] 0.4653199 0.53468011 #>  #> , , 10 #>  #>           [,1]      [,2] #> [1,] 0.9746398 0.0253602 #> [2,] 0.6009026 0.3990974 #>  #>  #> $pi_0 #>            [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #> [1,] 0.07890092 0.7531832 0.8894908 0.7944588 0.4935457 0.8317265 0.2757306 #> [2,] 0.92109908 0.2468168 0.1105092 0.2055412 0.5064543 0.1682735 0.7242694 #>           [,8]        [,9]     [,10] #> [1,] 0.3440969 0.005078914 0.7100574 #> [2,] 0.6559031 0.994921086 0.2899426 #>  #> $xi #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    1    0    0    0    1    0    0    0    1     0     0     1     1     1 #> [2,]    0    1    1    1    0    1    1    1    0     1     1     0     0     0 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     0     1     0     1     1     0     0     1     0     1     1     1 #> [2,]     1     0     1     0     0     1     1     0     1     0     0     0 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     0     1     0     0     0     0     0     0     1     1     1     1 #> [2,]     1     0     1     1     1     1     1     1     0     0     0     0 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     0     0     1     1     0     0     0     0     1     1     1     0 #> [2,]     1     1     0     0     1     1     1     1     0     0     0     1 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     0     0     0     1     0     1     1     1     0     1 #> [2,]     0     0     1     1     1     0     1     0     0     0     1     0 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     1     0     1     0     1     1     0     0     1     0     1     0 #> [2,]     0     1     0     1     0     0     1     1     0     1     0     1 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     0     1     1     0     0     0     1     1     1     0     1     0 #> [2,]     1     0     0     1     1     1     0     0     0     1     0     1 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     0     0     1     0     0     1     0     1     1     0     1     0 #> [2,]     1     1     0     1     1     0     1     0     0     1     0     1 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     0      0      0      1      1      0      1      1      0      1 #> [2,]     1      1      1      0      0      1      0      0      1      0 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      1      0      1      0      0      0      1      0      0 #> [2,]      0      0      1      0      1      1      1      0      1      1 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      0      0      0      1      0      1      0      1      1      0 #> [2,]      1      1      1      0      1      0      1      0      0      1 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      1      0      1      1      1      1      1      1      1      0 #> [2,]      0      1      0      0      0      0      0      0      0      1 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      1      0      1      0      1      1      1      1      0      0 #> [2,]      0      1      0      1      0      0      0      0      1      1 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      0      1      0      1      0      0      1      0      1      1 #> [2,]      1      0      1      0      1      1      0      1      0      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      1      0      1      0      0      0      1      1      0      1 #> [2,]      0      1      0      1      1      1      0      0      1      0 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      1      0      1      0      0      1      0      1      0      0 #> [2,]      0      1      0      1      1      0      1      0      1      1 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      1      1      0      1      1      0      1      1      1      1 #> [2,]      0      0      1      0      0      1      0      0      0      0 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      0      1      0      0      0      1      1      0      1      1 #> [2,]      1      0      1      1      1      0      0      1      0      0 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      0      0      0      0      0      0      1      0      0      1 #> [2,]      1      1      1      1      1      1      0      1      1      0 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      1      1      1      1      0      1      1      1      1      1 #> [2,]      0      0      0      0      1      0      0      0      0      0 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      0      1      0      1      0      1      1      0      1 #> [2,]      0      1      0      1      0      1      0      0      1      0 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      0      0      0      1      0      1      1      1      1      1 #> [2,]      1      1      1      0      1      0      0      0      0      0 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      0      1      1      1      1      1      1      0      1      0 #> [2,]      1      0      0      0      0      0      0      1      0      1 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      0      0      0      1      0      1      1      0      0      1 #> [2,]      1      1      1      0      1      0      0      1      1      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      0      0      0      1      0      0      0      0      0      1 #> [2,]      1      1      1      0      1      1      1      1      1      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      0      0      0      0      1      1      0      1      1      1 #> [2,]      1      1      1      1      0      0      1      0      0      0 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      0      1      1      1      0      1      0      0      0 #> [2,]      1      0      0      0      1      0      1      1      1 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    0    1    0    0    0    1    0    0    1     1     0     1     0     0 #> [2,]    1    0    1    1    1    0    1    1    0     0     1     0     1     1 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     0     1     0     0     0     0     1     0     0     0     0     0 #> [2,]     1     0     1     1     1     1     0     1     1     1     1     1 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     0     1     0     0     0     0     0     1     0     1     0     0 #> [2,]     1     0     1     1     1     1     1     0     1     0     1     1 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     0     0     1     0     0     0     1     1     1     1     1     0 #> [2,]     1     1     0     1     1     1     0     0     0     0     0     1 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     0     0     1     1     0     1     1     1     0     0     0     1 #> [2,]     1     1     0     0     1     0     0     0     1     1     1     0 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     0     0     0     1     0     1     0     0     1     0     0     0 #> [2,]     1     1     1     0     1     0     1     1     0     1     1     1 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     0     0     1     0     1     0     1     1     0     1     1     1 #> [2,]     1     1     0     1     0     1     0     0     1     0     0     0 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     1     1     0     1     0     1     0     1     1     0     1     0 #> [2,]     0     0     1     0     1     0     1     0     0     1     0     1 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     1      1      0      1      0      1      0      0      1      0 #> [2,]     0      0      1      0      1      0      1      1      0      1 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      0      0      0      1      1      1      0      0      0 #> [2,]      0      1      1      1      0      0      0      1      1      1 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      1      0      0      0      0      1      1      1      1      1 #> [2,]      0      1      1      1      1      0      0      0      0      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      0      0      1      0      0      1      1      0      1      1 #> [2,]      1      1      0      1      1      0      0      1      0      0 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      0      1      0      1      0      1      0      1      1      1 #> [2,]      1      0      1      0      1      0      1      0      0      0 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      1      1      1      0      1      1      1      1      0      1 #> [2,]      0      0      0      1      0      0      0      0      1      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      0      1      1      0      0      1      0      1      1      1 #> [2,]      1      0      0      1      1      0      1      0      0      0 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      1      0      1      0      1      1      0      1      1      1 #> [2,]      0      1      0      1      0      0      1      0      0      0 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      1      0      0      1      1      1      0      1      0      0 #> [2,]      0      1      1      0      0      0      1      0      1      1 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      0      0      0      1      0      0      1      0      0      0 #> [2,]      1      1      1      0      1      1      0      1      1      1 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      1      1      1      1      0      1      1      1      0      0 #> [2,]      0      0      0      0      1      0      0      0      1      1 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      1      1      1      0      0      1      1      1      0      1 #> [2,]      0      0      0      1      1      0      0      0      1      0 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      0      1      0      0      0      1      1      1      0 #> [2,]      0      1      0      1      1      1      0      0      0      1 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      0      0      1      1      1      0      0      0      0      0 #> [2,]      1      1      0      0      0      1      1      1      1      1 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      0      1      1      1      1      0      0      1      0      1 #> [2,]      1      0      0      0      0      1      1      0      1      0 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      0      0      1      1      0      1      0      1      0      1 #> [2,]      1      1      0      0      1      0      1      0      1      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      0      1      0      1      0      1      0      0      1      1 #> [2,]      1      0      1      0      1      0      1      1      0      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      1      1      0      0      1      1      1      0      0      1 #> [2,]      0      0      1      1      0      0      0      1      1      0 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      0      0      1      1      1      1      0      1 #> [2,]      0      1      1      0      0      0      0      1      0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    1    1    1    1    0    1    1    1    0     1     1     1     1     1 #> [2,]    0    0    0    0    1    0    0    0    1     0     0     0     0     0 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     1     1     0     0     1     1     1     1     1     1     1     1 #> [2,]     0     0     1     1     0     0     0     0     0     0     0     0 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     0     0     1     1     0     0     1     1     0     1     1     0 #> [2,]     1     1     0     0     1     1     0     0     1     0     0     1 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     0     1     0     1     0     0     1     0     0     0     1 #> [2,]     0     1     0     1     0     1     1     0     1     1     1     0 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     0     1     1     0     1     1     0     1     1     0     0 #> [2,]     0     1     0     0     1     0     0     1     0     0     1     1 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     0     0     1     1     1     1     0     0     1     0     0     1 #> [2,]     1     1     0     0     0     0     1     1     0     1     1     0 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     1     1     1     1     0     0     0     1     1     0     1     1 #> [2,]     0     0     0     0     1     1     1     0     0     1     0     0 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     1     1     1     1     0     1     1     1     0     0     0     1 #> [2,]     0     0     0     0     1     0     0     0     1     1     1     0 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     1      1      0      0      0      0      0      1      1      1 #> [2,]     0      0      1      1      1      1      1      0      0      0 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      0      0      0      1      0      1      1      0      1 #> [2,]      0      1      1      1      0      1      0      0      1      0 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      1      1      1      1      0      1      0      1      1      1 #> [2,]      0      0      0      0      1      0      1      0      0      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      0      1      1      1      1      0      1      1      0      1 #> [2,]      1      0      0      0      0      1      0      0      1      0 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      0      1      0      1      1      1      1      1      0      0 #> [2,]      1      0      1      0      0      0      0      0      1      1 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      0      1      1      0      0      1      0      1      1      1 #> [2,]      1      0      0      1      1      0      1      0      0      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      0      1      1      0      1      0      0      0      0      0 #> [2,]      1      0      0      1      0      1      1      1      1      1 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      0      0      1      1      1      1      1      0      1      1 #> [2,]      1      1      0      0      0      0      0      1      0      0 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      1      1      1      0      0      1      0      1      0      1 #> [2,]      0      0      0      1      1      0      1      0      1      0 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      0      0      1      1      1      0      1      1      1      1 #> [2,]      1      1      0      0      0      1      0      0      0      0 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      0      0      0      1      1      0      0      0      0      0 #> [2,]      1      1      1      0      0      1      1      1      1      1 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      1      1      1      0      0      1      0      1      0      1 #> [2,]      0      0      0      1      1      0      1      0      1      0 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      0      0      0      1      0      1      0      1      1 #> [2,]      0      1      1      1      0      1      0      1      0      0 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      0      1      1      0      1      1      1      0      0      1 #> [2,]      1      0      0      1      0      0      0      1      1      0 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      0      1      1      0      1      1      1      1      1      1 #> [2,]      1      0      0      1      0      0      0      0      0      0 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      1      1      1      0      1      1      0      1      1      1 #> [2,]      0      0      0      1      0      0      1      0      0      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      0      1      1      0      0      1      1      0      1      0 #> [2,]      1      0      0      1      1      0      0      1      0      1 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      1      1      1      0      0      0      1      1      0      1 #> [2,]      0      0      0      1      1      1      0      0      1      0 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      1      0      0      1      1      1      1      0 #> [2,]      0      0      1      1      0      0      0      0      1 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    1    0    1    0    0    0    1    1    1     1     1     0     1     1 #> [2,]    0    1    0    1    1    1    0    0    0     0     0     1     0     0 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     1     0     0     1     1     0     1     1     1     1     0     0 #> [2,]     0     1     1     0     0     1     0     0     0     0     1     1 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     1     1     1     0     1     0     1     1     0     0     1 #> [2,]     0     0     0     0     1     0     1     0     0     1     1     0 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     0     1     0     1     1     1     1     1     1     1     1 #> [2,]     0     1     0     1     0     0     0     0     0     0     0     0 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     1     1     0     1     0     1     1     1     1     0 #> [2,]     0     0     0     0     1     0     1     0     0     0     0     1 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     0     1     1     1     1     1     1     1     1     1     0     0 #> [2,]     1     0     0     0     0     0     0     0     0     0     1     1 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     0     0     1     1     1     1     0     0     1     0     1     1 #> [2,]     1     1     0     0     0     0     1     1     0     1     0     0 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     0      1      0      1      1      1      1      1      1      0 #> [2,]     1      0      1      0      0      0      0      0      0      1 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      0      1      1      0      1      1      1      1      0 #> [2,]      0      1      0      0      1      0      0      0      0      1 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      1      1      0      1      1      1      1      0      1      1 #> [2,]      0      0      1      0      0      0      0      1      0      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      1      0      1      1      1      1      1      1      1      1 #> [2,]      0      1      0      0      0      0      0      0      0      0 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      0      1      0      1      1      1      0      0      0      1 #> [2,]      1      0      1      0      0      0      1      1      1      0 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      1      1      1      1      1      1      1      0      1      1 #> [2,]      0      0      0      0      0      0      0      1      0      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      0      1      0      1      1      1      1      1      0      1 #> [2,]      1      0      1      0      0      0      0      0      1      0 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      1      1      1      0      1      1      1      0      0      1 #> [2,]      0      0      0      1      0      0      0      1      1      0 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      1      1      1      1      0      1      1      0      1      1 #> [2,]      0      0      0      0      1      0      0      1      0      0 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      1      0      1      1      1      1      1      0      1      0 #> [2,]      0      1      0      0      0      0      0      1      0      1 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      0      1      1      0      1      0      1      0      0      1 #> [2,]      1      0      0      1      0      1      0      1      1      0 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      0      1      1      1      1      1      1      1      1 #> [2,]      0      1      0      0      0      0      0      0      0      0 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      1      1      1      0      0      1      1      0      1      1 #> [2,]      0      0      0      1      1      0      0      1      0      0 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      1      1      1      1      1      1      1      0      0      1 #> [2,]      0      0      0      0      0      0      0      1      1      0 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      1      0      1      1      1      1      1      1      1      1 #> [2,]      0      1      0      0      0      0      0      0      0      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      1      1      1      1      1      0      1      1      1      1 #> [2,]      0      0      0      0      0      1      0      0      0      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      1      1      0      0      1      0      1      1      1      1 #> [2,]      0      0      1      1      0      1      0      0      0      0 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      1      0      0      1      0      0      1      1 #> [2,]      0      0      1      1      0      1      1      0      0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    1    0    1    0    0    0    1    1    1     1     1     1     0     0 #> [2,]    0    1    0    1    1    1    0    0    0     0     0     0     1     1 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     1     1     1     1     1     0     1     1     0     1     1 #> [2,]     0     0     0     0     0     0     1     0     0     1     0     0 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     0     1     1     1     1     1     0     1     0     1     0 #> [2,]     0     1     0     0     0     0     0     1     0     1     0     1 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     1     1     1     0     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     1     0     0     0     0     0     0     0     0 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     1     1     1     0     1     1     0     1     1     1     1     1 #> [2,]     0     0     0     1     0     0     1     0     0     0     0     0 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     0      1      0      0      1      1      1      1      1      1 #> [2,]     1      0      1      1      0      0      0      0      0      0 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      1      1      0      1      1      1      1      1      1      1 #> [2,]      0      0      1      0      0      0      0      0      0      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      1      1      0      1      1      1      1      1      0      1 #> [2,]      0      0      1      0      0      0      0      0      1      0 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      0      1      1      1      1      1      1      0      1      1 #> [2,]      1      0      0      0      0      0      0      1      0      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      0      1      1      1      1      1      0      1      1      1 #> [2,]      1      0      0      0      0      0      1      0      0      0 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      1      1      1      1      1      1      1      0      1      0 #> [2,]      0      0      0      0      0      0      0      1      0      1 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      0      1      1      1      1      0      1      1      1      1 #> [2,]      1      0      0      0      0      1      0      0      0      0 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      1      1      0      0      1      1      1      1      1      1 #> [2,]      0      0      1      1      0      0      0      0      0      0 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      1      1      1      1      1      1      0      0      1      0 #> [2,]      0      0      0      0      0      0      1      1      0      1 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      1      1      1      1      1      1      0      1      0      1 #> [2,]      0      0      0      0      0      0      1      0      1      0 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      1      1      1      0      1      1      1      1      1 #> [2,]      0      0      0      0      1      0      0      0      0      0 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      1      1      0      1      0      0      1      0      1      1 #> [2,]      0      0      1      0      1      1      0      1      0      0 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      1      1      1      0      1      1      1      1      1      1 #> [2,]      0      0      0      1      0      0      0      0      0      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      1      0      0      1      0      0      1      0 #> [2,]      0      0      1      1      0      1      1      0      1 #>  #> , , 6 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    1    0    1    0    0    0    1    1    1     1     1     1     1     1 #> [2,]    0    1    0    1    1    1    0    0    0     0     0     0     0     0 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     0     1     1     1     1     0     1     1     0     1     1     1 #> [2,]     1     0     0     0     0     1     0     0     1     0     0     0 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     1     1     1     1     1     0     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     1     0     0     0     0     0 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     0     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     1     0     0     0     0     0     0     0     0     0     0 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     0     1     0     0     1     1     1     1     1     1     1     1 #> [2,]     1     0     1     1     0     0     0     0     0     0     0     0 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     0     1     1     1     0     1     1     1     1     1     1     1 #> [2,]     1     0     0     0     1     0     0     0     0     0     0     0 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     1      1      0      0      1      1      1      1      1      1 #> [2,]     0      0      1      1      0      0      0      0      0      0 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      1      1      1      1      1      1      0      1      1      1 #> [2,]      0      0      0      0      0      0      1      0      0      0 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      1      1      0      1      1      1      1      1      1      1 #> [2,]      0      0      1      0      0      0      0      0      0      0 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      1      1      1      1      1      1      1      1      1      0 #> [2,]      0      0      0      0      0      0      0      0      0      1 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      1      1      1      1      1      1      1      1      1      0 #> [2,]      0      0      0      0      0      0      0      0      0      1 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      1      1      1      1      1      1      1      0      1      0 #> [2,]      0      0      0      0      0      0      0      1      0      1 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      1      1      1      1      1      0      1      1      1      1 #> [2,]      0      0      0      0      0      1      0      0      0      0 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      1      1      1      1      1      1      0      0      1      1 #> [2,]      0      0      0      0      0      0      1      1      0      0 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      1      1      1      0      1      1      1      1      1      1 #> [2,]      0      0      0      1      0      0      0      0      0      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      1      1      1      1      0      1      1      1      1      1 #> [2,]      0      0      0      0      1      0      0      0      0      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      1      0      0      1      1      1      1      1 #> [2,]      0      0      1      1      0      0      0      0      0 #>  #> , , 7 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    0    0    1    0    0    0    1    1    1     1     1     1     1     0 #> [2,]    1    1    0    1    1    1    0    0    0     0     0     0     0     1 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     0     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     1     0     0     0     0     0     0     0     0     0     0     0 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     0     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     1     0     0     0     0     0     0     0     0     0     0 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     1     1     1     0     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     1     0     0     0     0     0     0     0     0 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     1      1      0      0      0      1      1      1      1      1 #> [2,]     0      0      1      1      1      0      0      0      0      0 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      1      1      1      1      1      0      1      1      1      1 #> [2,]      0      0      0      0      0      1      0      0      0      0 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      1      1      0      1      1      1      1      1      1      1 #> [2,]      0      0      1      0      0      0      0      0      0      0 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      1      1      1      1      1      1      1      1      1      0 #> [2,]      0      0      0      0      0      0      0      0      0      1 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      0      1      1      1      1      1      1      1      1      1 #> [2,]      1      0      0      0      0      0      0      0      0      0 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      1      1      1      1      1      1      0      0      1      1 #> [2,]      0      0      0      0      0      0      1      1      0      0 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      1      1      0      1      1      1      1      1      1      1 #> [2,]      0      0      1      0      0      0      0      0      0      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      1      0      0      1      1      1      1      1 #> [2,]      0      0      1      1      0      0      0      0      0 #>  #> , , 8 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    0    0    0    0    0    0    1    1    1     1     1     1     1     1 #> [2,]    1    1    1    1    1    1    0    0    0     0     0     0     0     0 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     0     1     0     1     1     1     1     1     1     1     1 #> [2,]     0     1     0     1     0     0     0     0     0     0     0     0 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     1      1      0      0      1      1      1      1      1      1 #> [2,]     0      0      1      1      0      0      0      0      0      0 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      1      1      1      1      0      1      1      1      1      1 #> [2,]      0      0      0      0      1      0      0      0      0      0 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      1      1      0      1      1      1      1      1      1      1 #> [2,]      0      0      1      0      0      0      0      0      0      0 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      0      1      1      1      1      1      1      1      1      1 #> [2,]      1      0      0      0      0      0      0      0      0      0 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      1      1      1      1      1      1      1      0      0      0 #> [2,]      0      0      0      0      0      0      0      1      1      1 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      1      1      1      1      1      1      0      0      1      1 #> [2,]      0      0      0      0      0      0      1      1      0      0 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      1      0      0      1      1      1      1      1 #> [2,]      0      0      1      1      0      0      0      0      0 #>  #> , , 9 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    0    0    0    0    0    0    0    1    1     1     1     1     1     1 #> [2,]    1    1    1    1    1    1    1    0    0     0     0     0     0     0 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     1     1     1     1     1     1     0     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     1     0     0     0 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     1      1      0      0      1      1      1      1      1      1 #> [2,]     0      0      1      1      0      0      0      0      0      0 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      1      1      1      1      1      1      1      1      1      0 #> [2,]      0      0      0      0      0      0      0      0      0      1 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      1      1      1      1      1      1      1      0      0      1 #> [2,]      0      0      0      0      0      0      0      1      1      0 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      1      1      1      1      1      1      1      0      1      1 #> [2,]      0      0      0      0      0      0      0      1      0      0 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      1      1      1      0      0      1      1      1      1      1 #> [2,]      0      0      0      1      1      0      0      0      0      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      1      0      0      1      1      1      1      1 #> [2,]      0      0      1      1      0      0      0      0      0 #>  #> , , 10 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    0    0    0    0    0    0    0    1    1     1     1     1     1     1 #> [2,]    1    1    1    1    1    1    1    0    0     0     0     0     0     0 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     1      1      0      0      1      1      1      1      1      1 #> [2,]     0      0      1      1      0      0      0      0      0      0 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      1      1      1      1      1      1      1      0      1      0 #> [2,]      0      0      0      0      0      0      0      1      0      1 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      1      1      1      1      1      1      1      0      1      1 #> [2,]      0      0      0      0      0      0      0      1      0      0 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      1      1      1      0      1      1      1      1      1      1 #> [2,]      0      0      0      1      0      0      0      0      0      0 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      1      1      1      1      1      1      1      1      1      1 #> [2,]      0      0      0      0      0      0      0      0      0      0 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      1      1      0      0      1      1      1      1      1 #> [2,]      0      0      1      1      0      0      0      0      0 #>  #>  #> $hyper #> , , 1 #>  #>           [,1]       [,2] #> [1,]  2.234132  1.1510057 #> [2,]  6.153157  1.0712012 #> [3,]  3.382887  0.4948315 #> [4,] 22.651755 17.4748071 #> [5,] 26.013064 15.6841633 #> [6,] 41.449674 10.0039639 #> [7,]  2.962011  0.8364195 #>  #> , , 2 #>  #>           [,1]       [,2] #> [1,]  7.376525  0.7658804 #> [2,]  6.249418  0.5646750 #> [3,]  2.939938  0.6411579 #> [4,] 31.906197 11.9136618 #> [5,] 48.905149  9.7507511 #> [6,] 21.280186 10.3202424 #> [7,]  4.344693  1.6809140 #>  #> , , 3 #>  #>           [,1]      [,2] #> [1,] 12.057562 0.6351199 #> [2,]  6.113914 1.2356825 #> [3,]  6.376011 0.4805677 #> [4,] 82.527711 8.0969416 #> [5,] 97.891660 9.2988068 #> [6,] 61.774978 8.5916962 #> [7,]  5.995936 0.9957840 #>  #> , , 4 #>  #>            [,1]      [,2] #> [1,]  14.860185 0.4544505 #> [2,]   8.558977 0.5801951 #> [3,]   4.240776 1.0258326 #> [4,]  89.723674 5.1664349 #> [5,] 121.885617 6.4761716 #> [6,]  50.242417 8.5020487 #> [7,]   7.645977 1.0044446 #>  #> , , 5 #>  #>            [,1]       [,2] #> [1,]  18.025703  1.0403275 #> [2,]   9.134946  0.4584765 #> [3,]   1.566289  1.4008145 #> [4,] 136.566304  6.3273239 #> [5,]  84.488702  8.1131021 #> [6,]  54.176928 14.5760753 #> [7,]   7.807967  0.7723058 #>  #> , , 6 #>  #>            [,1]      [,2] #> [1,]  11.640701 0.6884671 #> [2,]   7.697769 0.3143038 #> [3,]   4.784662 0.6581647 #> [4,] 113.886931 6.8714302 #> [5,]  75.883762 4.5299713 #> [6,]  47.978256 6.4705811 #> [7,]  10.588230 1.1212193 #>  #> , , 7 #>  #>            [,1]      [,2] #> [1,]   9.972073 0.5850926 #> [2,]  11.598492 0.4893285 #> [3,]   2.940591 0.1389345 #> [4,] 110.096885 7.2560163 #> [5,] 105.307995 3.7634926 #> [6,]  56.551717 4.4143010 #> [7,]   8.949910 0.5994993 #>  #> , , 8 #>  #>            [,1]       [,2] #> [1,]  11.213326 0.16010640 #> [2,]  11.579126 0.59339854 #> [3,]   3.686823 0.09370896 #> [4,] 107.189689 3.76406792 #> [5,] 130.963501 6.18144254 #> [6,]  71.842765 1.23726900 #> [7,]  12.099691 0.44621903 #>  #> , , 9 #>  #>            [,1]      [,2] #> [1,]   6.200813 0.4033869 #> [2,]   9.216455 0.4144688 #> [3,]   2.533843 0.3482198 #> [4,]  80.536335 2.3050011 #> [5,] 166.254195 6.4583771 #> [6,]  34.657913 1.7252258 #> [7,]  13.194428 0.4365096 #>  #> , , 10 #>  #>           [,1]      [,2] #> [1,] 14.044000 0.4030457 #> [2,]  8.394752 1.0219429 #> [3,]  3.966173 0.1795018 #> [4,] 79.279220 3.6370939 #> [5,] 88.260533 3.6409540 #> [6,] 35.914641 3.3774166 #> [7,]  9.720914 0.4044269 #>  #>  #> $sigma #> , , 1 #>  #>           [,1]     [,2]     [,3]     [,4]      [,5]     [,6]     [,7]     [,8] #> [1,] 0.9962679 1.003718 1.003718 1.003718 0.9962679 1.003718 1.003718 1.003718 #> [2,] 0.9832055 1.016517 1.016517 1.016517 0.9832055 1.016517 1.016517 1.016517 #> [3,] 0.9792629 1.020316 1.020316 1.020316 0.9792629 1.020316 1.020316 1.020316 #>           [,9]    [,10]    [,11]     [,12]     [,13]     [,14]    [,15] #> [1,] 0.9962679 1.003718 1.003718 0.9962679 0.9962679 0.9962679 1.003718 #> [2,] 0.9832055 1.016517 1.016517 0.9832055 0.9832055 0.9832055 1.016517 #> [3,] 0.9792629 1.020316 1.020316 0.9792629 0.9792629 0.9792629 1.020316 #>          [,16]    [,17]     [,18]     [,19]    [,20]    [,21]     [,22] #> [1,] 0.9962679 1.003718 0.9962679 0.9962679 1.003718 1.003718 0.9962679 #> [2,] 0.9832055 1.016517 0.9832055 0.9832055 1.016517 1.016517 0.9832055 #> [3,] 0.9792629 1.020316 0.9792629 0.9792629 1.020316 1.020316 0.9792629 #>         [,23]     [,24]     [,25]     [,26]    [,27]     [,28]    [,29] #> [1,] 1.003718 0.9962679 0.9962679 0.9962679 1.003718 0.9962679 1.003718 #> [2,] 1.016517 0.9832055 0.9832055 0.9832055 1.016517 0.9832055 1.016517 #> [3,] 1.020316 0.9792629 0.9792629 0.9792629 1.020316 0.9792629 1.020316 #>         [,30]    [,31]    [,32]    [,33]    [,34]     [,35]     [,36]     [,37] #> [1,] 1.003718 1.003718 1.003718 1.003718 1.003718 0.9962679 0.9962679 0.9962679 #> [2,] 1.016517 1.016517 1.016517 1.016517 1.016517 0.9832055 0.9832055 0.9832055 #> [3,] 1.020316 1.020316 1.020316 1.020316 1.020316 0.9792629 0.9792629 0.9792629 #>          [,38]    [,39]    [,40]     [,41]     [,42]    [,43]    [,44]    [,45] #> [1,] 0.9962679 1.003718 1.003718 0.9962679 0.9962679 1.003718 1.003718 1.003718 #> [2,] 0.9832055 1.016517 1.016517 0.9832055 0.9832055 1.016517 1.016517 1.016517 #> [3,] 0.9792629 1.020316 1.020316 0.9792629 0.9792629 1.020316 1.020316 1.020316 #>         [,46]     [,47]     [,48]     [,49]    [,50]     [,51]     [,52] #> [1,] 1.003718 0.9962679 0.9962679 0.9962679 1.003718 0.9962679 0.9962679 #> [2,] 1.016517 0.9832055 0.9832055 0.9832055 1.016517 0.9832055 0.9832055 #> [3,] 1.020316 0.9792629 0.9792629 0.9792629 1.020316 0.9792629 0.9792629 #>         [,53]    [,54]    [,55]     [,56]    [,57]     [,58]     [,59] #> [1,] 1.003718 1.003718 1.003718 0.9962679 1.003718 0.9962679 0.9962679 #> [2,] 1.016517 1.016517 1.016517 0.9832055 1.016517 0.9832055 0.9832055 #> [3,] 1.020316 1.020316 1.020316 0.9792629 1.020316 0.9792629 0.9792629 #>          [,60]    [,61]     [,62]     [,63]    [,64]     [,65]    [,66] #> [1,] 0.9962679 1.003718 0.9962679 0.9962679 1.003718 0.9962679 1.003718 #> [2,] 0.9832055 1.016517 0.9832055 0.9832055 1.016517 0.9832055 1.016517 #> [3,] 0.9792629 1.020316 0.9792629 0.9792629 1.020316 0.9792629 1.020316 #>          [,67]     [,68]    [,69]    [,70]     [,71]    [,72]     [,73] #> [1,] 0.9962679 0.9962679 1.003718 1.003718 0.9962679 1.003718 0.9962679 #> [2,] 0.9832055 0.9832055 1.016517 1.016517 0.9832055 1.016517 0.9832055 #> [3,] 0.9792629 0.9792629 1.020316 1.020316 0.9792629 1.020316 0.9792629 #>         [,74]    [,75]     [,76]     [,77]    [,78]    [,79]    [,80]     [,81] #> [1,] 1.003718 1.003718 0.9962679 0.9962679 1.003718 1.003718 1.003718 0.9962679 #> [2,] 1.016517 1.016517 0.9832055 0.9832055 1.016517 1.016517 1.016517 0.9832055 #> [3,] 1.020316 1.020316 0.9792629 0.9792629 1.020316 1.020316 1.020316 0.9792629 #>          [,82]     [,83]    [,84]     [,85]    [,86]    [,87]    [,88] #> [1,] 0.9962679 0.9962679 1.003718 0.9962679 1.003718 1.003718 1.003718 #> [2,] 0.9832055 0.9832055 1.016517 0.9832055 1.016517 1.016517 1.016517 #> [3,] 0.9792629 0.9792629 1.020316 0.9792629 1.020316 1.020316 1.020316 #>          [,89]    [,90]    [,91]     [,92]    [,93]     [,94]     [,95] #> [1,] 0.9962679 1.003718 1.003718 0.9962679 1.003718 0.9962679 0.9962679 #> [2,] 0.9832055 1.016517 1.016517 0.9832055 1.016517 0.9832055 0.9832055 #> [3,] 0.9792629 1.020316 1.020316 0.9792629 1.020316 0.9792629 0.9792629 #>         [,96]     [,97]    [,98]    [,99]   [,100]   [,101]    [,102]    [,103] #> [1,] 1.003718 0.9962679 1.003718 1.003718 1.003718 1.003718 0.9962679 0.9962679 #> [2,] 1.016517 0.9832055 1.016517 1.016517 1.016517 1.016517 0.9832055 0.9832055 #> [3,] 1.020316 0.9792629 1.020316 1.020316 1.020316 1.020316 0.9792629 0.9792629 #>        [,104]    [,105]    [,106]   [,107]    [,108]    [,109]    [,110] #> [1,] 1.003718 0.9962679 0.9962679 1.003718 0.9962679 0.9962679 0.9962679 #> [2,] 1.016517 0.9832055 0.9832055 1.016517 0.9832055 0.9832055 0.9832055 #> [3,] 1.020316 0.9792629 0.9792629 1.020316 0.9792629 0.9792629 0.9792629 #>        [,111]    [,112]   [,113]   [,114]   [,115]    [,116]   [,117]   [,118] #> [1,] 1.003718 0.9962679 1.003718 1.003718 1.003718 0.9962679 1.003718 1.003718 #> [2,] 1.016517 0.9832055 1.016517 1.016517 1.016517 0.9832055 1.016517 1.016517 #> [3,] 1.020316 0.9792629 1.020316 1.020316 1.020316 0.9792629 1.020316 1.020316 #>        [,119]   [,120]   [,121]    [,122]   [,123]    [,124]   [,125]    [,126] #> [1,] 1.003718 1.003718 1.003718 0.9962679 1.003718 0.9962679 1.003718 0.9962679 #> [2,] 1.016517 1.016517 1.016517 0.9832055 1.016517 0.9832055 1.016517 0.9832055 #> [3,] 1.020316 1.020316 1.020316 0.9792629 1.020316 0.9792629 1.020316 0.9792629 #>         [,127]   [,128]    [,129]   [,130]    [,131]    [,132]    [,133] #> [1,] 0.9962679 1.003718 0.9962679 1.003718 0.9962679 0.9962679 0.9962679 #> [2,] 0.9832055 1.016517 0.9832055 1.016517 0.9832055 0.9832055 0.9832055 #> [3,] 0.9792629 1.020316 0.9792629 1.020316 0.9792629 0.9792629 0.9792629 #>         [,134]    [,135]    [,136]    [,137]   [,138]    [,139]   [,140] #> [1,] 0.9962679 0.9962679 0.9962679 0.9962679 1.003718 0.9962679 1.003718 #> [2,] 0.9832055 0.9832055 0.9832055 0.9832055 1.016517 0.9832055 1.016517 #> [3,] 0.9792629 0.9792629 0.9792629 0.9792629 1.020316 0.9792629 1.020316 #>         [,141]   [,142]    [,143]    [,144]    [,145]    [,146]   [,147] #> [1,] 0.9962679 1.003718 0.9962679 0.9962679 0.9962679 0.9962679 1.003718 #> [2,] 0.9832055 1.016517 0.9832055 0.9832055 0.9832055 0.9832055 1.016517 #> [3,] 0.9792629 1.020316 0.9792629 0.9792629 0.9792629 0.9792629 1.020316 #>        [,148]   [,149]    [,150]   [,151]    [,152]   [,153]   [,154]    [,155] #> [1,] 1.003718 1.003718 0.9962679 1.003718 0.9962679 1.003718 1.003718 0.9962679 #> [2,] 1.016517 1.016517 0.9832055 1.016517 0.9832055 1.016517 1.016517 0.9832055 #> [3,] 1.020316 1.020316 0.9792629 1.020316 0.9792629 1.020316 1.020316 0.9792629 #>        [,156]    [,157]    [,158]    [,159]   [,160]    [,161]   [,162] #> [1,] 1.003718 0.9962679 0.9962679 0.9962679 1.003718 0.9962679 1.003718 #> [2,] 1.016517 0.9832055 0.9832055 0.9832055 1.016517 0.9832055 1.016517 #> [3,] 1.020316 0.9792629 0.9792629 0.9792629 1.020316 0.9792629 1.020316 #>        [,163]   [,164]    [,165]    [,166]   [,167]    [,168]    [,169] #> [1,] 1.003718 1.003718 0.9962679 0.9962679 1.003718 0.9962679 0.9962679 #> [2,] 1.016517 1.016517 0.9832055 0.9832055 1.016517 0.9832055 0.9832055 #> [3,] 1.020316 1.020316 0.9792629 0.9792629 1.020316 0.9792629 0.9792629 #>        [,170]    [,171]   [,172]   [,173]    [,174]   [,175]    [,176]   [,177] #> [1,] 1.003718 0.9962679 1.003718 1.003718 0.9962679 1.003718 0.9962679 1.003718 #> [2,] 1.016517 0.9832055 1.016517 1.016517 0.9832055 1.016517 0.9832055 1.016517 #> [3,] 1.020316 0.9792629 1.020316 1.020316 0.9792629 1.020316 0.9792629 1.020316 #>        [,178]    [,179]    [,180]   [,181]    [,182]    [,183]   [,184] #> [1,] 1.003718 0.9962679 0.9962679 1.003718 0.9962679 0.9962679 1.003718 #> [2,] 1.016517 0.9832055 0.9832055 1.016517 0.9832055 0.9832055 1.016517 #> [3,] 1.020316 0.9792629 0.9792629 1.020316 0.9792629 0.9792629 1.020316 #>         [,185]    [,186]    [,187]    [,188]   [,189]    [,190]   [,191] #> [1,] 0.9962679 0.9962679 0.9962679 0.9962679 1.003718 0.9962679 1.003718 #> [2,] 0.9832055 0.9832055 0.9832055 0.9832055 1.016517 0.9832055 1.016517 #> [3,] 0.9792629 0.9792629 0.9792629 0.9792629 1.020316 0.9792629 1.020316 #>        [,192]   [,193]    [,194]    [,195]   [,196]    [,197]    [,198] #> [1,] 1.003718 1.003718 0.9962679 0.9962679 1.003718 0.9962679 0.9962679 #> [2,] 1.016517 1.016517 0.9832055 0.9832055 1.016517 0.9832055 0.9832055 #> [3,] 1.020316 1.020316 0.9792629 0.9792629 1.020316 0.9792629 0.9792629 #>        [,199]   [,200]   [,201]   [,202]   [,203]   [,204]    [,205]   [,206] #> [1,] 1.003718 1.003718 1.003718 1.003718 1.003718 1.003718 0.9962679 1.003718 #> [2,] 1.016517 1.016517 1.016517 1.016517 1.016517 1.016517 0.9832055 1.016517 #> [3,] 1.020316 1.020316 1.020316 1.020316 1.020316 1.020316 0.9792629 1.020316 #>        [,207]    [,208]    [,209]    [,210]    [,211]    [,212]   [,213] #> [1,] 1.003718 0.9962679 0.9962679 0.9962679 0.9962679 0.9962679 1.003718 #> [2,] 1.016517 0.9832055 0.9832055 0.9832055 0.9832055 0.9832055 1.016517 #> [3,] 1.020316 0.9792629 0.9792629 0.9792629 0.9792629 0.9792629 1.020316 #>         [,214]    [,215]    [,216]    [,217]    [,218]    [,219]   [,220] #> [1,] 0.9962679 0.9962679 0.9962679 0.9962679 0.9962679 0.9962679 1.003718 #> [2,] 0.9832055 0.9832055 0.9832055 0.9832055 0.9832055 0.9832055 1.016517 #> [3,] 0.9792629 0.9792629 0.9792629 0.9792629 0.9792629 0.9792629 1.020316 #>         [,221]   [,222]    [,223]   [,224]    [,225]    [,226]   [,227] #> [1,] 0.9962679 1.003718 0.9962679 1.003718 0.9962679 0.9962679 1.003718 #> [2,] 0.9832055 1.016517 0.9832055 1.016517 0.9832055 0.9832055 1.016517 #> [3,] 0.9792629 1.020316 0.9792629 1.020316 0.9792629 0.9792629 1.020316 #>         [,228]   [,229]   [,230]   [,231]    [,232]   [,233]    [,234] #> [1,] 0.9962679 1.003718 1.003718 1.003718 0.9962679 1.003718 0.9962679 #> [2,] 0.9832055 1.016517 1.016517 1.016517 0.9832055 1.016517 0.9832055 #> [3,] 0.9792629 1.020316 1.020316 1.020316 0.9792629 1.020316 0.9792629 #>         [,235]    [,236]    [,237]    [,238]   [,239]    [,240]    [,241] #> [1,] 0.9962679 0.9962679 0.9962679 0.9962679 1.003718 0.9962679 0.9962679 #> [2,] 0.9832055 0.9832055 0.9832055 0.9832055 1.016517 0.9832055 0.9832055 #> [3,] 0.9792629 0.9792629 0.9792629 0.9792629 1.020316 0.9792629 0.9792629 #>         [,242]    [,243]    [,244]    [,245]   [,246]    [,247]   [,248] #> [1,] 0.9962679 0.9962679 0.9962679 0.9962679 1.003718 0.9962679 1.003718 #> [2,] 0.9832055 0.9832055 0.9832055 0.9832055 1.016517 0.9832055 1.016517 #> [3,] 0.9792629 0.9792629 0.9792629 0.9792629 1.020316 0.9792629 1.020316 #>        [,249]   [,250]   [,251]    [,252]   [,253]    [,254]    [,255]   [,256] #> [1,] 1.003718 1.003718 1.003718 0.9962679 1.003718 0.9962679 0.9962679 1.003718 #> [2,] 1.016517 1.016517 1.016517 0.9832055 1.016517 0.9832055 0.9832055 1.016517 #> [3,] 1.020316 1.020316 1.020316 0.9792629 1.020316 0.9792629 0.9792629 1.020316 #>        [,257]    [,258]   [,259]   [,260]   [,261]    [,262]   [,263]   [,264] #> [1,] 1.003718 0.9962679 1.003718 1.003718 1.003718 0.9962679 1.003718 1.003718 #> [2,] 1.016517 0.9832055 1.016517 1.016517 1.016517 0.9832055 1.016517 1.016517 #> [3,] 1.020316 0.9792629 1.020316 1.020316 1.020316 0.9792629 1.020316 1.020316 #>        [,265]   [,266]   [,267]    [,268]   [,269]   [,270]   [,271]   [,272] #> [1,] 1.003718 1.003718 1.003718 0.9962679 1.003718 1.003718 1.003718 1.003718 #> [2,] 1.016517 1.016517 1.016517 0.9832055 1.016517 1.016517 1.016517 1.016517 #> [3,] 1.020316 1.020316 1.020316 0.9792629 1.020316 1.020316 1.020316 1.020316 #>         [,273]    [,274]   [,275]    [,276]    [,277]    [,278]   [,279] #> [1,] 0.9962679 0.9962679 1.003718 0.9962679 0.9962679 0.9962679 1.003718 #> [2,] 0.9832055 0.9832055 1.016517 0.9832055 0.9832055 0.9832055 1.016517 #> [3,] 0.9792629 0.9792629 1.020316 0.9792629 0.9792629 0.9792629 1.020316 #>         [,280]    [,281]    [,282]   [,283]    [,284]   [,285]   [,286] #> [1,] 0.9962679 0.9962679 0.9962679 1.003718 0.9962679 1.003718 1.003718 #> [2,] 0.9832055 0.9832055 0.9832055 1.016517 0.9832055 1.016517 1.016517 #> [3,] 0.9792629 0.9792629 0.9792629 1.020316 0.9792629 1.020316 1.020316 #>        [,287] #> [1,] 1.003718 #> [2,] 1.016517 #> [3,] 1.020316 #>  #> , , 2 #>  #>          [,1]      [,2]     [,3]     [,4]     [,5]      [,6]     [,7]     [,8] #> [1,] 1.086750 0.9049715 1.086750 1.086750 1.086750 0.9049715 1.086750 1.086750 #> [2,] 1.070771 0.9238235 1.070771 1.070771 1.070771 0.9238235 1.070771 1.070771 #> [3,] 1.105542 0.8819171 1.105542 1.105542 1.105542 0.8819171 1.105542 1.105542 #>           [,9]     [,10]    [,11]     [,12]    [,13]    [,14]    [,15] #> [1,] 0.9049715 0.9049715 1.086750 0.9049715 1.086750 1.086750 1.086750 #> [2,] 0.9238235 0.9238235 1.070771 0.9238235 1.070771 1.070771 1.070771 #> [3,] 0.8819171 0.8819171 1.105542 0.8819171 1.105542 1.105542 1.105542 #>          [,16]    [,17]    [,18]    [,19]    [,20]     [,21]    [,22]    [,23] #> [1,] 0.9049715 1.086750 1.086750 1.086750 1.086750 0.9049715 1.086750 1.086750 #> [2,] 0.9238235 1.070771 1.070771 1.070771 1.070771 0.9238235 1.070771 1.070771 #> [3,] 0.8819171 1.105542 1.105542 1.105542 1.105542 0.8819171 1.105542 1.105542 #>         [,24]    [,25]    [,26]    [,27]     [,28]    [,29]    [,30]    [,31] #> [1,] 1.086750 1.086750 1.086750 1.086750 0.9049715 1.086750 1.086750 1.086750 #> [2,] 1.070771 1.070771 1.070771 1.070771 0.9238235 1.070771 1.070771 1.070771 #> [3,] 1.105542 1.105542 1.105542 1.105542 0.8819171 1.105542 1.105542 1.105542 #>         [,32]    [,33]     [,34]    [,35]     [,36]    [,37]    [,38]    [,39] #> [1,] 1.086750 1.086750 0.9049715 1.086750 0.9049715 1.086750 1.086750 1.086750 #> [2,] 1.070771 1.070771 0.9238235 1.070771 0.9238235 1.070771 1.070771 1.070771 #> [3,] 1.105542 1.105542 0.8819171 1.105542 0.8819171 1.105542 1.105542 1.105542 #>         [,40]     [,41]    [,42]    [,43]    [,44]     [,45]     [,46] #> [1,] 1.086750 0.9049715 1.086750 1.086750 1.086750 0.9049715 0.9049715 #> [2,] 1.070771 0.9238235 1.070771 1.070771 1.070771 0.9238235 0.9238235 #> [3,] 1.105542 0.8819171 1.105542 1.105542 1.105542 0.8819171 0.8819171 #>          [,47]     [,48]     [,49]    [,50]    [,51]    [,52]     [,53] #> [1,] 0.9049715 0.9049715 0.9049715 1.086750 1.086750 1.086750 0.9049715 #> [2,] 0.9238235 0.9238235 0.9238235 1.070771 1.070771 1.070771 0.9238235 #> [3,] 0.8819171 0.8819171 0.8819171 1.105542 1.105542 1.105542 0.8819171 #>          [,54]    [,55]     [,56]     [,57]     [,58]    [,59]    [,60] #> [1,] 0.9049715 1.086750 0.9049715 0.9049715 0.9049715 1.086750 1.086750 #> [2,] 0.9238235 1.070771 0.9238235 0.9238235 0.9238235 1.070771 1.070771 #> [3,] 0.8819171 1.105542 0.8819171 0.8819171 0.8819171 1.105542 1.105542 #>         [,61]     [,62]    [,63]    [,64]    [,65]     [,66]    [,67]     [,68] #> [1,] 1.086750 0.9049715 1.086750 1.086750 1.086750 0.9049715 1.086750 0.9049715 #> [2,] 1.070771 0.9238235 1.070771 1.070771 1.070771 0.9238235 1.070771 0.9238235 #> [3,] 1.105542 0.8819171 1.105542 1.105542 1.105542 0.8819171 1.105542 0.8819171 #>         [,69]    [,70]     [,71]    [,72]    [,73]    [,74]    [,75]    [,76] #> [1,] 1.086750 1.086750 0.9049715 1.086750 1.086750 1.086750 1.086750 1.086750 #> [2,] 1.070771 1.070771 0.9238235 1.070771 1.070771 1.070771 1.070771 1.070771 #> [3,] 1.105542 1.105542 0.8819171 1.105542 1.105542 1.105542 1.105542 1.105542 #>          [,77]    [,78]     [,79]    [,80]     [,81]     [,82]    [,83] #> [1,] 0.9049715 1.086750 0.9049715 1.086750 0.9049715 0.9049715 1.086750 #> [2,] 0.9238235 1.070771 0.9238235 1.070771 0.9238235 0.9238235 1.070771 #> [3,] 0.8819171 1.105542 0.8819171 1.105542 0.8819171 0.8819171 1.105542 #>          [,84]     [,85]     [,86]     [,87]     [,88]    [,89]     [,90] #> [1,] 0.9049715 0.9049715 0.9049715 0.9049715 0.9049715 1.086750 0.9049715 #> [2,] 0.9238235 0.9238235 0.9238235 0.9238235 0.9238235 1.070771 0.9238235 #> [3,] 0.8819171 0.8819171 0.8819171 0.8819171 0.8819171 1.105542 0.8819171 #>         [,91]     [,92]    [,93]     [,94]     [,95]    [,96]     [,97] #> [1,] 1.086750 0.9049715 1.086750 0.9049715 0.9049715 1.086750 0.9049715 #> [2,] 1.070771 0.9238235 1.070771 0.9238235 0.9238235 1.070771 0.9238235 #> [3,] 1.105542 0.8819171 1.105542 0.8819171 0.8819171 1.105542 0.8819171 #>         [,98]     [,99]    [,100]   [,101]    [,102]   [,103]    [,104] #> [1,] 1.086750 0.9049715 0.9049715 1.086750 0.9049715 1.086750 0.9049715 #> [2,] 1.070771 0.9238235 0.9238235 1.070771 0.9238235 1.070771 0.9238235 #> [3,] 1.105542 0.8819171 0.8819171 1.105542 0.8819171 1.105542 0.8819171 #>        [,105]   [,106]    [,107]   [,108]    [,109]   [,110]   [,111]   [,112] #> [1,] 1.086750 1.086750 0.9049715 1.086750 0.9049715 1.086750 1.086750 1.086750 #> [2,] 1.070771 1.070771 0.9238235 1.070771 0.9238235 1.070771 1.070771 1.070771 #> [3,] 1.105542 1.105542 0.8819171 1.105542 0.8819171 1.105542 1.105542 1.105542 #>         [,113]    [,114]    [,115]   [,116]   [,117]   [,118]    [,119] #> [1,] 0.9049715 0.9049715 0.9049715 1.086750 1.086750 1.086750 0.9049715 #> [2,] 0.9238235 0.9238235 0.9238235 1.070771 1.070771 1.070771 0.9238235 #> [3,] 0.8819171 0.8819171 0.8819171 1.105542 1.105542 1.105542 0.8819171 #>        [,120]   [,121]   [,122]   [,123]    [,124]    [,125]    [,126] #> [1,] 1.086750 1.086750 1.086750 1.086750 0.9049715 0.9049715 0.9049715 #> [2,] 1.070771 1.070771 1.070771 1.070771 0.9238235 0.9238235 0.9238235 #> [3,] 1.105542 1.105542 1.105542 1.105542 0.8819171 0.8819171 0.8819171 #>         [,127]    [,128]   [,129]   [,130]    [,131]   [,132]   [,133] #> [1,] 0.9049715 0.9049715 1.086750 1.086750 0.9049715 1.086750 1.086750 #> [2,] 0.9238235 0.9238235 1.070771 1.070771 0.9238235 1.070771 1.070771 #> [3,] 0.8819171 0.8819171 1.105542 1.105542 0.8819171 1.105542 1.105542 #>         [,134]    [,135]   [,136]    [,137]    [,138]   [,139]    [,140] #> [1,] 0.9049715 0.9049715 1.086750 0.9049715 0.9049715 1.086750 0.9049715 #> [2,] 0.9238235 0.9238235 1.070771 0.9238235 0.9238235 1.070771 0.9238235 #> [3,] 0.8819171 0.8819171 1.105542 0.8819171 0.8819171 1.105542 0.8819171 #>        [,141]    [,142]   [,143]    [,144]   [,145]    [,146]    [,147] #> [1,] 1.086750 0.9049715 1.086750 0.9049715 1.086750 0.9049715 0.9049715 #> [2,] 1.070771 0.9238235 1.070771 0.9238235 1.070771 0.9238235 0.9238235 #> [3,] 1.105542 0.8819171 1.105542 0.8819171 1.105542 0.8819171 0.8819171 #>         [,148]    [,149]    [,150]    [,151]   [,152]    [,153]    [,154] #> [1,] 0.9049715 0.9049715 0.9049715 0.9049715 1.086750 0.9049715 0.9049715 #> [2,] 0.9238235 0.9238235 0.9238235 0.9238235 1.070771 0.9238235 0.9238235 #> [3,] 0.8819171 0.8819171 0.8819171 0.8819171 1.105542 0.8819171 0.8819171 #>         [,155]    [,156]   [,157]    [,158]   [,159]    [,160]    [,161] #> [1,] 0.9049715 0.9049715 1.086750 0.9049715 1.086750 0.9049715 0.9049715 #> [2,] 0.9238235 0.9238235 1.070771 0.9238235 1.070771 0.9238235 0.9238235 #> [3,] 0.8819171 0.8819171 1.105542 0.8819171 1.105542 0.8819171 0.8819171 #>        [,162]   [,163]    [,164]   [,165]    [,166]    [,167]    [,168] #> [1,] 1.086750 1.086750 0.9049715 1.086750 0.9049715 0.9049715 0.9049715 #> [2,] 1.070771 1.070771 0.9238235 1.070771 0.9238235 0.9238235 0.9238235 #> [3,] 1.105542 1.105542 0.8819171 1.105542 0.8819171 0.8819171 0.8819171 #>         [,169]   [,170]    [,171]   [,172]    [,173]    [,174]   [,175] #> [1,] 0.9049715 1.086750 0.9049715 1.086750 0.9049715 0.9049715 1.086750 #> [2,] 0.9238235 1.070771 0.9238235 1.070771 0.9238235 0.9238235 1.070771 #> [3,] 0.8819171 1.105542 0.8819171 1.105542 0.8819171 0.8819171 1.105542 #>         [,176]    [,177]    [,178]    [,179]   [,180]   [,181]    [,182] #> [1,] 0.9049715 0.9049715 0.9049715 0.9049715 1.086750 1.086750 0.9049715 #> [2,] 0.9238235 0.9238235 0.9238235 0.9238235 1.070771 1.070771 0.9238235 #> [3,] 0.8819171 0.8819171 0.8819171 0.8819171 1.105542 1.105542 0.8819171 #>         [,183]    [,184]   [,185]    [,186]   [,187]   [,188]   [,189]   [,190] #> [1,] 0.9049715 0.9049715 1.086750 0.9049715 1.086750 1.086750 1.086750 1.086750 #> [2,] 0.9238235 0.9238235 1.070771 0.9238235 1.070771 1.070771 1.070771 1.070771 #> [3,] 0.8819171 0.8819171 1.105542 0.8819171 1.105542 1.105542 1.105542 1.105542 #>        [,191]    [,192]   [,193]   [,194]    [,195]   [,196]   [,197]   [,198] #> [1,] 1.086750 0.9049715 1.086750 1.086750 0.9049715 1.086750 1.086750 1.086750 #> [2,] 1.070771 0.9238235 1.070771 1.070771 0.9238235 1.070771 1.070771 1.070771 #> [3,] 1.105542 0.8819171 1.105542 1.105542 0.8819171 1.105542 1.105542 1.105542 #>         [,199]    [,200]    [,201]    [,202]   [,203]    [,204]    [,205] #> [1,] 0.9049715 0.9049715 0.9049715 0.9049715 1.086750 0.9049715 0.9049715 #> [2,] 0.9238235 0.9238235 0.9238235 0.9238235 1.070771 0.9238235 0.9238235 #> [3,] 0.8819171 0.8819171 0.8819171 0.8819171 1.105542 0.8819171 0.8819171 #>         [,206]   [,207]   [,208]    [,209]    [,210]    [,211]   [,212] #> [1,] 0.9049715 1.086750 1.086750 0.9049715 0.9049715 0.9049715 1.086750 #> [2,] 0.9238235 1.070771 1.070771 0.9238235 0.9238235 0.9238235 1.070771 #> [3,] 0.8819171 1.105542 1.105542 0.8819171 0.8819171 0.8819171 1.105542 #>        [,213]    [,214]    [,215]    [,216]   [,217]    [,218]    [,219] #> [1,] 1.086750 0.9049715 0.9049715 0.9049715 1.086750 0.9049715 0.9049715 #> [2,] 1.070771 0.9238235 0.9238235 0.9238235 1.070771 0.9238235 0.9238235 #> [3,] 1.105542 0.8819171 0.8819171 0.8819171 1.105542 0.8819171 0.8819171 #>        [,220]    [,221]   [,222]   [,223]   [,224]    [,225]    [,226] #> [1,] 1.086750 0.9049715 1.086750 1.086750 1.086750 0.9049715 0.9049715 #> [2,] 1.070771 0.9238235 1.070771 1.070771 1.070771 0.9238235 0.9238235 #> [3,] 1.105542 0.8819171 1.105542 1.105542 1.105542 0.8819171 0.8819171 #>         [,227]   [,228]   [,229]   [,230]    [,231]    [,232]    [,233] #> [1,] 0.9049715 1.086750 1.086750 1.086750 0.9049715 0.9049715 0.9049715 #> [2,] 0.9238235 1.070771 1.070771 1.070771 0.9238235 0.9238235 0.9238235 #> [3,] 0.8819171 1.105542 1.105542 1.105542 0.8819171 0.8819171 0.8819171 #>        [,234]   [,235]   [,236]   [,237]   [,238]   [,239]    [,240]    [,241] #> [1,] 1.086750 1.086750 1.086750 1.086750 1.086750 1.086750 0.9049715 0.9049715 #> [2,] 1.070771 1.070771 1.070771 1.070771 1.070771 1.070771 0.9238235 0.9238235 #> [3,] 1.105542 1.105542 1.105542 1.105542 1.105542 1.105542 0.8819171 0.8819171 #>         [,242]    [,243]   [,244]   [,245]    [,246]   [,247]    [,248] #> [1,] 0.9049715 0.9049715 1.086750 1.086750 0.9049715 1.086750 0.9049715 #> [2,] 0.9238235 0.9238235 1.070771 1.070771 0.9238235 1.070771 0.9238235 #> [3,] 0.8819171 0.8819171 1.105542 1.105542 0.8819171 1.105542 0.8819171 #>        [,249]   [,250]    [,251]    [,252]   [,253]    [,254]   [,255] #> [1,] 1.086750 1.086750 0.9049715 0.9049715 1.086750 0.9049715 1.086750 #> [2,] 1.070771 1.070771 0.9238235 0.9238235 1.070771 0.9238235 1.070771 #> [3,] 1.105542 1.105542 0.8819171 0.8819171 1.105542 0.8819171 1.105542 #>         [,256]   [,257]    [,258]   [,259]    [,260]   [,261]    [,262] #> [1,] 0.9049715 1.086750 0.9049715 1.086750 0.9049715 1.086750 0.9049715 #> [2,] 0.9238235 1.070771 0.9238235 1.070771 0.9238235 1.070771 0.9238235 #> [3,] 0.8819171 1.105542 0.8819171 1.105542 0.8819171 1.105542 0.8819171 #>        [,263]    [,264]   [,265]   [,266]    [,267]    [,268]    [,269] #> [1,] 1.086750 0.9049715 1.086750 1.086750 0.9049715 0.9049715 0.9049715 #> [2,] 1.070771 0.9238235 1.070771 1.070771 0.9238235 0.9238235 0.9238235 #> [3,] 1.105542 0.8819171 1.105542 1.105542 0.8819171 0.8819171 0.8819171 #>         [,270]   [,271]   [,272]    [,273]    [,274]    [,275]   [,276] #> [1,] 0.9049715 1.086750 1.086750 0.9049715 0.9049715 0.9049715 1.086750 #> [2,] 0.9238235 1.070771 1.070771 0.9238235 0.9238235 0.9238235 1.070771 #> [3,] 0.8819171 1.105542 1.105542 0.8819171 0.8819171 0.8819171 1.105542 #>        [,277]    [,278]    [,279]   [,280]   [,281]    [,282]    [,283] #> [1,] 1.086750 0.9049715 0.9049715 1.086750 1.086750 0.9049715 0.9049715 #> [2,] 1.070771 0.9238235 0.9238235 1.070771 1.070771 0.9238235 0.9238235 #> [3,] 1.105542 0.8819171 0.8819171 1.105542 1.105542 0.8819171 0.8819171 #>         [,284]    [,285]   [,286]    [,287] #> [1,] 0.9049715 0.9049715 1.086750 0.9049715 #> [2,] 0.9238235 0.9238235 1.070771 0.9238235 #> [3,] 0.8819171 0.8819171 1.105542 0.8819171 #>  #> , , 3 #>  #>           [,1]      [,2]      [,3]      [,4]     [,5]      [,6]      [,7] #> [1,] 0.9937936 0.9937936 0.9937936 0.9937936 1.006168 0.9937936 0.9937936 #> [2,] 0.7717295 0.7717295 0.7717295 0.7717295 1.185088 0.7717295 0.7717295 #> [3,] 0.7856655 0.7856655 0.7856655 0.7856655 1.175895 0.7856655 0.7856655 #>           [,8]     [,9]     [,10]     [,11]     [,12]     [,13]     [,14] #> [1,] 0.9937936 1.006168 0.9937936 0.9937936 0.9937936 0.9937936 0.9937936 #> [2,] 0.7717295 1.185088 0.7717295 0.7717295 0.7717295 0.7717295 0.7717295 #> [3,] 0.7856655 1.175895 0.7856655 0.7856655 0.7856655 0.7856655 0.7856655 #>          [,15]     [,16]    [,17]    [,18]     [,19]     [,20]     [,21] #> [1,] 0.9937936 0.9937936 1.006168 1.006168 0.9937936 0.9937936 0.9937936 #> [2,] 0.7717295 0.7717295 1.185088 1.185088 0.7717295 0.7717295 0.7717295 #> [3,] 0.7856655 0.7856655 1.175895 1.175895 0.7856655 0.7856655 0.7856655 #>          [,22]     [,23]     [,24]     [,25]     [,26]    [,27]    [,28] #> [1,] 0.9937936 0.9937936 0.9937936 0.9937936 0.9937936 1.006168 1.006168 #> [2,] 0.7717295 0.7717295 0.7717295 0.7717295 0.7717295 1.185088 1.185088 #> [3,] 0.7856655 0.7856655 0.7856655 0.7856655 0.7856655 1.175895 1.175895 #>          [,29]     [,30]    [,31]    [,32]     [,33]     [,34]    [,35] #> [1,] 0.9937936 0.9937936 1.006168 1.006168 0.9937936 0.9937936 1.006168 #> [2,] 0.7717295 0.7717295 1.185088 1.185088 0.7717295 0.7717295 1.185088 #> [3,] 0.7856655 0.7856655 1.175895 1.175895 0.7856655 0.7856655 1.175895 #>          [,36]     [,37]    [,38]     [,39]    [,40]     [,41]    [,42] #> [1,] 0.9937936 0.9937936 1.006168 0.9937936 1.006168 0.9937936 1.006168 #> [2,] 0.7717295 0.7717295 1.185088 0.7717295 1.185088 0.7717295 1.185088 #> [3,] 0.7856655 0.7856655 1.175895 0.7856655 1.175895 0.7856655 1.175895 #>          [,43]    [,44]    [,45]     [,46]    [,47]    [,48]    [,49]     [,50] #> [1,] 0.9937936 1.006168 1.006168 0.9937936 1.006168 1.006168 1.006168 0.9937936 #> [2,] 0.7717295 1.185088 1.185088 0.7717295 1.185088 1.185088 1.185088 0.7717295 #> [3,] 0.7856655 1.175895 1.175895 0.7856655 1.175895 1.175895 1.175895 0.7856655 #>          [,51]    [,52]     [,53]     [,54]    [,55]     [,56]     [,57] #> [1,] 0.9937936 1.006168 0.9937936 0.9937936 1.006168 0.9937936 0.9937936 #> [2,] 0.7717295 1.185088 0.7717295 0.7717295 1.185088 0.7717295 0.7717295 #> [3,] 0.7856655 1.175895 0.7856655 0.7856655 1.175895 0.7856655 0.7856655 #>         [,58]     [,59]     [,60]    [,61]    [,62]    [,63]    [,64]     [,65] #> [1,] 1.006168 0.9937936 0.9937936 1.006168 1.006168 1.006168 1.006168 0.9937936 #> [2,] 1.185088 0.7717295 0.7717295 1.185088 1.185088 1.185088 1.185088 0.7717295 #> [3,] 1.175895 0.7856655 0.7856655 1.175895 1.175895 1.175895 1.175895 0.7856655 #>          [,66]     [,67]     [,68]    [,69]    [,70]     [,71]    [,72] #> [1,] 0.9937936 0.9937936 0.9937936 1.006168 1.006168 0.9937936 1.006168 #> [2,] 0.7717295 0.7717295 0.7717295 1.185088 1.185088 0.7717295 1.185088 #> [3,] 0.7856655 0.7856655 0.7856655 1.175895 1.175895 0.7856655 1.175895 #>         [,73]     [,74]     [,75]     [,76]     [,77]     [,78]    [,79] #> [1,] 1.006168 0.9937936 0.9937936 0.9937936 0.9937936 0.9937936 1.006168 #> [2,] 1.185088 0.7717295 0.7717295 0.7717295 0.7717295 0.7717295 1.185088 #> [3,] 1.175895 0.7856655 0.7856655 0.7856655 0.7856655 0.7856655 1.175895 #>         [,80]    [,81]     [,82]     [,83]    [,84]     [,85]     [,86] #> [1,] 1.006168 1.006168 0.9937936 0.9937936 1.006168 0.9937936 0.9937936 #> [2,] 1.185088 1.185088 0.7717295 0.7717295 1.185088 0.7717295 0.7717295 #> [3,] 1.175895 1.175895 0.7856655 0.7856655 1.175895 0.7856655 0.7856655 #>          [,87]     [,88]     [,89]     [,90]    [,91]     [,92]     [,93] #> [1,] 0.9937936 0.9937936 0.9937936 0.9937936 1.006168 0.9937936 0.9937936 #> [2,] 0.7717295 0.7717295 0.7717295 0.7717295 1.185088 0.7717295 0.7717295 #> [3,] 0.7856655 0.7856655 0.7856655 0.7856655 1.175895 0.7856655 0.7856655 #>          [,94]    [,95]    [,96]    [,97]     [,98]     [,99]    [,100] #> [1,] 0.9937936 1.006168 1.006168 1.006168 0.9937936 0.9937936 0.9937936 #> [2,] 0.7717295 1.185088 1.185088 1.185088 0.7717295 0.7717295 0.7717295 #> [3,] 0.7856655 1.175895 1.175895 1.175895 0.7856655 0.7856655 0.7856655 #>        [,101]   [,102]   [,103]   [,104]   [,105]    [,106]    [,107]    [,108] #> [1,] 1.006168 1.006168 1.006168 1.006168 1.006168 0.9937936 0.9937936 0.9937936 #> [2,] 1.185088 1.185088 1.185088 1.185088 1.185088 0.7717295 0.7717295 0.7717295 #> [3,] 1.175895 1.175895 1.175895 1.175895 1.175895 0.7856655 0.7856655 0.7856655 #>         [,109]   [,110]   [,111]   [,112]    [,113]   [,114]    [,115] #> [1,] 0.9937936 1.006168 1.006168 1.006168 0.9937936 1.006168 0.9937936 #> [2,] 0.7717295 1.185088 1.185088 1.185088 0.7717295 1.185088 0.7717295 #> [3,] 0.7856655 1.175895 1.175895 1.175895 0.7856655 1.175895 0.7856655 #>         [,116]   [,117]    [,118]    [,119]    [,120]    [,121]    [,122] #> [1,] 0.9937936 1.006168 0.9937936 0.9937936 0.9937936 0.9937936 0.9937936 #> [2,] 0.7717295 1.185088 0.7717295 0.7717295 0.7717295 0.7717295 0.7717295 #> [3,] 0.7856655 1.175895 0.7856655 0.7856655 0.7856655 0.7856655 0.7856655 #>        [,123]    [,124]   [,125]    [,126]    [,127]    [,128]   [,129] #> [1,] 1.006168 0.9937936 1.006168 0.9937936 0.9937936 0.9937936 1.006168 #> [2,] 1.185088 0.7717295 1.185088 0.7717295 0.7717295 0.7717295 1.185088 #> [3,] 1.175895 0.7856655 1.175895 0.7856655 0.7856655 0.7856655 1.175895 #>         [,130]    [,131]    [,132]    [,133]   [,134]    [,135]    [,136] #> [1,] 0.9937936 0.9937936 0.9937936 0.9937936 1.006168 0.9937936 0.9937936 #> [2,] 0.7717295 0.7717295 0.7717295 0.7717295 1.185088 0.7717295 0.7717295 #> [3,] 0.7856655 0.7856655 0.7856655 0.7856655 1.175895 0.7856655 0.7856655 #>        [,137]    [,138]   [,139]    [,140]   [,141]    [,142]    [,143] #> [1,] 1.006168 0.9937936 1.006168 0.9937936 1.006168 0.9937936 0.9937936 #> [2,] 1.185088 0.7717295 1.185088 0.7717295 1.185088 0.7717295 0.7717295 #> [3,] 1.175895 0.7856655 1.175895 0.7856655 1.175895 0.7856655 0.7856655 #>         [,144]    [,145]    [,146]   [,147]   [,148]   [,149]    [,150] #> [1,] 0.9937936 0.9937936 0.9937936 1.006168 1.006168 1.006168 0.9937936 #> [2,] 0.7717295 0.7717295 0.7717295 1.185088 1.185088 1.185088 0.7717295 #> [3,] 0.7856655 0.7856655 0.7856655 1.175895 1.175895 1.175895 0.7856655 #>         [,151]   [,152]   [,153]    [,154]   [,155]    [,156]    [,157] #> [1,] 0.9937936 1.006168 1.006168 0.9937936 1.006168 0.9937936 0.9937936 #> [2,] 0.7717295 1.185088 1.185088 0.7717295 1.185088 0.7717295 0.7717295 #> [3,] 0.7856655 1.175895 1.175895 0.7856655 1.175895 0.7856655 0.7856655 #>         [,158]   [,159]    [,160]    [,161]   [,162]    [,163]   [,164] #> [1,] 0.9937936 1.006168 0.9937936 0.9937936 1.006168 0.9937936 1.006168 #> [2,] 0.7717295 1.185088 0.7717295 0.7717295 1.185088 0.7717295 1.185088 #> [3,] 0.7856655 1.175895 0.7856655 0.7856655 1.175895 0.7856655 1.175895 #>        [,165]   [,166]   [,167]   [,168]   [,169]   [,170]    [,171]    [,172] #> [1,] 1.006168 1.006168 1.006168 1.006168 1.006168 1.006168 0.9937936 0.9937936 #> [2,] 1.185088 1.185088 1.185088 1.185088 1.185088 1.185088 0.7717295 0.7717295 #> [3,] 1.175895 1.175895 1.175895 1.175895 1.175895 1.175895 0.7856655 0.7856655 #>         [,173]    [,174]    [,175]   [,176]    [,177]    [,178]    [,179] #> [1,] 0.9937936 0.9937936 0.9937936 1.006168 0.9937936 0.9937936 0.9937936 #> [2,] 0.7717295 0.7717295 0.7717295 1.185088 0.7717295 0.7717295 0.7717295 #> [3,] 0.7856655 0.7856655 0.7856655 1.175895 0.7856655 0.7856655 0.7856655 #>         [,180]    [,181]   [,182]   [,183]    [,184]   [,185]    [,186] #> [1,] 0.9937936 0.9937936 1.006168 1.006168 0.9937936 1.006168 0.9937936 #> [2,] 0.7717295 0.7717295 1.185088 1.185088 0.7717295 1.185088 0.7717295 #> [3,] 0.7856655 0.7856655 1.175895 1.175895 0.7856655 1.175895 0.7856655 #>        [,187]    [,188]   [,189]   [,190]    [,191]    [,192]    [,193] #> [1,] 1.006168 0.9937936 1.006168 1.006168 0.9937936 0.9937936 0.9937936 #> [2,] 1.185088 0.7717295 1.185088 1.185088 0.7717295 0.7717295 0.7717295 #> [3,] 1.175895 0.7856655 1.175895 1.175895 0.7856655 0.7856655 0.7856655 #>        [,194]    [,195]    [,196]    [,197]    [,198]   [,199]   [,200] #> [1,] 1.006168 0.9937936 0.9937936 0.9937936 0.9937936 1.006168 1.006168 #> [2,] 1.185088 0.7717295 0.7717295 0.7717295 0.7717295 1.185088 1.185088 #> [3,] 1.175895 0.7856655 0.7856655 0.7856655 0.7856655 1.175895 1.175895 #>        [,201]    [,202]    [,203]   [,204]   [,205]   [,206]   [,207]   [,208] #> [1,] 1.006168 0.9937936 0.9937936 1.006168 1.006168 1.006168 1.006168 1.006168 #> [2,] 1.185088 0.7717295 0.7717295 1.185088 1.185088 1.185088 1.185088 1.185088 #> [3,] 1.175895 0.7856655 0.7856655 1.175895 1.175895 1.175895 1.175895 1.175895 #>         [,209]    [,210]    [,211]   [,212]   [,213]    [,214]   [,215] #> [1,] 0.9937936 0.9937936 0.9937936 1.006168 1.006168 0.9937936 1.006168 #> [2,] 0.7717295 0.7717295 0.7717295 1.185088 1.185088 0.7717295 1.185088 #> [3,] 0.7856655 0.7856655 0.7856655 1.175895 1.175895 0.7856655 1.175895 #>         [,216]   [,217]    [,218]    [,219]   [,220]   [,221]   [,222] #> [1,] 0.9937936 1.006168 0.9937936 0.9937936 1.006168 1.006168 1.006168 #> [2,] 0.7717295 1.185088 0.7717295 0.7717295 1.185088 1.185088 1.185088 #> [3,] 0.7856655 1.175895 0.7856655 0.7856655 1.175895 1.175895 1.175895 #>         [,223]   [,224]    [,225]   [,226]    [,227]    [,228]   [,229] #> [1,] 0.9937936 1.006168 0.9937936 1.006168 0.9937936 0.9937936 1.006168 #> [2,] 0.7717295 1.185088 0.7717295 1.185088 0.7717295 0.7717295 1.185088 #> [3,] 0.7856655 1.175895 0.7856655 1.175895 0.7856655 0.7856655 1.175895 #>         [,230]    [,231]   [,232]    [,233]    [,234]    [,235]   [,236] #> [1,] 0.9937936 0.9937936 1.006168 0.9937936 0.9937936 0.9937936 1.006168 #> [2,] 0.7717295 0.7717295 1.185088 0.7717295 0.7717295 0.7717295 1.185088 #> [3,] 0.7856655 0.7856655 1.175895 0.7856655 0.7856655 0.7856655 1.175895 #>        [,237]    [,238]   [,239]    [,240]    [,241]   [,242]    [,243] #> [1,] 1.006168 0.9937936 1.006168 0.9937936 0.9937936 1.006168 0.9937936 #> [2,] 1.185088 0.7717295 1.185088 0.7717295 0.7717295 1.185088 0.7717295 #> [3,] 1.175895 0.7856655 1.175895 0.7856655 0.7856655 1.175895 0.7856655 #>         [,244]    [,245]    [,246]    [,247]    [,248]    [,249]    [,250] #> [1,] 0.9937936 0.9937936 0.9937936 0.9937936 0.9937936 0.9937936 0.9937936 #> [2,] 0.7717295 0.7717295 0.7717295 0.7717295 0.7717295 0.7717295 0.7717295 #> [3,] 0.7856655 0.7856655 0.7856655 0.7856655 0.7856655 0.7856655 0.7856655 #>         [,251]   [,252]    [,253]    [,254]   [,255]    [,256]    [,257] #> [1,] 0.9937936 1.006168 0.9937936 0.9937936 1.006168 0.9937936 0.9937936 #> [2,] 0.7717295 1.185088 0.7717295 0.7717295 1.185088 0.7717295 0.7717295 #> [3,] 0.7856655 1.175895 0.7856655 0.7856655 1.175895 0.7856655 0.7856655 #>         [,258]   [,259]    [,260]    [,261]   [,262]   [,263]    [,264] #> [1,] 0.9937936 1.006168 0.9937936 0.9937936 1.006168 1.006168 0.9937936 #> [2,] 0.7717295 1.185088 0.7717295 0.7717295 1.185088 1.185088 0.7717295 #> [3,] 0.7856655 1.175895 0.7856655 0.7856655 1.175895 1.175895 0.7856655 #>         [,265]   [,266]    [,267]   [,268]    [,269]    [,270]    [,271] #> [1,] 0.9937936 1.006168 0.9937936 1.006168 0.9937936 0.9937936 0.9937936 #> [2,] 0.7717295 1.185088 0.7717295 1.185088 0.7717295 0.7717295 0.7717295 #> [3,] 0.7856655 1.175895 0.7856655 1.175895 0.7856655 0.7856655 0.7856655 #>        [,272]   [,273]   [,274]    [,275]    [,276]   [,277]    [,278] #> [1,] 1.006168 1.006168 1.006168 0.9937936 0.9937936 1.006168 0.9937936 #> [2,] 1.185088 1.185088 1.185088 0.7717295 0.7717295 1.185088 0.7717295 #> [3,] 1.175895 1.175895 1.175895 0.7856655 0.7856655 1.175895 0.7856655 #>         [,279]    [,280]   [,281]   [,282]    [,283]    [,284]    [,285] #> [1,] 0.9937936 0.9937936 1.006168 1.006168 0.9937936 0.9937936 0.9937936 #> [2,] 0.7717295 0.7717295 1.185088 1.185088 0.7717295 0.7717295 0.7717295 #> [3,] 0.7856655 0.7856655 1.175895 1.175895 0.7856655 0.7856655 0.7856655 #>         [,286]   [,287] #> [1,] 0.9937936 1.006168 #> [2,] 0.7717295 1.185088 #> [3,] 0.7856655 1.175895 #>  #> , , 4 #>  #>           [,1]     [,2]      [,3]     [,4]     [,5]     [,6]      [,7] #> [1,] 0.9198572 1.074180 0.9198572 1.074180 1.074180 1.074180 0.9198572 #> [2,] 0.5882468 1.286066 0.5882468 1.286066 1.286066 1.286066 0.5882468 #> [3,] 0.5826194 1.288625 0.5826194 1.288625 1.288625 1.288625 0.5826194 #>           [,8]      [,9]     [,10]     [,11]    [,12]     [,13]     [,14] #> [1,] 0.9198572 0.9198572 0.9198572 0.9198572 1.074180 0.9198572 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 0.5882468 1.286066 0.5882468 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 0.5826194 1.288625 0.5826194 0.5826194 #>          [,15]    [,16]    [,17]     [,18]     [,19]    [,20]     [,21] #> [1,] 0.9198572 1.074180 1.074180 0.9198572 0.9198572 1.074180 0.9198572 #> [2,] 0.5882468 1.286066 1.286066 0.5882468 0.5882468 1.286066 0.5882468 #> [3,] 0.5826194 1.288625 1.288625 0.5826194 0.5826194 1.288625 0.5826194 #>          [,22]     [,23]     [,24]    [,25]    [,26]     [,27]     [,28] #> [1,] 0.9198572 0.9198572 0.9198572 1.074180 1.074180 0.9198572 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 1.286066 1.286066 0.5882468 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 1.288625 1.288625 0.5826194 0.5826194 #>          [,29]     [,30]    [,31]     [,32]    [,33]     [,34]     [,35] #> [1,] 0.9198572 0.9198572 1.074180 0.9198572 1.074180 0.9198572 0.9198572 #> [2,] 0.5882468 0.5882468 1.286066 0.5882468 1.286066 0.5882468 0.5882468 #> [3,] 0.5826194 0.5826194 1.288625 0.5826194 1.288625 0.5826194 0.5826194 #>         [,36]    [,37]     [,38]     [,39]    [,40]     [,41]    [,42] #> [1,] 1.074180 1.074180 0.9198572 0.9198572 1.074180 0.9198572 1.074180 #> [2,] 1.286066 1.286066 0.5882468 0.5882468 1.286066 0.5882468 1.286066 #> [3,] 1.288625 1.288625 0.5826194 0.5826194 1.288625 0.5826194 1.288625 #>          [,43]     [,44]     [,45]     [,46]     [,47]     [,48]     [,49] #> [1,] 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 #>          [,50]     [,51]     [,52]     [,53]     [,54]    [,55]     [,56] #> [1,] 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 1.074180 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 1.286066 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 1.288625 0.5826194 #>         [,57]     [,58]     [,59]     [,60]     [,61]    [,62]    [,63] #> [1,] 1.074180 0.9198572 0.9198572 0.9198572 0.9198572 1.074180 1.074180 #> [2,] 1.286066 0.5882468 0.5882468 0.5882468 0.5882468 1.286066 1.286066 #> [3,] 1.288625 0.5826194 0.5826194 0.5826194 0.5826194 1.288625 1.288625 #>          [,64]     [,65]     [,66]     [,67]     [,68]     [,69]     [,70] #> [1,] 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 #>          [,71]     [,72]    [,73]    [,74]    [,75]    [,76]     [,77] #> [1,] 0.9198572 0.9198572 1.074180 1.074180 1.074180 1.074180 0.9198572 #> [2,] 0.5882468 0.5882468 1.286066 1.286066 1.286066 1.286066 0.5882468 #> [3,] 0.5826194 0.5826194 1.288625 1.288625 1.288625 1.288625 0.5826194 #>          [,78]     [,79]     [,80]    [,81]    [,82]     [,83]    [,84] #> [1,] 0.9198572 0.9198572 0.9198572 1.074180 1.074180 0.9198572 1.074180 #> [2,] 0.5882468 0.5882468 0.5882468 1.286066 1.286066 0.5882468 1.286066 #> [3,] 0.5826194 0.5826194 0.5826194 1.288625 1.288625 0.5826194 1.288625 #>          [,85]     [,86]     [,87]     [,88]     [,89]     [,90]     [,91] #> [1,] 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 #>          [,92]     [,93]     [,94]     [,95]     [,96]     [,97]     [,98] #> [1,] 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 #>         [,99]    [,100]   [,101]    [,102]    [,103]    [,104]    [,105] #> [1,] 1.074180 0.9198572 1.074180 0.9198572 0.9198572 0.9198572 0.9198572 #> [2,] 1.286066 0.5882468 1.286066 0.5882468 0.5882468 0.5882468 0.5882468 #> [3,] 1.288625 0.5826194 1.288625 0.5826194 0.5826194 0.5826194 0.5826194 #>         [,106]    [,107]   [,108]    [,109]   [,110]    [,111]    [,112] #> [1,] 0.9198572 0.9198572 1.074180 0.9198572 1.074180 0.9198572 0.9198572 #> [2,] 0.5882468 0.5882468 1.286066 0.5882468 1.286066 0.5882468 0.5882468 #> [3,] 0.5826194 0.5826194 1.288625 0.5826194 1.288625 0.5826194 0.5826194 #>        [,113]    [,114]    [,115]    [,116]    [,117]   [,118]    [,119] #> [1,] 1.074180 0.9198572 0.9198572 0.9198572 0.9198572 1.074180 0.9198572 #> [2,] 1.286066 0.5882468 0.5882468 0.5882468 0.5882468 1.286066 0.5882468 #> [3,] 1.288625 0.5826194 0.5826194 0.5826194 0.5826194 1.288625 0.5826194 #>         [,120]   [,121]    [,122]    [,123]    [,124]    [,125]   [,126] #> [1,] 0.9198572 1.074180 0.9198572 0.9198572 0.9198572 0.9198572 1.074180 #> [2,] 0.5882468 1.286066 0.5882468 0.5882468 0.5882468 0.5882468 1.286066 #> [3,] 0.5826194 1.288625 0.5826194 0.5826194 0.5826194 0.5826194 1.288625 #>         [,127]    [,128]    [,129]   [,130]    [,131]    [,132]    [,133] #> [1,] 0.9198572 0.9198572 0.9198572 1.074180 0.9198572 0.9198572 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 1.286066 0.5882468 0.5882468 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 1.288625 0.5826194 0.5826194 0.5826194 #>         [,134]    [,135]    [,136]    [,137]    [,138]   [,139]    [,140] #> [1,] 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 1.074180 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 1.286066 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 1.288625 0.5826194 #>        [,141]    [,142]    [,143]    [,144]   [,145]   [,146]   [,147] #> [1,] 1.074180 0.9198572 0.9198572 0.9198572 1.074180 1.074180 1.074180 #> [2,] 1.286066 0.5882468 0.5882468 0.5882468 1.286066 1.286066 1.286066 #> [3,] 1.288625 0.5826194 0.5826194 0.5826194 1.288625 1.288625 1.288625 #>         [,148]    [,149]    [,150]    [,151]    [,152]    [,153]    [,154] #> [1,] 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 #>         [,155]   [,156]    [,157]    [,158]   [,159]    [,160]   [,161] #> [1,] 0.9198572 1.074180 0.9198572 0.9198572 1.074180 0.9198572 1.074180 #> [2,] 0.5882468 1.286066 0.5882468 0.5882468 1.286066 0.5882468 1.286066 #> [3,] 0.5826194 1.288625 0.5826194 0.5826194 1.288625 0.5826194 1.288625 #>         [,162]    [,163]    [,164]    [,165]    [,166]   [,167]    [,168] #> [1,] 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 1.074180 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 1.286066 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 1.288625 0.5826194 #>         [,169]    [,170]    [,171]    [,172]    [,173]    [,174]    [,175] #> [1,] 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 #>         [,176]    [,177]    [,178]    [,179]    [,180]    [,181]   [,182] #> [1,] 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 1.074180 #> [2,] 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 1.286066 #> [3,] 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 1.288625 #>         [,183]    [,184]    [,185]   [,186]   [,187]    [,188]    [,189] #> [1,] 0.9198572 0.9198572 0.9198572 1.074180 1.074180 0.9198572 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 1.286066 1.286066 0.5882468 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 1.288625 1.288625 0.5826194 0.5826194 #>         [,190]    [,191]    [,192]   [,193]    [,194]    [,195]   [,196] #> [1,] 0.9198572 0.9198572 0.9198572 1.074180 0.9198572 0.9198572 1.074180 #> [2,] 0.5882468 0.5882468 0.5882468 1.286066 0.5882468 0.5882468 1.286066 #> [3,] 0.5826194 0.5826194 0.5826194 1.288625 0.5826194 0.5826194 1.288625 #>         [,197]    [,198]    [,199]   [,200]    [,201]    [,202]    [,203] #> [1,] 0.9198572 0.9198572 0.9198572 1.074180 0.9198572 0.9198572 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 1.286066 0.5882468 0.5882468 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 1.288625 0.5826194 0.5826194 0.5826194 #>         [,204]    [,205]   [,206]    [,207]   [,208]   [,209]    [,210] #> [1,] 0.9198572 0.9198572 1.074180 0.9198572 1.074180 1.074180 0.9198572 #> [2,] 0.5882468 0.5882468 1.286066 0.5882468 1.286066 1.286066 0.5882468 #> [3,] 0.5826194 0.5826194 1.288625 0.5826194 1.288625 1.288625 0.5826194 #>         [,211]   [,212]    [,213]   [,214]    [,215]   [,216]   [,217] #> [1,] 0.9198572 1.074180 0.9198572 1.074180 0.9198572 1.074180 1.074180 #> [2,] 0.5882468 1.286066 0.5882468 1.286066 0.5882468 1.286066 1.286066 #> [3,] 0.5826194 1.288625 0.5826194 1.288625 0.5826194 1.288625 1.288625 #>         [,218]    [,219]   [,220]    [,221]    [,222]    [,223]    [,224] #> [1,] 0.9198572 0.9198572 1.074180 0.9198572 0.9198572 0.9198572 0.9198572 #> [2,] 0.5882468 0.5882468 1.286066 0.5882468 0.5882468 0.5882468 0.5882468 #> [3,] 0.5826194 0.5826194 1.288625 0.5826194 0.5826194 0.5826194 0.5826194 #>         [,225]    [,226]    [,227]    [,228]    [,229]    [,230]    [,231] #> [1,] 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 #>        [,232]   [,233]    [,234]    [,235]   [,236]    [,237]    [,238] #> [1,] 1.074180 1.074180 0.9198572 0.9198572 1.074180 0.9198572 0.9198572 #> [2,] 1.286066 1.286066 0.5882468 0.5882468 1.286066 0.5882468 0.5882468 #> [3,] 1.288625 1.288625 0.5826194 0.5826194 1.288625 0.5826194 0.5826194 #>         [,239]    [,240]    [,241]    [,242]    [,243]    [,244]    [,245] #> [1,] 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 #>        [,246]   [,247]    [,248]    [,249]   [,250]    [,251]    [,252] #> [1,] 1.074180 1.074180 0.9198572 0.9198572 1.074180 0.9198572 0.9198572 #> [2,] 1.286066 1.286066 0.5882468 0.5882468 1.286066 0.5882468 0.5882468 #> [3,] 1.288625 1.288625 0.5826194 0.5826194 1.288625 0.5826194 0.5826194 #>         [,253]    [,254]    [,255]    [,256]    [,257]    [,258]    [,259] #> [1,] 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 #>         [,260]    [,261]    [,262]    [,263]   [,264]    [,265]    [,266] #> [1,] 0.9198572 0.9198572 0.9198572 0.9198572 1.074180 0.9198572 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 0.5882468 1.286066 0.5882468 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 0.5826194 1.288625 0.5826194 0.5826194 #>         [,267]    [,268]    [,269]    [,270]   [,271]   [,272]    [,273] #> [1,] 0.9198572 0.9198572 0.9198572 0.9198572 1.074180 1.074180 0.9198572 #> [2,] 0.5882468 0.5882468 0.5882468 0.5882468 1.286066 1.286066 0.5882468 #> [3,] 0.5826194 0.5826194 0.5826194 0.5826194 1.288625 1.288625 0.5826194 #>        [,274]    [,275]    [,276]    [,277]    [,278]    [,279]    [,280] #> [1,] 1.074180 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 0.9198572 #> [2,] 1.286066 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 0.5882468 #> [3,] 1.288625 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 0.5826194 #>        [,281]   [,282]    [,283]   [,284]   [,285]    [,286]    [,287] #> [1,] 1.074180 1.074180 0.9198572 1.074180 1.074180 0.9198572 0.9198572 #> [2,] 1.286066 1.286066 0.5882468 1.286066 1.286066 0.5882468 0.5882468 #> [3,] 1.288625 1.288625 0.5826194 1.288625 1.288625 0.5826194 0.5826194 #>  #> , , 5 #>  #>          [,1]      [,2]     [,3]      [,4]      [,5]      [,6]     [,7] #> [1,] 1.004354 0.9956269 1.004354 0.9956269 0.9956269 0.9956269 1.004354 #> [2,] 0.527226 1.3122624 0.527226 1.3122624 1.3122624 1.3122624 0.527226 #> [3,] 0.541478 1.3064462 0.541478 1.3064462 1.3064462 1.3064462 0.541478 #>          [,8]     [,9]    [,10]    [,11]    [,12]     [,13]     [,14]    [,15] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 0.9956269 0.9956269 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 1.3122624 1.3122624 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 1.3064462 1.3064462 0.541478 #>         [,16]    [,17]    [,18]    [,19]    [,20]    [,21]    [,22]    [,23] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 #>         [,24]    [,25]    [,26]    [,27]    [,28]    [,29]    [,30]    [,31] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 #>         [,32]     [,33]    [,34]    [,35]     [,36]    [,37]    [,38]    [,39] #> [1,] 1.004354 0.9956269 1.004354 1.004354 0.9956269 1.004354 1.004354 1.004354 #> [2,] 0.527226 1.3122624 0.527226 0.527226 1.3122624 0.527226 0.527226 0.527226 #> [3,] 0.541478 1.3064462 0.541478 0.541478 1.3064462 0.541478 0.541478 0.541478 #>          [,40]    [,41]    [,42]    [,43]    [,44]    [,45]     [,46]    [,47] #> [1,] 0.9956269 1.004354 1.004354 1.004354 1.004354 1.004354 0.9956269 1.004354 #> [2,] 1.3122624 0.527226 0.527226 0.527226 0.527226 0.527226 1.3122624 0.527226 #> [3,] 1.3064462 0.541478 0.541478 0.541478 0.541478 0.541478 1.3064462 0.541478 #>          [,48]    [,49]     [,50]    [,51]    [,52]    [,53]    [,54]    [,55] #> [1,] 0.9956269 1.004354 0.9956269 1.004354 1.004354 1.004354 1.004354 1.004354 #> [2,] 1.3122624 0.527226 1.3122624 0.527226 0.527226 0.527226 0.527226 0.527226 #> [3,] 1.3064462 0.541478 1.3064462 0.541478 0.541478 0.541478 0.541478 0.541478 #>         [,56]    [,57]    [,58]    [,59]    [,60]    [,61]    [,62]    [,63] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 #>         [,64]    [,65]    [,66]    [,67]    [,68]    [,69]    [,70]    [,71] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 #>         [,72]    [,73]    [,74]    [,75]    [,76]    [,77]     [,78]    [,79] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 0.9956269 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 1.3122624 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 1.3064462 0.541478 #>         [,80]    [,81]    [,82]    [,83]    [,84]    [,85]    [,86]    [,87] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 #>         [,88]    [,89]     [,90]    [,91]    [,92]     [,93]    [,94]    [,95] #> [1,] 1.004354 1.004354 0.9956269 1.004354 1.004354 0.9956269 1.004354 1.004354 #> [2,] 0.527226 0.527226 1.3122624 0.527226 0.527226 1.3122624 0.527226 0.527226 #> [3,] 0.541478 0.541478 1.3064462 0.541478 0.541478 1.3064462 0.541478 0.541478 #>         [,96]    [,97]    [,98]     [,99]   [,100]    [,101]    [,102]   [,103] #> [1,] 1.004354 1.004354 1.004354 0.9956269 1.004354 0.9956269 0.9956269 1.004354 #> [2,] 0.527226 0.527226 0.527226 1.3122624 0.527226 1.3122624 1.3122624 0.527226 #> [3,] 0.541478 0.541478 0.541478 1.3064462 0.541478 1.3064462 1.3064462 0.541478 #>        [,104]   [,105]   [,106]   [,107]   [,108]   [,109]   [,110]   [,111] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 #>        [,112]   [,113]   [,114]   [,115]   [,116]   [,117]   [,118]   [,119] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 #>        [,120]    [,121]   [,122]   [,123]   [,124]   [,125]   [,126]   [,127] #> [1,] 1.004354 0.9956269 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 #> [2,] 0.527226 1.3122624 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 #> [3,] 0.541478 1.3064462 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 #>        [,128]   [,129]   [,130]   [,131]   [,132]   [,133]   [,134]   [,135] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 #>        [,136]   [,137]   [,138]   [,139]   [,140]    [,141]   [,142]   [,143] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 0.9956269 1.004354 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 1.3122624 0.527226 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 1.3064462 0.541478 0.541478 #>        [,144]   [,145]   [,146]    [,147]   [,148]    [,149]   [,150]   [,151] #> [1,] 1.004354 1.004354 1.004354 0.9956269 1.004354 0.9956269 1.004354 1.004354 #> [2,] 0.527226 0.527226 0.527226 1.3122624 0.527226 1.3122624 0.527226 0.527226 #> [3,] 0.541478 0.541478 0.541478 1.3064462 0.541478 1.3064462 0.541478 0.541478 #>        [,152]   [,153]   [,154]   [,155]    [,156]   [,157]   [,158]    [,159] #> [1,] 1.004354 1.004354 1.004354 1.004354 0.9956269 1.004354 1.004354 0.9956269 #> [2,] 0.527226 0.527226 0.527226 0.527226 1.3122624 0.527226 0.527226 1.3122624 #> [3,] 0.541478 0.541478 0.541478 0.541478 1.3064462 0.541478 0.541478 1.3064462 #>        [,160]   [,161]   [,162]   [,163]   [,164]    [,165]   [,166]   [,167] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 0.9956269 1.004354 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 1.3122624 0.527226 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 1.3064462 0.541478 0.541478 #>        [,168]   [,169]   [,170]   [,171]   [,172]   [,173]   [,174]   [,175] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 #>         [,176]   [,177]    [,178]    [,179]   [,180]   [,181]   [,182]   [,183] #> [1,] 0.9956269 1.004354 0.9956269 0.9956269 1.004354 1.004354 1.004354 1.004354 #> [2,] 1.3122624 0.527226 1.3122624 1.3122624 0.527226 0.527226 0.527226 0.527226 #> [3,] 1.3064462 0.541478 1.3064462 1.3064462 0.541478 0.541478 0.541478 0.541478 #>         [,184]   [,185]   [,186]   [,187]   [,188]   [,189]   [,190]    [,191] #> [1,] 0.9956269 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 0.9956269 #> [2,] 1.3122624 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 1.3122624 #> [3,] 1.3064462 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 1.3064462 #>         [,192]   [,193]   [,194]   [,195]   [,196]   [,197]   [,198]   [,199] #> [1,] 0.9956269 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 #> [2,] 1.3122624 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 #> [3,] 1.3064462 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 #>        [,200]   [,201]   [,202]   [,203]   [,204]    [,205]    [,206]   [,207] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 0.9956269 0.9956269 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 1.3122624 1.3122624 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 1.3064462 1.3064462 0.541478 #>         [,208]   [,209]   [,210]   [,211]   [,212]   [,213]   [,214]    [,215] #> [1,] 0.9956269 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 0.9956269 #> [2,] 1.3122624 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 1.3122624 #> [3,] 1.3064462 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 1.3064462 #>        [,216]    [,217]   [,218]   [,219]   [,220]   [,221]   [,222]    [,223] #> [1,] 1.004354 0.9956269 1.004354 1.004354 1.004354 1.004354 1.004354 0.9956269 #> [2,] 0.527226 1.3122624 0.527226 0.527226 0.527226 0.527226 0.527226 1.3122624 #> [3,] 0.541478 1.3064462 0.541478 0.541478 0.541478 0.541478 0.541478 1.3064462 #>        [,224]   [,225]   [,226]   [,227]   [,228]   [,229]   [,230]    [,231] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 0.9956269 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 1.3122624 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 1.3064462 #>        [,232]    [,233]    [,234]   [,235]    [,236]   [,237]   [,238]   [,239] #> [1,] 1.004354 0.9956269 0.9956269 1.004354 0.9956269 1.004354 1.004354 1.004354 #> [2,] 0.527226 1.3122624 1.3122624 0.527226 1.3122624 0.527226 0.527226 0.527226 #> [3,] 0.541478 1.3064462 1.3064462 0.541478 1.3064462 0.541478 0.541478 0.541478 #>        [,240]   [,241]   [,242]   [,243]   [,244]   [,245]   [,246]   [,247] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 #>        [,248]   [,249]   [,250]   [,251]    [,252]   [,253]   [,254]   [,255] #> [1,] 1.004354 1.004354 1.004354 1.004354 0.9956269 1.004354 1.004354 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 1.3122624 0.527226 0.527226 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 1.3064462 0.541478 0.541478 0.541478 #>        [,256]   [,257]   [,258]   [,259]   [,260]   [,261]   [,262]   [,263] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 #>        [,264]   [,265]   [,266]   [,267]   [,268]   [,269]   [,270]   [,271] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 #>        [,272]   [,273]   [,274]   [,275]   [,276]   [,277]   [,278]   [,279] #> [1,] 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 1.004354 #> [2,] 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 0.527226 #> [3,] 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 0.541478 #>        [,280]    [,281]    [,282]   [,283]    [,284]    [,285]   [,286] #> [1,] 1.004354 0.9956269 0.9956269 1.004354 0.9956269 0.9956269 1.004354 #> [2,] 0.527226 1.3122624 1.3122624 0.527226 1.3122624 1.3122624 0.527226 #> [3,] 0.541478 1.3064462 1.3064462 0.541478 1.3064462 1.3064462 0.541478 #>         [,287] #> [1,] 0.9956269 #> [2,] 1.3122624 #> [3,] 1.3064462 #>  #> , , 6 #>  #>           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #> [1,] 1.0282392 0.9709398 1.0282392 0.9709398 0.9709398 0.9709398 1.0282392 #> [2,] 0.5171889 1.3162506 0.5171889 1.3162506 1.3162506 1.3162506 0.5171889 #> [3,] 0.4024766 1.3557332 0.4024766 1.3557332 1.3557332 1.3557332 0.4024766 #>           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>          [,15]     [,16]     [,17]     [,18]     [,19]     [,20]     [,21] #> [1,] 0.9709398 1.0282392 1.0282392 1.0282392 1.0282392 0.9709398 1.0282392 #> [2,] 1.3162506 0.5171889 0.5171889 0.5171889 0.5171889 1.3162506 0.5171889 #> [3,] 1.3557332 0.4024766 0.4024766 0.4024766 0.4024766 1.3557332 0.4024766 #>          [,22]     [,23]     [,24]     [,25]     [,26]     [,27]     [,28] #> [1,] 1.0282392 0.9709398 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 1.3162506 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 1.3557332 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>          [,29]     [,30]     [,31]     [,32]     [,33]     [,34]     [,35] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 0.9709398 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 1.3162506 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 1.3557332 0.4024766 0.4024766 #>          [,36]     [,37]     [,38]     [,39]     [,40]     [,41]     [,42] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 0.9709398 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 1.3162506 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 1.3557332 0.4024766 0.4024766 #>          [,43]     [,44]     [,45]     [,46]     [,47]     [,48]     [,49] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>          [,50]     [,51]     [,52]     [,53]     [,54]     [,55]     [,56] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>          [,57]     [,58]     [,59]     [,60]     [,61]     [,62]     [,63] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>          [,64]     [,65]     [,66]     [,67]     [,68]     [,69]     [,70] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>          [,71]     [,72]     [,73]     [,74]     [,75]     [,76]     [,77] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 0.9709398 1.0282392 0.9709398 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 1.3162506 0.5171889 1.3162506 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 1.3557332 0.4024766 1.3557332 #>          [,78]     [,79]     [,80]     [,81]     [,82]     [,83]     [,84] #> [1,] 0.9709398 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 1.3162506 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 1.3557332 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>          [,85]     [,86]     [,87]     [,88]     [,89]     [,90]     [,91] #> [1,] 1.0282392 1.0282392 0.9709398 1.0282392 1.0282392 1.0282392 0.9709398 #> [2,] 0.5171889 0.5171889 1.3162506 0.5171889 0.5171889 0.5171889 1.3162506 #> [3,] 0.4024766 0.4024766 1.3557332 0.4024766 0.4024766 0.4024766 1.3557332 #>          [,92]     [,93]     [,94]     [,95]     [,96]     [,97]     [,98] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>          [,99]    [,100]    [,101]    [,102]    [,103]    [,104]    [,105] #> [1,] 1.0282392 1.0282392 0.9709398 0.9709398 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 1.3162506 1.3162506 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 1.3557332 1.3557332 0.4024766 0.4024766 0.4024766 #>         [,106]    [,107]    [,108]    [,109]    [,110]    [,111]    [,112] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,113]    [,114]    [,115]    [,116]    [,117]    [,118]    [,119] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,120]    [,121]    [,122]    [,123]    [,124]    [,125]    [,126] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,127]    [,128]    [,129]    [,130]    [,131]    [,132]    [,133] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,134]    [,135]    [,136]    [,137]    [,138]    [,139]    [,140] #> [1,] 1.0282392 0.9709398 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 1.3162506 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 1.3557332 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,141]    [,142]    [,143]    [,144]    [,145]    [,146]    [,147] #> [1,] 0.9709398 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 1.3162506 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 1.3557332 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,148]    [,149]    [,150]    [,151]    [,152]    [,153]    [,154] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,155]    [,156]    [,157]    [,158]    [,159]    [,160]    [,161] #> [1,] 1.0282392 1.0282392 1.0282392 0.9709398 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 1.3162506 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 1.3557332 0.4024766 0.4024766 0.4024766 #>         [,162]    [,163]    [,164]    [,165]    [,166]    [,167]    [,168] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,169]    [,170]    [,171]    [,172]    [,173]    [,174]    [,175] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,176]    [,177]    [,178]    [,179]    [,180]    [,181]    [,182] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,183]    [,184]    [,185]    [,186]    [,187]    [,188]    [,189] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,190]    [,191]    [,192]    [,193]    [,194]    [,195]    [,196] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,197]    [,198]    [,199]    [,200]    [,201]    [,202]    [,203] #> [1,] 1.0282392 0.9709398 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 1.3162506 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 1.3557332 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,204]    [,205]    [,206]    [,207]    [,208]    [,209]    [,210] #> [1,] 1.0282392 1.0282392 0.9709398 1.0282392 0.9709398 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 1.3162506 0.5171889 1.3162506 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 1.3557332 0.4024766 1.3557332 0.4024766 0.4024766 #>         [,211]    [,212]    [,213]    [,214]    [,215]    [,216]    [,217] #> [1,] 1.0282392 1.0282392 1.0282392 0.9709398 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 1.3162506 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 1.3557332 0.4024766 0.4024766 0.4024766 #>         [,218]    [,219]    [,220]    [,221]    [,222]    [,223]    [,224] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,225]    [,226]    [,227]    [,228]    [,229]    [,230]    [,231] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,232]    [,233]    [,234]    [,235]    [,236]    [,237]    [,238] #> [1,] 1.0282392 1.0282392 1.0282392 0.9709398 0.9709398 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 1.3162506 1.3162506 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 1.3557332 1.3557332 0.4024766 0.4024766 #>         [,239]    [,240]    [,241]    [,242]    [,243]    [,244]    [,245] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,246]    [,247]    [,248]    [,249]    [,250]    [,251]    [,252] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 0.9709398 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 1.3162506 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 1.3557332 #>         [,253]    [,254]    [,255]    [,256]    [,257]    [,258]    [,259] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,260]    [,261]    [,262]    [,263]    [,264]    [,265]    [,266] #> [1,] 1.0282392 1.0282392 1.0282392 0.9709398 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 1.3162506 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 1.3557332 0.4024766 0.4024766 0.4024766 #>         [,267]    [,268]    [,269]    [,270]    [,271]    [,272]    [,273] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,274]    [,275]    [,276]    [,277]    [,278]    [,279]    [,280] #> [1,] 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>         [,281]    [,282]    [,283]    [,284]    [,285]    [,286]    [,287] #> [1,] 0.9709398 0.9709398 1.0282392 1.0282392 1.0282392 1.0282392 1.0282392 #> [2,] 1.3162506 1.3162506 0.5171889 0.5171889 0.5171889 0.5171889 0.5171889 #> [3,] 1.3557332 1.3557332 0.4024766 0.4024766 0.4024766 0.4024766 0.4024766 #>  #> , , 7 #>  #>          [,1]     [,2]      [,3]     [,4]     [,5]     [,6]      [,7]      [,8] #> [1,] 1.148069 1.148069 0.8257951 1.148069 1.148069 1.148069 0.8257951 0.8257951 #> [2,] 1.367595 1.367595 0.3601179 1.367595 1.367595 1.367595 0.3601179 0.3601179 #> [3,] 1.338047 1.338047 0.4578537 1.338047 1.338047 1.338047 0.4578537 0.4578537 #>           [,9]     [,10]     [,11]     [,12]     [,13]    [,14]    [,15] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 1.148069 1.148069 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 1.367595 1.367595 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 1.338047 1.338047 #>          [,16]     [,17]     [,18]     [,19]     [,20]     [,21]     [,22] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>          [,23]     [,24]     [,25]     [,26]     [,27]     [,28]     [,29] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>          [,30]     [,31]     [,32]     [,33]     [,34]     [,35]     [,36] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>          [,37]     [,38]     [,39]    [,40]     [,41]     [,42]     [,43] #> [1,] 0.8257951 0.8257951 0.8257951 1.148069 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 1.367595 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 1.338047 0.4578537 0.4578537 0.4578537 #>          [,44]     [,45]     [,46]     [,47]     [,48]     [,49]     [,50] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>          [,51]     [,52]     [,53]     [,54]     [,55]     [,56]     [,57] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>          [,58]     [,59]     [,60]     [,61]     [,62]     [,63]     [,64] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>          [,65]     [,66]     [,67]     [,68]     [,69]     [,70]     [,71] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>          [,72]     [,73]     [,74]     [,75]     [,76]     [,77]     [,78] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>          [,79]     [,80]     [,81]     [,82]     [,83]     [,84]     [,85] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>          [,86]     [,87]     [,88]     [,89]    [,90]     [,91]     [,92] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 1.148069 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 1.367595 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 1.338047 0.4578537 0.4578537 #>          [,93]     [,94]     [,95]     [,96]     [,97]     [,98]     [,99] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,100]   [,101]   [,102]   [,103]    [,104]    [,105]    [,106] #> [1,] 0.8257951 1.148069 1.148069 1.148069 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 1.367595 1.367595 1.367595 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 1.338047 1.338047 1.338047 0.4578537 0.4578537 0.4578537 #>         [,107]    [,108]    [,109]    [,110]    [,111]    [,112]    [,113] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,114]    [,115]    [,116]    [,117]    [,118]    [,119]    [,120] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,121]    [,122]    [,123]    [,124]    [,125]    [,126]    [,127] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,128]    [,129]    [,130]    [,131]    [,132]    [,133]   [,134] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 1.148069 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 1.367595 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 1.338047 #>         [,135]    [,136]    [,137]    [,138]    [,139]    [,140]   [,141] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 1.148069 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 1.367595 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 1.338047 #>         [,142]    [,143]    [,144]    [,145]    [,146]    [,147]    [,148] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,149]    [,150]    [,151]    [,152]    [,153]    [,154]    [,155] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,156]    [,157]    [,158]    [,159]    [,160]    [,161]    [,162] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,163]    [,164]    [,165]    [,166]    [,167]    [,168]    [,169] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,170]    [,171]    [,172]    [,173]    [,174]    [,175]    [,176] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,177]    [,178]    [,179]    [,180]    [,181]    [,182]    [,183] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,184]    [,185]    [,186]    [,187]    [,188]    [,189]    [,190] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,191]    [,192]    [,193]    [,194]    [,195]    [,196]    [,197] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,198]    [,199]    [,200]    [,201]    [,202]    [,203]    [,204] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,205]    [,206]    [,207]   [,208]   [,209]    [,210]    [,211] #> [1,] 0.8257951 0.8257951 0.8257951 1.148069 1.148069 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 1.367595 1.367595 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 1.338047 1.338047 0.4578537 0.4578537 #>         [,212]    [,213]    [,214]    [,215]    [,216]    [,217]    [,218] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,219]    [,220]    [,221]    [,222]    [,223]    [,224]    [,225] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,226]    [,227]    [,228]    [,229]    [,230]    [,231]    [,232] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,233]    [,234]   [,235]   [,236]    [,237]    [,238]    [,239] #> [1,] 0.8257951 0.8257951 1.148069 1.148069 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 1.367595 1.367595 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 1.338047 1.338047 0.4578537 0.4578537 0.4578537 #>         [,240]    [,241]    [,242]    [,243]    [,244]    [,245]    [,246] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,247]    [,248]    [,249]    [,250]   [,251]    [,252]    [,253] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 1.148069 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 1.367595 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 1.338047 0.4578537 0.4578537 #>         [,254]    [,255]    [,256]    [,257]    [,258]    [,259]    [,260] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,261]    [,262]    [,263]    [,264]    [,265]    [,266]    [,267] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,268]    [,269]    [,270]    [,271]    [,272]    [,273]    [,274] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>         [,275]    [,276]    [,277]    [,278]    [,279]    [,280]   [,281] #> [1,] 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 1.148069 #> [2,] 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 1.367595 #> [3,] 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 1.338047 #>        [,282]    [,283]    [,284]    [,285]    [,286]    [,287] #> [1,] 1.148069 0.8257951 0.8257951 0.8257951 0.8257951 0.8257951 #> [2,] 1.367595 0.3601179 0.3601179 0.3601179 0.3601179 0.3601179 #> [3,] 1.338047 0.4578537 0.4578537 0.4578537 0.4578537 0.4578537 #>  #> , , 8 #>  #>          [,1]     [,2]     [,3]     [,4]     [,5]     [,6]      [,7]      [,8] #> [1,] 1.078860 1.078860 1.078860 1.078860 1.078860 1.078860 0.9143632 0.9143632 #> [2,] 1.361493 1.361493 1.361493 1.361493 1.361493 1.361493 0.3825399 0.3825399 #> [3,] 1.368059 1.368059 1.368059 1.368059 1.368059 1.368059 0.3583500 0.3583500 #>           [,9]     [,10]     [,11]     [,12]     [,13]     [,14]     [,15] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>          [,16]     [,17]     [,18]     [,19]     [,20]     [,21]     [,22] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>          [,23]     [,24]     [,25]     [,26]     [,27]     [,28]     [,29] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>          [,30]     [,31]     [,32]     [,33]     [,34]     [,35]     [,36] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>          [,37]     [,38]     [,39]    [,40]     [,41]    [,42]     [,43] #> [1,] 0.9143632 0.9143632 0.9143632 1.078860 0.9143632 1.078860 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 1.361493 0.3825399 1.361493 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 1.368059 0.3583500 1.368059 0.3583500 #>          [,44]     [,45]     [,46]     [,47]     [,48]     [,49]     [,50] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>          [,51]     [,52]     [,53]     [,54]     [,55]     [,56]     [,57] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>          [,58]     [,59]     [,60]     [,61]     [,62]     [,63]     [,64] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>          [,65]     [,66]     [,67]     [,68]     [,69]     [,70]     [,71] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>          [,72]     [,73]     [,74]     [,75]     [,76]     [,77]     [,78] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>          [,79]     [,80]     [,81]     [,82]     [,83]     [,84]     [,85] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>          [,86]     [,87]     [,88]     [,89]     [,90]     [,91]     [,92] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>          [,93]     [,94]     [,95]     [,96]     [,97]     [,98]     [,99] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,100]   [,101]   [,102]    [,103]    [,104]    [,105]    [,106] #> [1,] 0.9143632 1.078860 1.078860 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 1.361493 1.361493 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 1.368059 1.368059 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,107]    [,108]    [,109]    [,110]    [,111]    [,112]    [,113] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,114]    [,115]    [,116]    [,117]    [,118]    [,119]    [,120] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,121]    [,122]    [,123]    [,124]    [,125]    [,126]    [,127] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,128]    [,129]    [,130]    [,131]    [,132]   [,133]    [,134] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 1.078860 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 1.361493 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 1.368059 0.3583500 #>         [,135]    [,136]    [,137]    [,138]    [,139]    [,140]   [,141] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 1.078860 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 1.361493 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 1.368059 #>         [,142]    [,143]    [,144]    [,145]    [,146]    [,147]    [,148] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,149]    [,150]    [,151]    [,152]    [,153]    [,154]    [,155] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,156]    [,157]    [,158]    [,159]    [,160]    [,161]    [,162] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,163]    [,164]    [,165]    [,166]    [,167]    [,168]    [,169] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,170]    [,171]    [,172]    [,173]    [,174]    [,175]    [,176] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,177]    [,178]   [,179]    [,180]    [,181]    [,182]    [,183] #> [1,] 0.9143632 0.9143632 1.078860 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 1.361493 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 1.368059 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,184]    [,185]    [,186]    [,187]    [,188]    [,189]    [,190] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,191]    [,192]    [,193]    [,194]    [,195]    [,196]    [,197] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,198]    [,199]    [,200]    [,201]    [,202]    [,203]    [,204] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,205]   [,206]   [,207]   [,208]    [,209]    [,210]    [,211] #> [1,] 0.9143632 1.078860 1.078860 1.078860 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 1.361493 1.361493 1.361493 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 1.368059 1.368059 1.368059 0.3583500 0.3583500 0.3583500 #>         [,212]    [,213]    [,214]    [,215]    [,216]    [,217]    [,218] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,219]    [,220]    [,221]    [,222]    [,223]    [,224]    [,225] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,226]    [,227]    [,228]    [,229]    [,230]    [,231]    [,232] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,233]    [,234]   [,235]   [,236]    [,237]    [,238]    [,239] #> [1,] 0.9143632 0.9143632 1.078860 1.078860 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 1.361493 1.361493 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 1.368059 1.368059 0.3583500 0.3583500 0.3583500 #>         [,240]    [,241]    [,242]    [,243]    [,244]    [,245]    [,246] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,247]    [,248]    [,249]    [,250]    [,251]    [,252]    [,253] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,254]    [,255]    [,256]    [,257]    [,258]    [,259]    [,260] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,261]    [,262]    [,263]    [,264]    [,265]    [,266]    [,267] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,268]    [,269]    [,270]    [,271]    [,272]    [,273]    [,274] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>         [,275]    [,276]    [,277]    [,278]    [,279]    [,280]   [,281] #> [1,] 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 1.078860 #> [2,] 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 1.361493 #> [3,] 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 1.368059 #>        [,282]    [,283]    [,284]    [,285]    [,286]    [,287] #> [1,] 1.078860 0.9143632 0.9143632 0.9143632 0.9143632 0.9143632 #> [2,] 1.361493 0.3825399 0.3825399 0.3825399 0.3825399 0.3825399 #> [3,] 1.368059 0.3583500 0.3583500 0.3583500 0.3583500 0.3583500 #>  #> , , 9 #>  #>           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #> [1,] 0.9530474 0.9530474 0.9530474 0.9530474 0.9530474 0.9530474 0.9530474 #> [2,] 1.3424965 1.3424965 1.3424965 1.3424965 1.3424965 1.3424965 1.3424965 #> [3,] 1.3812755 1.3812755 1.3812755 1.3812755 1.3812755 1.3812755 1.3812755 #>           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>          [,15]     [,16]     [,17]     [,18]     [,19]     [,20]     [,21] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>          [,22]     [,23]     [,24]     [,25]     [,26]     [,27]     [,28] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>          [,29]     [,30]     [,31]     [,32]     [,33]     [,34]     [,35] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>          [,36]     [,37]     [,38]     [,39]     [,40]     [,41]     [,42] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>          [,43]     [,44]     [,45]     [,46]     [,47]     [,48]     [,49] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>          [,50]     [,51]     [,52]     [,53]     [,54]     [,55]     [,56] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>          [,57]     [,58]     [,59]     [,60]     [,61]     [,62]     [,63] #> [1,] 1.0448448 1.0448448 0.9530474 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 1.3424965 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 1.3812755 0.3034435 0.3034435 0.3034435 0.3034435 #>          [,64]     [,65]     [,66]     [,67]     [,68]     [,69]     [,70] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>          [,71]     [,72]     [,73]     [,74]     [,75]     [,76]     [,77] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>          [,78]     [,79]     [,80]     [,81]     [,82]     [,83]     [,84] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>          [,85]     [,86]     [,87]     [,88]     [,89]     [,90]     [,91] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>          [,92]     [,93]     [,94]     [,95]     [,96]     [,97]     [,98] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>          [,99]    [,100]    [,101]    [,102]    [,103]    [,104]    [,105] #> [1,] 1.0448448 1.0448448 0.9530474 0.9530474 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 1.3424965 1.3424965 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 1.3812755 1.3812755 0.3034435 0.3034435 0.3034435 #>         [,106]    [,107]    [,108]    [,109]    [,110]    [,111]    [,112] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,113]    [,114]    [,115]    [,116]    [,117]    [,118]    [,119] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,120]    [,121]    [,122]    [,123]    [,124]    [,125]    [,126] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,127]    [,128]    [,129]    [,130]    [,131]    [,132]    [,133] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,134]    [,135]    [,136]    [,137]    [,138]    [,139]    [,140] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,141]    [,142]    [,143]    [,144]    [,145]    [,146]    [,147] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,148]    [,149]    [,150]    [,151]    [,152]    [,153]    [,154] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,155]    [,156]    [,157]    [,158]    [,159]    [,160]    [,161] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,162]    [,163]    [,164]    [,165]    [,166]    [,167]    [,168] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,169]    [,170]    [,171]    [,172]    [,173]    [,174]    [,175] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,176]    [,177]    [,178]    [,179]    [,180]    [,181]    [,182] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,183]    [,184]    [,185]    [,186]    [,187]    [,188]    [,189] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 0.9530474 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 1.3424965 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 1.3812755 0.3034435 #>         [,190]    [,191]    [,192]    [,193]    [,194]    [,195]    [,196] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,197]    [,198]    [,199]    [,200]    [,201]    [,202]    [,203] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,204]    [,205]    [,206]    [,207]    [,208]    [,209]    [,210] #> [1,] 1.0448448 1.0448448 0.9530474 0.9530474 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 1.3424965 1.3424965 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 1.3812755 1.3812755 0.3034435 0.3034435 0.3034435 #>         [,211]    [,212]    [,213]    [,214]    [,215]    [,216]    [,217] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,218]    [,219]    [,220]    [,221]    [,222]    [,223]    [,224] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,225]    [,226]    [,227]    [,228]    [,229]    [,230]    [,231] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,232]    [,233]    [,234]    [,235]    [,236]    [,237]    [,238] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 0.9530474 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 1.3424965 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 1.3812755 0.3034435 0.3034435 #>         [,239]    [,240]    [,241]    [,242]    [,243]    [,244]    [,245] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,246]    [,247]    [,248]    [,249]    [,250]    [,251]    [,252] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 0.9530474 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 1.3424965 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 1.3812755 #>         [,253]    [,254]    [,255]    [,256]    [,257]    [,258]    [,259] #> [1,] 0.9530474 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 1.3424965 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 1.3812755 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,260]    [,261]    [,262]    [,263]    [,264]    [,265]    [,266] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,267]    [,268]    [,269]    [,270]    [,271]    [,272]    [,273] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,274]    [,275]    [,276]    [,277]    [,278]    [,279]    [,280] #> [1,] 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>         [,281]    [,282]    [,283]    [,284]    [,285]    [,286]    [,287] #> [1,] 0.9530474 0.9530474 1.0448448 1.0448448 1.0448448 1.0448448 1.0448448 #> [2,] 1.3424965 1.3424965 0.4446382 0.4446382 0.4446382 0.4446382 0.4446382 #> [3,] 1.3812755 1.3812755 0.3034435 0.3034435 0.3034435 0.3034435 0.3034435 #>  #> , , 10 #>  #>          [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]      [,8] #> [1,] 1.082570 1.082570 1.082570 1.082570 1.082570 1.082570 1.082570 0.9099688 #> [2,] 1.381359 1.381359 1.381359 1.381359 1.381359 1.381359 1.381359 0.3030610 #> [3,] 1.362787 1.362787 1.362787 1.362787 1.362787 1.362787 1.362787 0.3779035 #>           [,9]     [,10]     [,11]     [,12]     [,13]     [,14]     [,15] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>          [,16]     [,17]     [,18]     [,19]     [,20]     [,21]     [,22] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>          [,23]     [,24]     [,25]     [,26]     [,27]     [,28]     [,29] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>          [,30]     [,31]     [,32]     [,33]     [,34]     [,35]     [,36] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>          [,37]     [,38]     [,39]     [,40]     [,41]     [,42]     [,43] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>          [,44]     [,45]     [,46]     [,47]     [,48]     [,49]     [,50] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>          [,51]     [,52]     [,53]     [,54]     [,55]     [,56]     [,57] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>          [,58]     [,59]     [,60]     [,61]     [,62]     [,63]     [,64] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>          [,65]     [,66]     [,67]     [,68]     [,69]     [,70]     [,71] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>          [,72]     [,73]     [,74]     [,75]     [,76]     [,77]     [,78] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>          [,79]     [,80]     [,81]     [,82]     [,83]     [,84]     [,85] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>          [,86]     [,87]     [,88]     [,89]     [,90]     [,91]     [,92] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>          [,93]     [,94]     [,95]     [,96]     [,97]     [,98]     [,99] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,100]   [,101]   [,102]    [,103]    [,104]    [,105]    [,106] #> [1,] 0.9099688 1.082570 1.082570 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 1.381359 1.381359 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 1.362787 1.362787 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,107]    [,108]    [,109]    [,110]    [,111]    [,112]    [,113] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,114]    [,115]    [,116]    [,117]    [,118]    [,119]    [,120] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,121]    [,122]    [,123]    [,124]    [,125]    [,126]    [,127] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,128]    [,129]    [,130]    [,131]    [,132]    [,133]    [,134] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,135]    [,136]    [,137]    [,138]    [,139]    [,140]    [,141] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,142]    [,143]    [,144]    [,145]    [,146]    [,147]    [,148] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,149]    [,150]    [,151]    [,152]    [,153]    [,154]    [,155] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,156]    [,157]    [,158]    [,159]    [,160]    [,161]    [,162] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,163]    [,164]    [,165]    [,166]    [,167]    [,168]    [,169] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,170]    [,171]    [,172]    [,173]    [,174]    [,175]    [,176] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,177]    [,178]    [,179]    [,180]    [,181]    [,182]    [,183] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,184]    [,185]    [,186]    [,187]    [,188]    [,189]    [,190] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,191]    [,192]    [,193]    [,194]    [,195]    [,196]    [,197] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,198]    [,199]    [,200]    [,201]    [,202]    [,203]    [,204] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,205]   [,206]    [,207]   [,208]    [,209]    [,210]    [,211] #> [1,] 0.9099688 1.082570 0.9099688 1.082570 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 1.381359 0.3030610 1.381359 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 1.362787 0.3779035 1.362787 0.3779035 0.3779035 0.3779035 #>         [,212]    [,213]    [,214]    [,215]    [,216]    [,217]    [,218] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,219]    [,220]    [,221]    [,222]    [,223]    [,224]    [,225] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,226]    [,227]    [,228]    [,229]    [,230]    [,231]    [,232] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,233]    [,234]    [,235]   [,236]    [,237]    [,238]    [,239] #> [1,] 0.9099688 0.9099688 0.9099688 1.082570 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 1.381359 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 1.362787 0.3779035 0.3779035 0.3779035 #>         [,240]    [,241]    [,242]    [,243]    [,244]    [,245]    [,246] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,247]    [,248]    [,249]    [,250]    [,251]   [,252]    [,253] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 1.082570 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 1.381359 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 1.362787 0.3779035 #>         [,254]    [,255]    [,256]    [,257]    [,258]    [,259]    [,260] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,261]    [,262]    [,263]    [,264]    [,265]    [,266]    [,267] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,268]    [,269]    [,270]    [,271]    [,272]    [,273]    [,274] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>         [,275]    [,276]    [,277]    [,278]    [,279]    [,280]   [,281] #> [1,] 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 1.082570 #> [2,] 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 1.381359 #> [3,] 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 1.362787 #>        [,282]    [,283]    [,284]    [,285]    [,286]    [,287] #> [1,] 1.082570 0.9099688 0.9099688 0.9099688 0.9099688 0.9099688 #> [2,] 1.381359 0.3030610 0.3030610 0.3030610 0.3030610 0.3030610 #> [3,] 1.362787 0.3779035 0.3779035 0.3779035 0.3779035 0.3779035 #>  #>    ## ------------------------------------------------ ## Method `specify_posterior_bsvar_msh$get_last_draw` ## ------------------------------------------------  data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_msh$new(us_fiscal_lsuw, p = 4, M = 2) #> The identification is set to the default option of lower-triangular structural matrix.  # run the burn-in set.seed(123) burn_in        = estimate(specification, 10, thin = 2) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 2nd draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 10, thin = 2) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every 2nd draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|   ## ------------------------------------------------ ## Method `specify_posterior_bsvar_msh$is_normalised` ## ------------------------------------------------  # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_msh$new(us_fiscal_lsuw, p = 4, M = 2) #> The identification is set to the default option of lower-triangular structural matrix.  # estimate the model set.seed(123) posterior      = estimate(specification, 10, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # check normalisation status beforehand posterior$is_normalised() #> [1] TRUE  # normalise the posterior BB            = posterior$last_draw$starting_values$B      # get the last draw of B B_hat         = diag((-1) * sign(diag(BB))) %*% BB         # set negative diagonal elements normalise_posterior(posterior, B_hat)                      # draws in posterior are normalised  # check normalisation status afterwards posterior$is_normalised() #> [1] TRUE   ## ------------------------------------------------ ## Method `specify_posterior_bsvar_msh$set_normalised` ## ------------------------------------------------  # This is an internal function that is run while executing normalise_posterior() # Observe its working by analysing the workflow:  # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_msh$new(us_fiscal_lsuw, p = 4, M = 2) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # estimate the model posterior      = estimate(specification, 10, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 10 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # check normalisation status beforehand posterior$is_normalised() #> [1] TRUE  # normalise the posterior BB            = posterior$last_draw$starting_values$B      # get the last draw of B B_hat         = diag(sign(diag(BB))) %*% BB                # set positive diagonal elements normalise_posterior(posterior, B_hat)                      # draws in posterior are normalised  # check normalisation status afterwards posterior$is_normalised() #> [1] TRUE"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"class PosteriorBSVARSV contains posterior output specification including  last MCMC draw bsvar model Stochastic Volatility heteroskedasticity. Note due thinning MCMC output starting value element last_draw might equal last draw provided element posterior.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"last_draw object class BSVARSV last draw current MCMC run  starting value passed continuation MCMC estimation using estimate(). posterior list containing Bayesian estimation output.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"specify_posterior_bsvar_sv$new() specify_posterior_bsvar_sv$get_posterior() specify_posterior_bsvar_sv$get_last_draw() specify_posterior_bsvar_sv$is_normalised() specify_posterior_bsvar_sv$set_normalised() specify_posterior_bsvar_sv$clone()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"Create new posterior output PosteriorBSVARSV.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"","code":"specify_posterior_bsvar_sv$new(specification_bsvar, posterior_bsvar)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"specification_bsvar object class BSVARSV last draw current MCMC  run starting value. posterior_bsvar list containing Bayesian estimation output.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"posterior output PosteriorBSVARSV.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"method-get-posterior-","dir":"Reference","previous_headings":"","what":"Method get_posterior()","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"Returns list containing Bayesian estimation.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"","code":"specify_posterior_bsvar_sv$get_posterior()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"","code":"data(us_fiscal_lsuw) specification  = specify_bsvar_sv$new(us_fiscal_lsuw) set.seed(123) estimate       = estimate(specification, 5, thin = 1) estimate$get_posterior()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"method-get-last-draw-","dir":"Reference","previous_headings":"","what":"Method get_last_draw()","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"Returns object class BSVARSV last draw current MCMC run  starting value passed continuation MCMC estimation using estimate().","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"","code":"specify_posterior_bsvar_sv$get_last_draw()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"","code":"data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_sv$new(us_fiscal_lsuw, p = 4) set.seed(123)  # run the burn-in burn_in        = estimate(specification, 5, thin = 1)  # estimate the model posterior      = estimate(burn_in, 5, thin = 1)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"method-is-normalised-","dir":"Reference","previous_headings":"","what":"Method is_normalised()","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"Returns TRUE posterior normalised using normalise_posterior() FALSE otherwise.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"","code":"specify_posterior_bsvar_sv$is_normalised()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"","code":"# upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_sv$new(us_fiscal_lsuw, p = 4)  # estimate the model set.seed(123) posterior      = estimate(specification, 5, thin = 1)  # check normalisation status beforehand posterior$is_normalised()  # normalise the posterior BB            = posterior$last_draw$starting_values$B      # get the last draw of B B_hat         = diag((-1) * sign(diag(BB))) %*% BB         # set negative diagonal elements normalise_posterior(posterior, B_hat)                      # draws in posterior are normalised  # check normalisation status afterwards posterior$is_normalised()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"method-set-normalised-","dir":"Reference","previous_headings":"","what":"Method set_normalised()","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"Sets private indicator normalised TRUE.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"","code":"specify_posterior_bsvar_sv$set_normalised(value)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"value (optional) logical value passed indicator normalised.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"","code":"# This is an internal function that is run while executing normalise_posterior() # Observe its working by analysing the workflow:  # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_sv$new(us_fiscal_lsuw, p = 4)  # estimate the model set.seed(123) posterior      = estimate(specification, 5, thin = 1)  # check normalisation status beforehand posterior$is_normalised()  # normalise the posterior BB            = posterior$last_draw$starting_values$B      # get the last draw of B B_hat         = diag(sign(diag(BB))) %*% BB                # set positive diagonal elements normalise_posterior(posterior, B_hat)                      # draws in posterior are normalised  # check normalisation status afterwards posterior$is_normalised()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"objects class cloneable method.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"","code":"specify_posterior_bsvar_sv$clone(deep = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"deep Whether make deep clone.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_posterior_bsvar_sv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PosteriorBSVARSV — specify_posterior_bsvar_sv","text":"","code":"# This is a function that is used within estimate() data(us_fiscal_lsuw) specification  = specify_bsvar_sv$new(us_fiscal_lsuw, p = 4) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123) estimate       = estimate(specification, 5, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 5 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| class(estimate) #> [1] \"PosteriorBSVARSV\" \"R6\"                 ## ------------------------------------------------ ## Method `specify_posterior_bsvar_sv$get_posterior` ## ------------------------------------------------  data(us_fiscal_lsuw) specification  = specify_bsvar_sv$new(us_fiscal_lsuw) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123) estimate       = estimate(specification, 5, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 5 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| estimate$get_posterior() #> $B #> , , 1 #>  #>            [,1]      [,2]     [,3] #> [1,]  0.1271681 0.0000000  0.00000 #> [2,] -3.8394516 4.8699604  0.00000 #> [3,] -4.6054863 0.4349804 28.62168 #>  #> , , 2 #>  #>             [,1]       [,2]     [,3] #> [1,]   0.1270187  0.0000000  0.00000 #> [2,] -13.9046876 17.6486849  0.00000 #> [3,]  -5.7299860 -0.1093806 39.10314 #>  #> , , 3 #>  #>            [,1]      [,2]     [,3] #> [1,]   0.119887  0.000000  0.00000 #> [2,] -19.495290 24.753197  0.00000 #> [3,]  -2.573168 -2.413567 29.98989 #>  #> , , 4 #>  #>             [,1]      [,2]     [,3] #> [1,]   0.1184516  0.000000  0.00000 #> [2,] -16.5050473 20.944690  0.00000 #> [3,]  -3.9504330 -1.115995 32.31432 #>  #> , , 5 #>  #>            [,1]      [,2]     [,3] #> [1,]   0.112066  0.000000  0.00000 #> [2,] -15.002194 19.029482  0.00000 #> [3,]  -3.284835 -2.616097 35.79183 #>  #>  #> $A #> , , 1 #>  #>              [,1]       [,2]       [,3]       [,4] #> [1,]  1.047841355 -0.3372718 -0.6063772  0.2366255 #> [2,] -0.146886423  0.8117460 -0.3020212  0.5655655 #> [3,] -0.006136459 -0.0812277  0.9177918 -0.3380958 #>  #> , , 2 #>  #>             [,1]        [,2]       [,3]         [,4] #> [1,]  0.64565810 -0.28950589 -0.1908879  0.094969628 #> [2,] -0.05962368  0.76173517 -0.3840222  0.255129814 #> [3,] -0.06789456 -0.03711912  0.9791263 -0.008317473 #>  #> , , 3 #>  #>             [,1]        [,2]       [,3]        [,4] #> [1,]  0.75834340 -0.29127546 -0.3105093  0.22478277 #> [2,] -0.04015102  0.75430954 -0.3948590  0.27994099 #> [3,] -0.01501780 -0.05597339  0.9309293 -0.06266368 #>  #> , , 4 #>  #>             [,1]        [,2]       [,3]       [,4] #> [1,]  0.78279434 -0.35161949 -0.3175955 -0.2080141 #> [2,]  0.01022012  0.73172528 -0.4425276  0.1684934 #> [3,] -0.07296725 -0.05682096  0.9849365 -0.2061436 #>  #> , , 5 #>  #>             [,1]        [,2]       [,3]       [,4] #> [1,]  0.80126839 -0.37785902 -0.3384033 -0.4542714 #> [2,] -0.10852455  0.68405277 -0.3106262 -0.4208854 #> [3,] -0.03064558 -0.07958171  0.9460984 -0.3321987 #>  #>  #> $hyper #> , , 1 #>  #>           [,1]       [,2] #> [1,]  2.234132  1.1747261 #> [2,]  6.153157  1.0781340 #> [3,]  3.382887  0.4905604 #> [4,] 22.651755 17.4748071 #> [5,] 26.013064 15.6841633 #> [6,] 41.449674 10.0039639 #> [7,]  2.962011  0.8364195 #>  #> , , 2 #>  #>           [,1]       [,2] #> [1,]  4.481494  0.6822081 #> [2,]  5.400216  4.7508406 #> [3,]  5.465338  0.6485593 #> [4,] 39.616341  8.4261272 #> [5,] 42.106402 20.2618160 #> [6,] 38.665581 10.0003731 #> [7,]  5.330268  1.4063870 #>  #> , , 3 #>  #>            [,1]       [,2] #> [1,]   1.997393  0.7276265 #> [2,]  10.842807  0.7025375 #> [3,]   3.459123  0.7960253 #> [4,]  50.695799 11.8595550 #> [5,] 104.441490 15.9050456 #> [6,]  26.371820  9.4347167 #> [7,]   7.690773  1.3150935 #>  #> , , 4 #>  #>           [,1]       [,2] #> [1,]  3.416853  0.9581384 #> [2,]  4.297314  0.5271890 #> [3,]  3.406532  0.6302392 #> [4,] 27.267531 10.0386954 #> [5,] 70.450269 11.3741991 #> [6,] 53.027448  7.6784145 #> [7,]  8.034446  1.0477417 #>  #> , , 5 #>  #>           [,1]      [,2] #> [1,]  5.052623 1.2612578 #> [2,]  2.897395 0.4951843 #> [3,]  5.362073 0.4484560 #> [4,] 61.498677 8.7441114 #> [5,] 32.221940 7.3471349 #> [6,] 43.702818 5.2516812 #> [7,]  5.154122 0.9473775 #>  #>  #> $h #> , , 1 #>  #>            [,1]       [,2]       [,3]       [,4]       [,5]       [,6] #> [1,]  0.6175812 0.65368180 -1.1469124 -1.2442990 -0.4886291  1.7452622 #> [2,] -1.0631610 1.30833559  0.4815892 -0.1431250 -1.4025397  2.5686044 #> [3,] -1.0119915 0.04734188  2.2028728 -0.3668927  1.0396421 -0.2057826 #>            [,7]      [,8]       [,9]      [,10]      [,11]      [,12] #> [1,] 1.93801922 0.2895634 -0.8746180  0.3756835 -0.4767175 0.01014345 #> [2,] 0.02469702 1.2447210  0.8072138 -0.1647767 -2.8590963 1.14879407 #> [3,] 1.15691160 2.1301810 -0.2356851  0.5096213 -1.0886687 0.11690202 #>           [,13]      [,14]      [,15]     [,16]       [,17]      [,18] #> [1,]  1.6143849  0.8247988 -0.5686962 0.7346569  0.08294102 -1.4942633 #> [2,]  0.3122358 -2.1828950  1.2648226 0.4507819  0.69006437  0.2612639 #> [3,] -0.2569990 -0.1071997  1.4409822 0.5587344 -0.16481716  0.7726751 #>           [,19]      [,20]      [,21]      [,22]     [,23]     [,24]      [,25] #> [1,] -0.3715394  2.3427867  0.3642537 -0.5078112 0.3303127 1.2854550 -0.7692136 #> [2,]  1.4906714 -1.3420722 -1.3374524  0.8017937 1.0664538 0.2371912  1.8819480 #> [3,]  0.2325147  0.7727817  0.8203779 -0.1892145 0.7067692 0.8554532 -0.7411135 #>          [,26]      [,27]     [,28]       [,29]      [,30]      [,31] #> [1,] 0.7576075 -0.4072364 -1.178877 -1.29870636 -2.3232871  0.2145830 #> [2,] 0.6777091 -0.6881168  0.461877  0.03964853 -0.6697047  1.1267904 #> [3,] 1.6161001  0.3469622 -2.437700  0.39033578  0.5287789 -0.9181455 #>            [,32]     [,33]      [,34]      [,35]     [,36]      [,37]     [,38] #> [1,]  0.41002662  1.391041 -0.5367750 -0.2775125  2.544261 0.29974587 0.3187897 #> [2,] -0.07846442 -2.056275 -0.6826746  0.1294555  1.414201 0.04670784 1.5831790 #> [3,] -0.03650882  0.752398 -0.6040504  1.3940279 -1.426746 2.43844838 1.4162913 #>          [,39]      [,40]      [,41]      [,42]     [,43]       [,44] #> [1,] 0.3160781 -0.3348976 -0.5064166  0.4109319 0.3785960 -0.37730880 #> [2,] 0.6275875 -1.5289745  0.3211848 -0.0299106 0.4735476 -1.74689580 #> [3,] 0.7494131  0.9179395 -0.8972189 -2.0827972 1.5976177  0.07868731 #>           [,45]     [,46]      [,47]      [,48]    [,49]      [,50]      [,51] #> [1,]  0.2659182 2.0314343 -0.5123777  0.8643981 1.802280 -0.7116673 -0.1559444 #> [2,] -1.0257270 1.0675038 -1.0006612 -1.0044366 1.228112 -0.7163835 -1.0415437 #> [3,]  0.5708770 0.5712342 -1.6506239 -2.1172888 0.819673  0.6965911  1.1689145 #>           [,52]     [,53]      [,54]      [,55]      [,56]      [,57] #> [1,] -1.3735338  1.639018  0.4606707  1.7932553 -1.2718717 -1.9945132 #> [2,] -0.5615578 -1.836456  1.8073046  0.4192792 -0.2740855 -0.4588885 #> [3,]  1.7008153  0.870617 -1.0217360 -0.8355601 -1.0530986  0.1433936 #>            [,58]        [,59]      [,60]     [,61]      [,62]       [,63] #> [1,]  1.70506480  0.717836294  0.4788292  1.352670 -0.3573317 -0.90847492 #> [2,] -1.09933661 -0.056217873  0.8448762 -1.901299 -0.8927043  1.65075712 #> [3,] -0.03680673  0.004553651 -0.5090481  1.315518 -0.6034093 -0.05777016 #>           [,64]      [,65]       [,66]      [,67]       [,68]      [,69] #> [1,] -0.9737284 -0.2065062 -0.03476537 -0.2888235 -0.08210848  0.3625984 #> [2,]  0.9549221 -0.6844443  1.11959847  0.9542518  0.22439018 -2.2085442 #> [3,]  0.7844801 -0.5358558  1.67763912  0.6782993 -0.66579256 -0.6439970 #>            [,70]     [,71]      [,72]      [,73]        [,74]     [,75] #> [1,] -0.41342764 0.2175160 -0.1344966  0.5402233 -0.007417185 0.7250692 #> [2,] -1.07598672 0.6247255  1.0845066 -0.1423493 -1.413915351 0.5971678 #> [3,] -0.06937672 0.9029164  1.3211283  0.2672509  0.673041242 0.2284000 #>           [,76]      [,77]      [,78]      [,79]      [,80]      [,81] #> [1,]  0.4434273 -0.2266188  0.6288613 -0.4812993 -0.6998504 -0.5530246 #> [2,] -0.9530359  0.5267638 -0.3286342 -1.0571329  0.2464779 -1.2333957 #> [3,] -0.7649959  0.4579925  0.4679307 -1.2848658 -1.3001970  0.2307838 #>           [,82]     [,83]       [,84]      [,85]     [,86]     [,87]      [,88] #> [1,] -0.5457406 0.6646825  0.00673579 -1.7560719 1.3363941  1.742764 -1.8264472 #> [2,]  1.4944454 0.0940874 -0.71326223 -0.3010556 0.7706162 -1.206835  0.4098548 #> [3,]  2.2468544 0.8890478  0.06642346 -0.1309287 0.3942823  0.564719  0.9920168 #>           [,89]       [,90]      [,91]     [,92]       [,93]      [,94] #> [1,] -0.5218110 -0.11098440  0.8353481 0.2530676 -0.88048917 -2.1809961 #> [2,] -1.1765848  0.52347510 -0.1887361 0.2591805 -1.21676888  0.7479739 #> [3,] -0.1758199  0.05409648  1.4570729 1.0484987 -0.09349025 -0.8411880 #>           [,95]       [,96]     [,97]      [,98]      [,99]      [,100] #> [1,] -0.8159096 -1.42690613 0.9149137 -1.7967019  0.9596537 -0.59370149 #> [2,]  1.4949518 -0.53864701 0.1630471  0.2961634 -1.2153393 -0.03932608 #> [3,]  0.5674709  0.08705598 0.8862614 -0.8176392  1.4013423  0.70046372 #>         [,101]     [,102]     [,103]     [,104]    [,105]     [,106]   [,107] #> [1,] 1.4501586 -0.5096182 -0.8547841 -1.1355172 1.0816274 -0.5247350 0.334712 #> [2,] 1.0895011 -0.5547725  0.6451483  0.7287881 0.8047486  0.8691853 1.269848 #> [3,] 0.9684867 -0.2988002 -0.8470627  1.3873434 1.8867536 -0.5331945 0.888175 #>           [,108]     [,109]     [,110]     [,111]     [,112]     [,113] #> [1,] -0.03820004 -1.4846748 -0.9015924  0.2489451 -0.6187267  1.9175103 #> [2,]  2.46241545  0.3822495  0.4411528 -0.8378824  0.2211529 -0.1287617 #> [3,] -0.69517112  0.7526538  0.3487386  1.0820202  0.9603293  1.3309575 #>          [,114]    [,115]     [,116]     [,117]     [,118]      [,119] #> [1,]  0.3605256  1.453477 -1.9149850 -0.7172113 -1.1233345 -0.75032981 #> [2,] -3.6899029  1.144789 -0.1772960  1.0315935 -0.1020119 -0.55240445 #> [3,]  1.1559753 -1.343023  0.5618781  0.8182764 -0.7875966  0.09636896 #>          [,120]     [,121]     [,122]     [,123]     [,124]     [,125] #> [1,]  0.2029404  2.4854998  0.9246216 -0.1916061 -0.4866573 -0.6039827 #> [2,]  1.3575184 -0.1120465 -1.1660056  0.8961994  0.8442132 -0.7743811 #> [3,] -0.5345535  1.4748881  1.4760009 -0.2401375 -1.2038560 -0.1612293 #>          [,126]     [,127]     [,128]     [,129]      [,130]    [,131] #> [1,] -1.0926665  0.9523273 -1.5716886  0.3118853 -0.06660457 -1.372948 #> [2,] -0.1484125 -1.2512691  0.2508866 -0.7518079 -1.92638266  1.410445 #> [3,] -0.7617776  1.4922914 -0.5937281  0.9670909 -2.35897819 -1.593179 #>            [,132]      [,133]     [,134]     [,135]     [,136]     [,137] #> [1,]  1.506076648  0.90717277 -0.5756813  0.3123458  1.4439833  0.7322849 #> [2,] -0.325393874  0.04856777 -1.1380747  2.2530879 -0.2650972 -1.7160121 #> [3,] -0.008244424 -0.28882600  1.1450495 -0.4862578  2.0342836 -0.6415798 #>          [,138]      [,139]      [,140]     [,141]     [,142]     [,143] #> [1,]  0.2112125  0.12306176 -0.10325568  1.0340586 -1.4744830 -0.3283703 #> [2,] -1.4375563 -0.01261564  0.02077692 -0.7080208  1.1497416 -0.6390337 #> [3,] -0.1167396 -0.41575671  0.20039631  0.4434758 -0.3040791 -0.4195096 #>          [,144]     [,145]     [,146]     [,147]     [,148]    [,149] #> [1,] -0.7420947 -0.1946742  1.9114527  0.2545704 -1.1762873 0.1341478 #> [2,] -1.6091784 -0.7780853  2.5176372 -2.2075642  0.2012043 1.4236599 #> [3,]  0.8195231 -0.3677560 -0.7641735  1.6676988 -0.4097799 0.6164461 #>           [,150]     [,151]      [,152]     [,153]     [,154]     [,155] #> [1,]  0.70377848  1.2467878 -0.02510797 -0.2307047  1.5920091 -0.7110088 #> [2,] -0.04313838  0.2689307  0.14321440 -0.1902327  0.3280893  1.1006691 #> [3,] -1.23315400 -0.9513643 -0.73207320  1.5421010 -0.5692640 -0.1611190 #>          [,156]     [,157]     [,158]     [,159]     [,160]     [,161] #> [1,]  0.1775206 -0.2886188  0.1053837  0.6624325  0.5381155  1.0204844 #> [2,] -0.4281313 -0.7452957 -0.9136307 -0.6187869 -0.2567255  0.9550106 #> [3,] -0.5126891 -0.4097398 -3.2876029  0.6650422 -0.8127325 -0.5707425 #>          [,162]    [,163]     [,164]     [,165]    [,166]     [,167]     [,168] #> [1,]  0.3017036 -1.104345 -0.7458408 -0.9459148  1.737381 -1.4122030 -1.1558151 #> [2,] -0.3104817  2.200629  0.5061169  0.4141737 -1.285320 -1.0284531  0.7113979 #> [3,] -0.3658188 -1.001120  0.5164947  0.9058095 -1.964586  0.8475057 -0.6466568 #>          [,169]       [,170]     [,171]    [,172]    [,173]     [,174] #> [1,] -0.5028382  0.001750761 -1.2649648 0.6762060  1.146185 -0.4971924 #> [2,] -1.8597630 -0.015925960  0.7344425 0.5090858  2.428489 -1.4394526 #> [3,] -0.5005126  1.909095601 -1.4230169 1.5640811 -1.097424  0.7000045 #>          [,175]     [,176]      [,177]      [,178]     [,179]     [,180] #> [1,]  1.3711084 -0.1933156 -0.54671150 -1.60217153 2.77946157  0.9248460 #> [2,] -0.8861065  1.1889212 -0.96751434 -0.05032990 0.93707902  1.1406743 #> [3,]  1.9504511 -0.1582782  0.05699431 -0.07004804 0.06640822 -0.2587122 #>          [,181]     [,182]      [,183]     [,184]     [,185]    [,186] #> [1,] -1.0418868 -0.5008156  1.08205554  1.8930892  1.5795227 -1.367159 #> [2,] -0.9295669 -1.3725611 -0.05368997 -1.0273549  0.3604679  1.372390 #> [3,]  1.2742439 -0.3059574  0.33713580 -0.3916894 -0.4241068  1.756598 #>          [,187]      [,188]      [,189]     [,190]      [,191]    [,192] #> [1,] -0.7852427  0.11839568 -0.09692247 -0.1719856 -0.49137491 2.1437610 #> [2,]  0.2146324  2.29265192 -0.16604708 -0.2059380 -0.14812697 0.5186967 #> [3,] -0.4602216 -0.08266987  0.46293871  0.6947974 -0.05137942 0.8918128 #>           [,193]     [,194]     [,195]     [,196]     [,197]      [,198] #> [1,] -0.05580489 -0.8076167 -0.3967024  0.4460849  0.1044553  0.09233367 #> [2,] -0.50113449  0.1362865  1.1455991 -0.2673612 -0.6833925  0.92145848 #> [3,]  1.79883332 -0.8248823 -0.7632405 -1.2814548  1.7340267 -0.27716521 #>          [,199]     [,200]      [,201]     [,202]     [,203]     [,204] #> [1,]  0.3138715  0.8486905  0.68953108 -1.3060163  0.1616273 -0.4759895 #> [2,] -1.9804219 -0.6775006  0.08656223 -0.5226726 -0.4690740 -1.9414971 #> [3,] -0.2611742 -0.8918201 -0.18254158  0.9358404 -0.0788313 -0.5815644 #>          [,205]     [,206]     [,207]   [,208]     [,209]    [,210]     [,211] #> [1,] -0.1327692  0.5953510  0.5690085 1.249802 -0.9622594 0.1504055 -0.1755979 #> [2,] -0.6105806 -0.2091544 -1.1492848 1.844624  0.5286214 1.5119461 -0.8088247 #> [3,] -0.4522709 -1.0222510 -0.9949859 1.024323 -1.2910116 1.6995906  0.1423450 #>         [,212]     [,213]     [,214]     [,215]     [,216]      [,217] #> [1,] -0.253728 -1.0945693 -0.6082055  2.4651064 -0.5318944  0.96175592 #> [2,] -1.623426  0.1778642 -1.1307121 -0.5841476  0.7545412  0.76628730 #> [3,]  1.488523  0.2917315 -1.3706714 -0.4479583  1.8112983 -0.01690685 #>          [,218]     [,219]    [,220]     [,221]     [,222]     [,223] #> [1,] -0.5015546 0.43588960 -1.142539 -1.0935176  0.4014971 -0.3272298 #> [2,]  0.1822270 1.43504515 -2.240987  1.9451463 -1.0180402 -1.0519318 #> [3,] -0.1188105 0.02000855  1.607352 -0.1014511  0.7908796  2.0469266 #>          [,224]    [,225]     [,226]      [,227]     [,228]     [,229] #> [1,] -1.3274541 0.8377166 -0.1525582  0.77579387  0.1533375 -0.6490355 #> [2,]  0.4219147 1.9614403 -1.3401212 -0.03787705  1.0756474 -1.3409985 #> [3,] -0.8782965 0.4583726  0.4255818 -0.97077027 -1.9481591  0.4022752 #>         [,230]      [,231]     [,232]    [,233]    [,234]      [,235] #> [1,] 0.7263419 -0.08368007 -0.2224669 0.4276863 0.3631254  0.46187097 #> [2,] 0.1309984 -0.49253297 -0.6023180 0.2133807 0.1659837 -0.05993888 #> [3,] 1.2402189  1.21508253  2.0460702 1.1965547 0.8786200  0.57636827 #>          [,236]     [,237]    [,238]     [,239]     [,240]     [,241] #> [1,] -0.2629230  0.9914904  1.220112  0.3159552  0.6874377 -0.3502585 #> [2,] -0.2130807 -0.3435211  1.271986 -0.2777228  0.7497228 -1.4078808 #> [3,] -1.5628699 -0.3846476 -1.848617  0.7739103 -0.1371230  0.1538358 #>          [,242]     [,243]     [,244]     [,245]     [,246]     [,247] #> [1,] -0.2875258 -0.2061169  0.5301634 -0.5816291 -0.1621742  0.6622504 #> [2,] -0.4764558  0.1280218  0.6843779 -0.7725798  0.6614117  0.5185573 #> [3,] -0.8101076 -0.3711288 -1.3775748  1.5789353  0.6570729 -0.2259725 #>           [,248]      [,249]     [,250]      [,251]    [,252]     [,253] #> [1,] -0.01770738  0.57409811  0.3702503  0.09491828 0.2772825  2.8240325 #> [2,]  0.15604996 -0.07279844 -1.4568806  0.58523502 0.7440129 -0.4227682 #> [3,] -1.41132475 -0.01306639  0.2039125 -1.05087342 0.6745331 -1.2671442 #>            [,254]      [,255]      [,256]     [,257]     [,258]     [,259] #> [1,]  0.873941393 -1.06613080  0.20693532 -1.6454581  0.3984235 -0.8367438 #> [2,] -0.721103329  1.23541000 -0.81741247  0.3001323  1.4211849  0.1361074 #> [3,]  0.003869818 -0.06222038 -0.06101697  0.7152915 -0.4910507  1.3081951 #>          [,260]    [,261]     [,262]      [,263]     [,264]    [,265]    [,266] #> [1,] -0.7686384 0.6450496 -0.4029684 -0.74266710 -0.5821044 1.2238696 0.6048092 #> [2,] -0.3908349 1.3886393  0.2882013  0.04489904  0.1743808 0.9822534 0.0680896 #> [3,]  1.6597710 1.9893706  0.4989054 -1.39374276 -0.8031905 0.2348457 1.2197308 #>         [,267]     [,268]     [,269]    [,270]    [,271]     [,272]      [,273] #> [1,] 0.1868989  0.5937831  0.2445359 1.5770225 0.1211985  1.8637497 -0.47523887 #> [2,] 1.1280433  0.3514662 -1.2377015 1.8144500 0.1732029 -1.7838217  0.34057059 #> [3,] 1.7389740 -0.7887474 -0.7331175 0.4441013 0.6572099 -0.5796362  0.04845732 #>          [,274]      [,275]     [,276]    [,277]    [,278]     [,279] #> [1,] -0.7509497 -0.02972493  0.1667255 2.1299000  0.964579 -0.3332187 #> [2,] -0.3419004  0.79937331  1.0047396 0.7515995 -1.028299  0.1110695 #> [3,] -1.4398514 -0.76896113 -1.5057794 0.5423284  2.367071  0.7749413 #>          [,280]     [,281]     [,282]     [,283]     [,284]     [,285] #> [1,]  0.0894344 -0.4115757  0.4242827  0.8276444 -0.6173267  0.3807099 #> [2,] -0.3767935  0.3091057  0.3625519 -0.8060335  1.7401661 -0.7679271 #> [3,] -0.4557249 -1.5764148 -0.8927283 -0.5291882 -0.4713762 -0.2559439 #>          [,286]     [,287] #> [1,]  0.7555018  0.8702582 #> [2,] -1.3086084  1.4924962 #> [3,]  0.4253011 -0.6326331 #>  #> , , 2 #>  #>            [,1]       [,2]         [,3]        [,4]       [,5]       [,6] #> [1,] -0.7937240 -1.6866542 -1.654665823 -0.55944902 -1.5785775  1.8122924 #> [2,] -1.9544570 -0.9314592  1.336009023 -0.33645298 -0.2097399  0.4579806 #> [3,] -0.3833668  0.7474110 -0.005878034 -0.04972329 -1.2932465 -2.0668761 #>            [,7]      [,8]       [,9]      [,10]       [,11]      [,12] #> [1,]  0.5179272 2.9657713 -0.5334803 -1.3148641 -0.08141871 -0.9493108 #> [2,]  0.3962949 0.5970540  0.2221007  0.9178852  0.03237878  1.3382372 #> [3,] -2.3688415 0.5001744 -0.4174402  0.1519655 -0.42347111  0.5863693 #>            [,13]     [,14]      [,15]     [,16]      [,17]       [,18] #> [1,]  0.02346874 1.4935198 -0.3604080 -1.280538 -0.7704029  0.07296015 #> [2,]  0.58877336 0.5103077  0.6972813  1.240153 -1.0406296 -0.48829861 #> [3,] -0.17926190 1.9526442  0.6997891  0.538163 -0.1289741  0.70931713 #>          [,19]      [,20]      [,21]      [,22]      [,23]       [,24] #> [1,] 0.1605490  0.7700981  0.1983711 -1.6034938  0.5377539  0.02351679 #> [2,] 0.1689141  0.1830316 -0.1188932  0.3329510 -0.8480225  0.79321833 #> [3,] 1.2694813 -0.8632435 -0.0129053  0.5031904  0.2513170 -0.17039299 #>           [,25]       [,26]      [,27]     [,28]      [,29]      [,30] #> [1,] -1.5629530 -0.01619902 -1.3474200 0.4197433 -1.5277576 -0.7974831 #> [2,] -0.8272654  0.57897169 -0.3789568 0.7536932 -0.3699207 -0.2329320 #> [3,] -1.3769507 -1.01678579  1.0086371 0.5366901 -0.6420912 -1.5582388 #>            [,31]      [,32]     [,33]       [,34]      [,35]       [,36] #> [1,] -0.39701477  0.2843499  1.463752  0.34129974  0.9311875  2.43203257 #> [2,] -0.04068332  0.6870913 -1.101086 -0.03731377 -0.0812872 -0.70581178 #> [3,]  0.63244869 -0.2094566  2.771538  1.10166397  0.7225198  0.02465715 #>           [,37]      [,38]      [,39]      [,40]      [,41]      [,42] #> [1,] -0.5081996  0.4323213  1.5986677 -0.5245454 -0.8944914 -0.4685466 #> [2,]  1.1731787  0.9609834 -0.9575139  0.7171468 -0.5591296 -0.8170254 #> [3,]  0.6235079 -1.3042346 -0.3692175  0.8503914  0.7414204  0.7388134 #>             [,43]      [,44]     [,45]        [,46]      [,47]      [,48] #> [1,] -0.001275521  1.1374513 1.8146505 -0.402005499  0.2231529  0.1028445 #> [2,]  1.611146533 -1.9282700 0.4309204  2.029124999 -0.2575696  1.8198469 #> [3,] -0.330618458 -0.4785614 0.6256745 -0.008263805  0.2849863 -1.0675428 #>           [,49]     [,50]      [,51]      [,52]      [,53]      [,54] #> [1,] -0.1333851 -1.423254  0.0563776 -0.0950489 -0.4010553  1.6848508 #> [2,] -1.2711385  2.889336 -2.2271256  0.5784709 -1.9692415 -0.4751132 #> [3,] -1.7825790  0.771837  0.2508947 -2.0220880 -0.4306358  0.2221743 #>            [,55]      [,56]      [,57]      [,58]      [,59]      [,60] #> [1,]  0.09992353  0.2947752 -2.7457834  0.4607336 0.09110181  0.6720655 #> [2,] -0.56840529 -0.3787438 -0.2800516  1.9003812 0.04383767  1.2059349 #> [3,] -0.96299596 -0.8875776  1.2930464 -0.7492829 0.63678870 -0.8966286 #>            [,61]       [,62]      [,63]       [,64]      [,65]      [,66] #> [1,]  0.01578112  1.38560283 -0.2688271 -0.73842859  0.2500956  0.5657371 #> [2,]  0.67706534  1.25164881 -0.2808394  0.03015932  0.5692998  1.0285812 #> [3,] -0.03265233 -0.04491176 -1.1933256 -0.86272815 -0.1909379 -1.0117534 #>            [,67]       [,68]     [,69]      [,70]    [,71]      [,72] #> [1,] -0.57956427  0.18979921 0.2547876 -0.6498882 1.755790  0.2950470 #> [2,] -0.88412061 -0.01202715 1.6163785  0.6689806 1.067985 -0.2675052 #> [3,] -0.01894151  0.46232852 0.3330848  0.8057533 1.706172  0.0608857 #>           [,73]       [,74]      [,75]        [,76]      [,77]       [,78] #> [1,] -0.6494755 -0.08699391 -0.4011202  0.690659097 -1.0390436  0.82319961 #> [2,]  0.1844915 -0.33538958 -0.9629726 -1.056592403 -0.1122138 -0.62530879 #> [3,]  1.0189185 -0.08594548  1.4610401 -0.006721046 -0.8582253  0.05029661 #>           [,79]       [,80]      [,81]      [,82]        [,83]      [,84] #> [1,]  0.3706508  0.03804909 -0.4965614  0.2055405  0.449040737 -0.2622246 #> [2,]  0.1964409 -0.59949004  1.0877148 -1.1570510 -0.924787541 -0.6295498 #> [3,] -2.0623358  0.58825244  0.6591319 -1.4143543 -0.005128983 -0.9971198 #>           [,85]      [,86]    [,87]      [,88]      [,89]      [,90]      [,91] #> [1,] -1.2486597 -1.1662388 1.261514  0.2756741  1.7856206 -0.8294916 -1.2068729 #> [2,]  0.4531199 -1.3995402 0.906250  1.2661009 -0.8549972  0.1152269 -0.6273289 #> [3,] -0.3283262 -0.5186387 1.120975 -0.1434631  1.4657354  2.0321697  0.4032381 #>          [,92]      [,93]      [,94]       [,95]      [,96]      [,97] #> [1,] -0.930310 -0.2460580 -2.1016138 -0.32631603 -1.0292294 -0.4031959 #> [2,]  1.380064  0.3449639  0.3384094  0.03908693 -0.7124218  0.3731395 #> [3,]  1.483152 -0.9435345  2.0588195  1.07271727  0.9522065 -0.6625223 #>           [,98]       [,99]      [,100]     [,101]     [,102]      [,103] #> [1,] -1.8208357 -0.31116758  0.08987625  2.0917923  0.1433718  0.60735612 #> [2,] -1.1338597  0.02636737 -0.38096002  1.6122362 -0.3000111 -0.33511890 #> [3,] -0.1780182 -1.70948142 -0.77745614 -0.6034325  1.9739588 -0.03864849 #>          [,104]     [,105]     [,106]     [,107]      [,108]     [,109] #> [1,] -0.5663420  1.6607528 -0.2386831 -0.9080590 -0.67371794 -1.0400025 #> [2,] -0.3448242  0.4724882 -0.1121185 -1.8259756  0.87844795 -1.3009397 #> [3,]  1.0158857 -1.1242121 -0.9625552  0.3007435 -0.06179603  0.8125035 #>           [,110]     [,111]     [,112]    [,113]     [,114]     [,115] #> [1,] -1.27453669 -0.8466779 -1.3504568  1.849427 -0.2048644  0.6830147 #> [2,]  0.71705656 -1.0115446  1.6764380 -1.256229  1.7410720 -1.0332306 #> [3,] -0.02170883  0.2344590  0.4126909  1.314980  0.5718433  2.7193244 #>          [,116]      [,117]     [,118]     [,119]     [,120]     [,121] #> [1,] -1.3451856 -0.06650852  0.2236863 -0.6972581 -0.7791492  0.4110915 #> [2,]  0.1453618  0.18318986 -0.8561335 -0.7719565  1.0742018 -0.3324160 #> [3,]  1.2140433 -1.28835108  0.6014449  0.5035710  0.3857593 -1.2471402 #>           [,122]     [,123]     [,124]     [,125]   [,126]    [,127]     [,128] #> [1,]  0.50730704 -1.1367376 -0.3446805  0.6958375 1.397907 0.1110946 -1.5553681 #> [2,] -0.05513519 -0.4108436  0.8975312 -1.5046029 1.751773 0.1475072  0.9860326 #> [3,] -0.57629612  0.2041562 -0.3229437  0.9006875 1.286995 0.5312297 -0.3625986 #>           [,129]     [,130]     [,131]      [,132]    [,133]     [,134] #> [1,]  0.04527843 -0.2804998 -1.5378146 -0.05338315 0.6468396  1.0456431 #> [2,] -0.24791577  1.3649374  0.5587447 -0.80492843 1.1128717  0.2296874 #> [3,] -0.51977139  0.8252660 -0.5059865  0.73482168 0.6454402 -1.3604878 #>         [,135]     [,136]      [,137]     [,138]     [,139]     [,140] #> [1,] -0.638130  1.7836250 -0.46994297 0.01685949 -1.1879550 -0.7099013 #> [2,]  1.025837 -2.8192054  0.06912529 1.39196661 -0.1816211 -0.6292973 #> [3,]  0.276063 -0.5604588  0.04163157 0.24678559  0.2971149  1.4302225 #>          [,141]     [,142]     [,143]     [,144]    [,145]    [,146]     [,147] #> [1,] -0.7895159 -0.2543078 -0.8954738  0.5466757 0.4770929 0.5386065 -0.6987635 #> [2,]  0.9013959 -0.9224334 -0.2669215  1.5959975 0.7032735 2.0079374 -0.2178222 #> [3,]  0.8903169 -0.6380864 -0.7299260 -0.9476420 0.6304956 0.3901414 -0.1821475 #>          [,148]      [,149]     [,150]     [,151]     [,152]     [,153] #> [1,] -0.1897114 -0.05237122 -0.9070258  0.2439011 -0.4110659 -0.5948049 #> [2,]  0.1580888 -0.67722794  0.1837628 -0.4411316  0.8309812 -0.5482086 #> [3,]  0.1815647  2.09553304  0.9771919  0.1265161  0.4753634 -0.7312004 #>           [,154]     [,155]     [,156]     [,157]     [,158]     [,159] #> [1,]  1.23510530  0.4214326  0.1700795 -0.1676731  0.1128639 0.17314310 #> [2,] -0.18399688 -0.1095915 -1.8116583 -0.4170704 -0.1176224 0.07660851 #> [3,] -0.05836095 -2.4966505  0.3306439 -1.6647918 -0.3003658 1.55863572 #>          [,160]     [,161]     [,162]     [,163]     [,164]     [,165] #> [1,]  1.7971873  0.6308018 -1.3159492 -0.2977701 -1.5723885 -1.8005761 #> [2,] -0.5608639 -1.4163238  0.5738708  2.8705538 -0.4944477  0.9322968 #> [3,] -0.7509253 -0.9990612  1.0412738 -0.9359623 -0.7649133  0.9848166 #>           [,166]     [,167]     [,168]     [,169]      [,170]     [,171] #> [1,] -0.09987955 -1.1778472 -1.1172259 -1.6109473 -0.36589227 -1.8198238 #> [2,]  0.36677458  0.3057425 -0.7386818 -0.3196644 -0.66761655  0.8311297 #> [3,]  0.01528162  1.0848532  0.2180461 -0.7389086  0.05978423 -0.8198019 #>          [,172]      [,173]     [,174]     [,175]     [,176]      [,177] #> [1,]  0.6778663 1.429590657 0.01343705 -0.1090414 -1.9597646  0.27548042 #> [2,] -1.9636943 1.260645053 0.05505981 -0.5915484  0.2070986  1.50629591 #> [3,]  0.2292072 0.002370122 0.31047456  0.7020935  0.6940773 -0.04536718 #>          [,178]     [,179]     [,180]     [,181]      [,182]     [,183] #> [1,] -0.9880697 -0.4336213 -0.1916847 -1.2522241 -0.02944168  0.7488822 #> [2,]  0.7270297 -0.8373685 -0.3230054  0.1875704 -0.79299455  1.1353039 #> [3,]  0.5116088  0.3320216  1.6053697  0.5374878  0.98236328 -0.9779914 #>         [,184]     [,185]     [,186]     [,187]     [,188]     [,189]    [,190] #> [1,] 0.2388305 0.51373495 -1.2462478 -0.7289707  0.1781889 -0.4682504 -1.842155 #> [2,] 0.6411830 0.16847245  0.3589286 -0.8820403 -0.5572599 -0.3170562  1.281072 #> [3,] 1.9318125 0.07156801  0.5010366  0.6752448 -0.9563273 -1.1549839  1.436834 #>          [,191]     [,192]     [,193]     [,194]      [,195]    [,196] #> [1,] -0.1278018  1.1082323  1.2628372 -1.3570364 -0.14493887  1.261991 #> [2,] -0.2184282 -0.2629484 -0.3662892 -0.9697830  0.06823054 -2.573131 #> [3,] -1.4936809  0.5028431 -0.9805049 -0.7585624 -2.38039696 -1.816834 #>          [,197]      [,198]    [,199]     [,200]     [,201]     [,202] #> [1,]  0.4044721  0.22922719 -1.286602 -0.5662487  1.5588798  0.8856658 #> [2,] -1.8796431 -0.02531873  1.745520  0.3454469 -0.7497299 -1.8654236 #> [3,] -0.6813210 -0.79449644  1.591548 -0.5963089  1.3690933  1.3144307 #>          [,203]      [,204]      [,205]    [,206]      [,207]      [,208] #> [1,] -0.5923205  0.46125575 -0.07033911 -1.010015 -0.02391865  0.06744965 #> [2,]  0.9381717  0.59521950  1.47902685  1.333435  2.20303403 -1.41998894 #> [3,] -0.6556051 -0.07593109  1.03511757 -1.484239  0.30927848  0.53940900 #>          [,209]     [,210]       [,211]     [,212]      [,213]     [,214] #> [1,] -0.1753634 -0.4248157  0.482022953  0.1209203  1.43249682  0.1332025 #> [2,]  1.2592474  1.0339206  1.427976878 -0.7613919 -0.05893221  0.3237833 #> [3,] -1.5683064 -1.5654891 -0.004011914 -0.6434636 -0.51247024 -1.0761413 #>         [,215]     [,216]    [,217]      [,218]     [,219]    [,220]     [,221] #> [1,]  1.262024  1.0835645  2.158212 -0.01430677  0.3016057 -1.299335 -1.5059976 #> [2,] -1.039647 -0.2882938 -1.499646  1.16035535 -1.7233516  1.186400  0.3459893 #> [3,] -2.067553 -1.0050419  1.788385 -0.90297864 -0.9696301 -0.149082 -0.2263669 #>           [,222]     [,223]      [,224]    [,225]       [,226]     [,227] #> [1,] -0.60566608 -0.4085102 -1.56531810  1.331272  0.651007927 -1.4850829 #> [2,] -0.04366385 -1.0230878  0.35078665 -1.447625 -0.769136989 -0.7761473 #> [3,] -0.49006342 -1.3315817  0.07255692 -1.456620  0.005780438 -0.4339841 #>        [,228]     [,229]     [,230]     [,231]     [,232]     [,233]     [,234] #> [1,] 1.200150 -0.5926374 -0.6766562  0.8898306  1.1520743 -0.3285712  1.6729544 #> [2,] 0.165665  0.8059088  1.3322631  0.5630578 -0.3782571 -0.9271445 -0.3090993 #> [3,] 1.085333 -1.9237912  0.2349361 -1.1501729 -0.7955251 -1.1563608  1.6122649 #>          [,235]     [,236]     [,237]     [,238]    [,239]     [,240] #> [1,]  0.2912208 -1.4105611 -1.0282586 -0.6506217 0.8925905  3.0890447 #> [2,]  0.1271573  0.8119292 -0.2956995 -0.2795566 1.5725165  1.6884275 #> [3,] -0.3094219  0.1192139  0.5143125 -1.9457784 0.8574290 -0.9534524 #>          [,241]     [,242]     [,243]     [,244]    [,245]     [,246] #> [1,] -0.4623520 -0.2354889  0.3133764 -0.2953282 0.2153241  0.9766979 #> [2,]  0.5341431  0.8797484 -0.3123600 -0.7556752 1.1687882  0.1567267 #> [3,] -0.7628481 -0.2191983  0.7857231  1.6346242 0.5585701 -2.4383724 #>           [,247]    [,248]     [,249]     [,250]     [,251]     [,252] #> [1,] -0.04008738 1.2330909  0.4094739  1.3615756 -2.0809047  0.5154265 #> [2,]  0.03013338 0.4694162 -0.8870284  0.6131159 -0.1666708  0.9752321 #> [3,] -2.52793711 0.9209647  3.2888128 -1.5818591 -0.4984606 -0.8039097 #>          [,253]     [,254]     [,255]     [,256]    [,257]       [,258] #> [1,]  2.0285928  0.4826948 -0.6843864  0.1302305 -0.457745  0.007110198 #> [2,]  0.1937391 -0.8954609 -0.7783621  0.9495546 -1.757803  0.073126205 #> [3,] -0.9897715 -1.3074952 -2.2596860 -0.4514335 -1.989480 -1.076263707 #>          [,259]      [,260]      [,261]    [,262]     [,263]    [,264] #> [1,] -1.0441740 -0.90813105  0.96179189 0.6191620 -0.2278161 -0.345438 #> [2,]  0.4793101 -0.04325969 -0.04393227 0.1076686  0.7219439  2.036649 #> [3,]  1.1242602  0.18506674  0.66922125 2.2522900 -1.5889262  0.116380 #>          [,265]    [,266]     [,267]      [,268]    [,269]     [,270] #> [1,] -1.0574095 0.2931744  1.2604191 -0.05215281 0.4630977  0.8260057 #> [2,]  1.3578886 0.6823578 -0.3846493  1.10719952 1.3483180 -0.3935506 #> [3,]  0.8007942 1.2954852 -0.2156111  1.34679944 1.6795061  1.0546467 #>           [,271]     [,272]     [,273]     [,274]     [,275]     [,276] #> [1,] -0.01170301  1.2618423 -1.3439237 -1.1263537 -0.4938770  0.7141520 #> [2,] -0.14284834 -1.0428849  0.3732586  0.1123364  1.7710627 -1.1338641 #> [3,] -0.76321489  0.6052678 -0.2434597 -0.8793609 -0.4769019  0.4029873 #>          [,277]      [,278]     [,279]      [,280]     [,281]     [,282] #> [1,]  2.2745832 -0.57125914  0.5214440 -0.56463964 -0.3742309  1.2723859 #> [2,]  0.7179222  0.47303428  0.5564644 -0.06987011 -0.1074561 -0.3079673 #> [3,] -1.0495100 -0.08713701 -2.3528874 -0.03095176 -0.2353148  0.6489265 #>          [,283]     [,284]     [,285]   [,286]     [,287] #> [1,]  0.4840289 -0.1436214 -0.6637505 1.449283  1.0033447 #> [2,] -0.9770676 -1.2708880 -1.4125777 0.183322  0.8069936 #> [3,] -1.1649050 -0.4786872 -0.2337450 1.164816 -1.2177339 #>  #> , , 3 #>  #>            [,1]       [,2]      [,3]        [,4]       [,5]       [,6] #> [1,]  0.3347050  1.7487722  2.609689  0.67251528  1.0373971 -0.9328902 #> [2,]  0.8206232 -0.3373716 -1.485984 -0.02135153 -1.7707077 -1.3189091 #> [3,] -1.0688367 -1.0525526 -1.146021 -0.17535658  0.2260327  0.3189092 #>           [,7]        [,8]       [,9]     [,10]      [,11]      [,12] #> [1,] 0.8735801 -1.20538932  0.6066758 2.0175538 -0.3945662  0.4801368 #> [2,] 1.2943244  0.51473601  0.4472686 2.0686964  1.3137831  0.8837848 #> [3,] 1.0347829 -0.02342817 -1.3380774 0.2459427  0.8063982 -0.4843196 #>           [,13]       [,14]      [,15]      [,16]      [,17]       [,18] #> [1,]  0.5260736  0.04179001  0.5212724 0.81743393  0.6460365 -0.09811129 #> [2,] -0.3702022  0.47934222  0.6289946 1.93219479 -0.9010144  2.12037364 #> [3,]  0.7276737 -1.13104027 -0.5081403 0.06516625 -0.6326965 -1.44095761 #>          [,19]      [,20]      [,21]     [,22]      [,23]      [,24]      [,25] #> [1,] 0.3545965 0.47066596 -0.6782618  1.281091 -2.1645292 -2.0544461  1.3961926 #> [2,] 1.2646994 0.01813218  0.9785294  1.741435 -0.2071054 -0.6379841 -0.6198249 #> [3,] 0.2100988 1.62950614  1.5238605 -1.203644  0.9968801 -1.6981819 -1.3194022 #>           [,26]     [,27]      [,28]      [,29]       [,30]       [,31] #> [1,] -0.3848231 0.5490961 -0.1429138 -0.1905840  0.17953480 -0.34519326 #> [2,]  1.3305063 0.7096858 -1.6987419  0.8672159 -1.41266992 -0.07978167 #> [3,] -1.0097261 0.8948328  0.4443748  0.2607690 -0.01487705 -0.40694641 #>           [,32]      [,33]      [,34]      [,35]      [,36]      [,37] #> [1,]  0.3398874  0.3269715 -0.1711943 -0.9067112 -0.8985652  0.4638373 #> [2,]  0.6373320  0.4812219 -0.2835465 -0.2576031  1.6181089  0.6249652 #> [3,] -0.1005458 -0.8712963 -0.7508864 -0.1434384  0.5174409 -1.1318103 #>           [,38]       [,39]       [,40]      [,41]      [,42]     [,43] #> [1,] -1.4542333 -0.81934228  1.46580752  0.0691355  2.0991810 0.4697811 #> [2,]  0.1132787 -0.04100266  0.92740912  0.3691958 -0.4223923 0.3750282 #> [3,] -0.6633349 -1.63196821 -0.08311991 -0.4266313  0.2335793 0.8932676 #>           [,44]      [,45]      [,46]      [,47]      [,48]      [,49] #> [1,] -1.8532966 -0.8672348 -0.1290430  0.7706835 -0.6094833  1.1119606 #> [2,] -0.8548885 -0.4174758  0.8696805  0.4252580 -0.4974632 -0.7240693 #> [3,] -1.3635739 -1.4104747  1.1362164 -0.3263034 -1.0269602 -1.6248589 #>            [,50]      [,51]      [,52]     [,53]     [,54]     [,55]      [,56] #> [1,]  0.02488402 -0.2071111 0.06387997 1.0909752 0.3789019 0.4817409  0.4255071 #> [2,]  0.69496309  2.2581063 0.10720729 0.4875542 1.9073717 1.2618734 -0.4998402 #> [3,] -0.04467287 -0.9222863 0.65947544 1.0487658 0.4332098 0.9845255  0.2154767 #>           [,57]      [,58]       [,59]       [,60]      [,61]      [,62] #> [1,]  0.8344095  0.7643260 -0.28118474 -1.79484315  1.2291685  0.8051105 #> [2,]  0.5831797 -0.1941815 -0.01091615  0.49242529 -0.7097005  0.8744790 #> [3,] -0.8742499  0.8674182  1.75832845 -0.07894793 -1.6021055 -0.7812684 #>           [,63]        [,64]      [,65]       [,66]      [,67]      [,68] #> [1,] -0.3012102 -0.003751042 -0.1620582 -1.16510004 -0.2213020 -0.9238754 #> [2,]  1.1176996  0.500997988 -0.5877217 -0.51285481 -0.1804566  0.5419998 #> [3,]  1.3110950  0.489517961 -0.7645051 -0.03707873  1.4394326  0.1085938 #>           [,69]      [,70]      [,71]       [,72]    [,73]     [,74]      [,75] #> [1,]  0.9393848  1.4328361 -0.6008044  0.00917272 1.086598 0.2306963  2.0445784 #> [2,] -0.5331195 -1.1969006 -0.3357562  0.03774581 1.006882 0.5166192 -0.6027058 #> [3,] -0.2213493  0.3741006 -0.3749939 -1.59448840 1.429841 0.2158648 -0.2588036 #>            [,76]      [,77]      [,78]      [,79]      [,80]       [,81] #> [1,]  0.21305807 -0.4413474 -1.0239915 -0.2111765  0.3907071  0.02932810 #> [2,] -0.02519977 -0.5855631 -0.8313408 -0.1087325 -0.4296339 -0.09656446 #> [3,] -0.50638046 -1.2748331 -0.6863448  0.7447672  0.5138482 -0.29852426 #>           [,82]      [,83]      [,84]       [,85]       [,86]      [,87] #> [1,] -0.4781929 -1.1463577  0.8682431  1.16128054  1.49165811 -0.5915180 #> [2,] -0.6124988 -0.2141477  1.4358773  1.16070749  0.01160798 -0.4249218 #> [3,] -1.3517790  0.9891201 -0.4592922 -0.07213522 -0.67545589 -0.5143897 #>          [,88]       [,89]      [,90]     [,91]      [,92]      [,93] #> [1,] 0.5623988 -0.85460474  0.9668451 0.4911380 -1.0358518  0.3636295 #> [2,] 0.9086754 -0.05374225  0.4301262 0.2988858  0.2433215 -0.3909443 #> [3,] 0.2852584  0.35158676 -0.2367008 0.2794622 -2.9864225 -1.4393347 #>           [,94]      [,95]      [,96]      [,97]     [,98]      [,99] #> [1,]  0.4924308 -0.3921206 -0.5699588  1.3701960 0.5538226 0.08971086 #> [2,]  1.6689690  1.2195683  0.2823147 -0.3050963 0.4200408 1.17607929 #> [3,] -0.5809015  0.7411731 -0.1809417 -2.3176815 1.1869185 1.67343604 #>          [,100]     [,101]     [,102]    [,103]     [,104]     [,105] #> [1,] -0.2740984 -0.8888838 -2.1458291 0.6644693  0.7694360 -0.5418842 #> [2,]  0.1574524 -0.3295493  0.6939251 0.7113068 -0.6786212  2.4033038 #> [3,]  1.4501752  2.1098231 -0.8716645 0.5355249  1.8139933  0.2779000 #>          [,106]      [,107]    [,108]    [,109]   [,110]    [,111]     [,112] #> [1,] -0.7297295  0.01331803 0.5175216  2.165961 1.023691 1.4452096  1.3188603 #> [2,]  0.6851838 -0.34081920 0.1610084  1.447235 2.336759 0.1756657 -0.5339573 #> [3,]  1.2691904 -0.01243297 0.1498868 -1.982619 1.698710 0.5656663  0.6962704 #>          [,113]    [,114]     [,115]     [,116]     [,117]      [,118] #> [1,] -0.5645328 1.8489852 -0.6925001  1.0001649  0.1699767  0.07817157 #> [2,]  0.8061040 0.1933836  0.6990057 -0.4043950  0.6619814  0.85934956 #> [3,]  0.2334219 0.3365883 -1.7858511 -0.1999204 -0.3214902 -0.56237363 #>          [,119]     [,120]     [,121]     [,122]     [,123]     [,124] #> [1,]  0.4638040  0.3476944 -0.9788864  2.1035823  1.1210383 0.14144008 #> [2,] -0.8410076 -0.9079654 -0.5242565 -0.9913434 -0.6678477 0.77569481 #> [3,]  0.5219989 -0.6875723 -0.4916220  0.5224517  0.7702572 0.09834775 #>          [,125]     [,126]     [,127]     [,128]     [,129]     [,130] #> [1,] -1.1120639 -0.1667638 -0.6755217  1.2827162 -0.6212966 -0.1448378 #> [2,] -0.5261326  1.0828502  1.7092126 -0.9636332  1.0657668 -0.2354567 #> [3,]  0.1731059  1.0881039  1.1812124  0.8081469  1.0744094 -1.0153351 #>          [,131]      [,132]    [,133]    [,134]    [,135]     [,136]     [,137] #> [1,]  2.0016464  0.37466970 -1.683390 0.2384491 0.7094164 -0.4520819 -0.4601430 #> [2,] -0.4730539 -0.50539445  0.931294 0.1106509 0.3469449  0.3966567 -1.1963906 #> [3,] -1.9381241 -0.02994267 -2.038297 0.1528688 0.4002622 -0.7491999 -0.9072381 #>         [,138]    [,139]     [,140]      [,141]     [,142]     [,143] #> [1,] 0.3996994 0.7924211  0.2840399  0.42785301 -0.4150173 -1.2780222 #> [2,] 3.1681293 0.7070589  0.2777967 -0.03943074  1.1545342  0.7251527 #> [3,] 0.3275483 0.5184164 -0.3793013 -0.74971097 -1.3067754 -0.3370081 #>          [,144]     [,145]      [,146]     [,147]      [,148]     [,149] #> [1,] -0.3317047 -2.0272132  0.41773162 -0.4055001  0.78501572 -0.3071337 #> [2,] -0.2699073  0.5325965  1.21712298  0.4983854 -0.19728912 -1.4685463 #> [3,] -0.2120977 -2.3373351 -0.03624633 -0.8272539 -0.06972009 -0.9508945 #>          [,150]      [,151]    [,152]    [,153]     [,154]    [,155] #> [1,] -0.4251057  0.08389042 1.1281506 1.1214795 -0.5141934 -1.245483 #> [2,] -0.5469172 -0.09601743 0.1062872 2.0119606 -0.2439614 -1.115570 #> [3,]  1.0154458  0.32385163 0.8450412 0.4235404 -0.2235495  1.658780 #>           [,156]      [,157]     [,158]    [,159]     [,160]      [,161] #> [1,]  1.50600710  0.08135925  0.4574625 0.9380073 -0.4762424 -0.09640324 #> [2,] -0.52645438  2.39196874  0.6244868 0.9498669 -1.0887751  0.30550388 #> [3,] -0.05897117 -0.30446738 -0.8173317 1.1293315 -0.8390556  1.60092039 #>          [,162]     [,163]     [,164]     [,165]     [,166]      [,167] #> [1,]  0.9633243  1.1475295  1.0875706  0.7202028 -0.2749603  0.04419156 #> [2,] -0.2448148 -1.3785622 -0.6103964 -1.6145114  2.0975363  0.18957662 #> [3,]  0.2806651 -0.4008065  0.7444521  0.3627004  0.4777662 -1.06400209 #>            [,168]     [,169]      [,170]     [,171]    [,172]      [,173] #> [1,]  0.001071787  1.5138421 -0.84398120 0.02505655 -1.149519 -2.53788382 #> [2,]  1.152619250 -2.6560467  0.08876996 1.88039946 -2.440941 -0.08765908 #> [3,] -0.413196738  0.2213339 -0.38245548 1.64779444  1.423720  0.56155828 #>          [,174]      [,175]    [,176]     [,177]     [,178]      [,179] #> [1,] -1.4168405 -0.07125414  1.418739  0.9735327 0.23415858  0.76470907 #> [2,]  1.1173752 -2.13247989 -1.303921  0.3522002 1.16008059  0.09841423 #> [3,]  0.5975336  0.40607953 -1.152616 -1.5065694 0.03707072 -0.86608507 #>           [,180]     [,181]     [,182]      [,183]      [,184]      [,185] #> [1,]  0.03413255 -0.1808639 -1.5076600  0.52953047 -0.16662540 0.008913632 #> [2,]  2.05263532 -0.9472502 -0.1527872 -0.26123227 -1.12288780 0.848207374 #> [3,] -0.09219239 -0.5249814 -1.0088589 -0.06277523 -0.09921702 0.420843307 #>          [,186]      [,187]     [,188]     [,189]     [,190]     [,191] #> [1,]  1.5008885  0.15640042 -0.1911642 -0.3329995  1.5429128 -0.1179576 #> [2,] -1.4975454  0.07494509 -1.1271904  0.2978450 -0.6912580  1.0298130 #> [3,]  0.3981533 -1.20509351  0.5234459 -1.7559933 -0.3343631 -2.1095866 #>           [,192]     [,193]    [,194]      [,195]       [,196]     [,197] #> [1,]  0.12368294 -0.2871678 1.8338256 -0.04490822  0.252441723  0.3144442 #> [2,] -1.01428978  0.1993275 0.6405130  0.31649234 -0.495829806 -1.4220857 #> [3,]  0.06364549 -0.2040131 0.1386681  0.72417361  0.001536978  1.2209871 #>          [,198]     [,199]      [,200]     [,201]     [,202]     [,203] #> [1,]  1.3368595  0.7769994 -0.30784039 -0.5720423 -0.5501041 -0.4066292 #> [2,]  0.3860003 -1.6223181 -0.73160719  0.4455036  1.0645595 -1.0941072 #> [3,] -0.9774498  0.2270750 -0.04441109  0.5508590 -0.3828810 -0.3271523 #>          [,204]    [,205]    [,206]     [,207]     [,208]     [,209]     [,210] #> [1,] -0.1574316  1.006273  1.166369 -0.2569182 -0.1804672  0.7406309  0.2483158 #> [2,] -0.1505625  1.016355  0.111056 -0.1839864 -2.0995984 -0.2860683  1.8833259 #> [3,] -0.7694197 -1.591304 -1.200676  0.4170899 -0.8513941 -1.0438370 -1.1527186 #>         [,211]     [,212]     [,213]     [,214]     [,215]     [,216] #> [1,] 0.3129582  1.3886630 -0.2665550 -0.3450564 -0.6201325 -0.9545847 #> [2,] 0.6081998  0.2599937  0.7798807  0.2845357  2.1098995  0.2226315 #> [3,] 0.6116879 -0.7217312 -1.0520478 -1.2729420 -0.5107585  2.3032639 #>          [,217]      [,218]     [,219]     [,220]      [,221]    [,222] #> [1,] -0.2189626 -0.09158695 -1.1745211  0.8518115  1.06921532 0.8662262 #> [2,] -1.5738002 -0.45908241 -0.1498308 -1.2574490 -0.05566195 0.5623222 #> [3,]  1.1765769 -1.31791989  0.6565159 -0.1979030  0.58627765 0.5695445 #>          [,223]     [,224]     [,225]     [,226]    [,227]     [,228] #> [1,]  0.5313326 -0.4585412 -2.4186944 -1.4392566 0.5760536 -0.9908012 #> [2,]  1.6533923  0.8573665 -1.2239648  0.3054223 0.8339860 -0.4777366 #> [3,] -1.6192337 -0.6061468  0.3688937 -0.3055965 0.9131565  1.3118564 #>          [,229]     [,230]     [,231]     [,232]      [,233]     [,234] #> [1,] -0.4385473  0.2584497 -0.2460653 -0.3512899 -0.02285664 -0.8244070 #> [2,] -0.4610666 -1.2147876  0.7856526 -1.2875524  1.02169300 -0.4089930 #> [3,]  1.2167878  0.2298401  1.7525747  0.1673303 -0.26970611 -0.9090023 #>          [,235]     [,236]     [,237]     [,238]    [,239]     [,240] #> [1,] -0.4111362 -0.2594500 -0.6413173 -0.5525189 0.5663529 -0.1839157 #> [2,]  0.8913271 -0.9828200 -0.3039544  0.6675964 1.3148444  1.1731480 #> [3,]  0.1389252  0.6865557  1.6684562 -0.3656412 1.1613419  0.1156743 #>          [,241]     [,242]     [,243]     [,244]     [,245]     [,246] #> [1,]  0.5381214 -2.3912872  0.3378606 -0.1848469 -0.3178806  0.2185363 #> [2,] -1.1524445 -0.7118931 -1.0625477 -1.6712894 -0.6813330 -0.1409290 #> [3,] -0.7593099  0.7548525  1.1794196 -0.9502273 -0.2846708 -0.4784358 #>          [,247]      [,248]     [,249]     [,250]      [,251]     [,252] #> [1,] -0.6078996  1.32089770 0.05034611 -0.6495541  0.09211274 -0.7258935 #> [2,] -0.0169646 -1.64634738 1.06775739  1.4375686  0.43274760 -0.4242802 #> [3,] -0.1493446 -0.01753061 0.19694386 -1.1958993 -1.51588465 -0.3055146 #>           [,253]     [,254]      [,255]     [,256]       [,257]     [,258] #> [1,] -1.17585047 -1.0770853 -0.35350699 -0.6778236  1.351791734  0.1864462 #> [2,] -0.65592305 -0.7654161  1.57241739 -0.8744990 -0.002119141 -0.8111588 #> [3,]  0.04016109 -0.5122653  0.03179916 -0.5532040  0.218040094 -0.7311735 #>          [,259]     [,260]   [,261]    [,262]      [,263]     [,264] #> [1,]  3.0480022  1.0682326 1.978473 -1.334796 -1.45662181 -0.3303531 #> [2,]  0.9528221 -0.8025782 1.161335 -2.098452  0.32492474 -1.1520846 #> [3,] -1.6689820 -0.6633992 2.258001 -1.056175 -0.07924128  0.1329151 #>           [,265]     [,266]     [,267]     [,268]     [,269]     [,270] #> [1,]  1.51795489  1.7282149 -0.1097420  1.0506967  0.3590416 -0.2461870 #> [2,]  0.08729334  0.3604085  0.9646312  1.2411250 -0.2439218 -0.5216282 #> [3,] -0.51983387 -0.5368314  0.9873976 -0.4807456  0.6061622 -1.4819309 #>          [,271]     [,272]     [,273]     [,274]     [,275]     [,276] #> [1,] 1.09550633  0.6036767  1.5907317  1.1172556  0.2202857 -1.7091816 #> [2,] 1.36434840  1.7648905 -0.9598636 -1.2602299  0.5400743  1.7121152 #> [3,] 0.08809641 -0.4217151 -0.1626247  0.1483066 -0.4637706  0.8678603 #>           [,277]     [,278]     [,279]     [,280]       [,281]     [,282] #> [1,] -1.65889201 -1.6817151 -0.9919416 -0.5049211  2.505528972 -0.3254243 #> [2,]  0.01023126 -1.3375775 -1.1415358  1.3779875 -0.542950432  0.4632523 #> [3,]  1.13613298 -0.2529498  0.9272322 -2.0516114 -0.001384692  1.2587002 #>          [,283]    [,284]    [,285]     [,286]     [,287] #> [1,] -0.9646334 0.2168814 -1.053243 -1.5482172 -0.0611528 #> [2,]  0.7710138 1.7817153 -1.011415  1.7041642  0.6003268 #> [3,]  0.6695757 1.9569768  2.564227  0.4445618 -0.5445053 #>  #> , , 4 #>  #>            [,1]       [,2]       [,3]       [,4]        [,5]       [,6] #> [1,]  0.7934934 -1.4558311 -1.4920087 -0.1905262  0.06904101  0.7013917 #> [2,] -0.5633756 -1.0915493 -0.1143482 -1.0477840 -0.84084775 -1.3036646 #> [3,] -0.1779372  0.1031723 -0.1714239  0.1664697 -0.92054192 -1.2746157 #>            [,7]       [,8]        [,9]       [,10]      [,11]      [,12] #> [1,]  1.6386450  0.3243433 -0.02776081 -0.07839975 -0.3384078 -0.2082825 #> [2,] -0.7006493 -0.4414253  1.33673815  0.34026348 -0.9793620  1.2775440 #> [3,] -0.8862608  2.1487142  1.11840406  0.22115935  0.1674013 -0.6236265 #>          [,13]      [,14]      [,15]      [,16]      [,17]      [,18] #> [1,] -1.191343 0.43153306 -1.0374488 -0.7299355  0.1755741  1.4574050 #> [2,] -1.332375 0.26319154 -0.0577138  1.7341296 -1.5425795  1.5637499 #> [3,]  1.513192 0.03919735  1.2315292  0.8556678 -0.5168948 -0.1333093 #>           [,19]       [,20]      [,21]      [,22]    [,23]      [,24] #> [1,]  1.5399739  0.06000438  1.0532732  0.2989808 1.793452  0.6883349 #> [2,] -0.2570305  0.90117628 -0.2622709  0.1301735 2.519853 -0.9906059 #> [3,]  0.4384583 -1.11957804  0.3354284 -0.7014009 0.047936 -0.2221882 #>           [,25]      [,26]      [,27]      [,28]      [,29]     [,30] #> [1,] -0.2300564  0.3910794 -1.0295931  0.2302343 -0.7997557 0.7295692 #> [2,]  0.2325424 -1.3903190  0.1199574 -0.9262713  0.8545925 0.2509394 #> [3,]  0.6152199  0.6529781 -1.7501351  0.3126295 -1.4444985 0.4897944 #>           [,31]       [,32]       [,33]      [,34]      [,35]      [,36] #> [1,]  0.3895942 -1.11340593 -0.06592158 -0.1338636 -0.1161866  0.4891679 #> [2,] -0.8141992 -0.09035816 -0.03934028  0.2603712 -0.2828441  2.2495092 #> [3,]  0.2076375  0.95292309 -0.90160315  0.4709589 -2.8876536 -1.3845743 #>           [,37]      [,38]        [,39]      [,40]      [,41]      [,42] #> [1,] -0.1251193 -0.5648370 -0.008052225 -0.7425177 -0.5541542 -2.6938200 #> [2,]  0.4009698 -0.5313962  0.132553787 -0.2135927  0.2661334 -1.0278578 #> [3,]  0.7758630  0.4111158  0.360378926 -0.7582617 -0.8125011  0.3713507 #>           [,43]      [,44]       [,45]      [,46]      [,47]     [,48] #> [1,] -2.4953342 0.02323034  0.07771288 -0.9886500 -0.8296701 0.2386994 #> [2,]  0.9696401 0.11702845  0.72657105 -1.4625687 -0.3728950 1.4725796 #> [3,]  0.8403769 1.03005961 -0.55557255 -0.3362927  0.2814504 0.7949622 #>           [,49]      [,50]      [,51]      [,52]       [,53]       [,54] #> [1,] -2.1750162 -0.2732579 -0.8563451 -0.5018155 -0.94143178 -0.86122808 #> [2,] -0.2015514  0.8842724 -0.1806357 -0.8225715  0.73054781  0.01760765 #> [3,]  0.4929214 -1.0267091  0.9437627  1.2162436  0.07006137  0.26317253 #>          [,55]      [,56]      [,57]      [,58]      [,59]      [,60] #> [1,] -1.367883 -0.2996025  1.2930943  1.3438503  1.1457991 -1.4425387 #> [2,] -1.542909  0.5993210  1.4123549 -0.1645857 -0.9834870 -1.4548256 #> [3,] -1.948519 -0.6783632 -0.3742719 -0.7957010 -0.1957869  0.3003748 #>            [,61]      [,62]      [,63]        [,64]      [,65]      [,66] #> [1,] -2.71154070 -2.5175196  0.6381282  0.005174744  0.3227092 -0.7680989 #> [2,] -2.62380387 -0.1585066 -0.9318849 -0.027637765 -1.9080548  1.7085663 #> [3,]  0.07421697  1.4094375 -0.2949185 -0.416829261 -0.5492085  0.6251649 #>          [,67]      [,68]      [,69]      [,70]      [,71]       [,72] #> [1,] 0.5660903 -0.2303017 -2.2099418 -2.4137303  0.2694732 -0.05599642 #> [2,] 0.5487256 -0.7843057 -0.1850127 -1.1931642 -2.3194603 -1.17671926 #> [3,] 0.7875827  2.0307672  1.3492200  0.1975904  1.8443333  1.17349398 #>           [,73]      [,74]      [,75]      [,76]      [,77]     [,78] #> [1,] -0.1472254 -0.5348552 -0.1971420  1.1192855  0.3764755 0.1537871 #> [2,]  0.4919622 -0.5990053  0.2916042 -0.7168356  0.3114188 1.5550446 #> [3,]  0.2784740 -0.4451632 -0.4308188 -1.2074415 -0.4912510 0.7780072 #>           [,79]      [,80]     [,81]     [,82]      [,83]      [,84]      [,85] #> [1,] -0.8922321  0.3750489 0.7486155 0.7563698 -2.7623456  0.3985712 -0.9613526 #> [2,]  2.5472141 -0.1375454 1.9257077 0.4088863  0.4508614 -1.2790304  1.5810889 #> [3,] -0.1472166  0.1862047 0.8777821 2.6861402  1.3740536  0.6650284  1.1501470 #>           [,86]      [,87]      [,88]      [,89]      [,90]      [,91] #> [1,] -0.7196329  0.3971334 -1.0719678 -0.7267814 -1.0651263 -0.3676955 #> [2,]  1.3609019 -0.6698079  0.6061325 -0.5389310 -1.1411135  0.4597519 #> [3,]  1.4659196  2.2553644  2.7818742  0.1453834 -0.2359434 -0.2794848 #>          [,92]      [,93]      [,94]       [,95]      [,96]      [,97] #> [1,] 1.0056907  0.3907044 -0.8484105 -1.38879504 -0.2730993 -2.0751267 #> [2,] 1.7694106 -1.4777314  0.1816705  0.05925081  0.4633838 -2.0396762 #> [3,] 0.1118922  0.6534593 -1.6678355 -0.88963659 -0.1744115 -0.8273091 #>           [,98]       [,99]     [,100]     [,101]      [,102]     [,103] #> [1,] -0.6736736 -2.13376008 -1.0016774  0.0350597 -0.41500377 -0.8118913 #> [2,] -0.4182522 -0.08074468 -0.3229695 -0.1452902 -0.26504144  0.5231486 #> [3,] -1.3854959 -1.61172592 -0.4761807 -0.1171894 -0.09576419 -0.9809954 #>          [,104]    [,105]     [,106]     [,107]     [,108]     [,109] #> [1,] -2.5615984 0.1399671  0.7920153  0.1643476  0.1589631 -0.2699882 #> [2,] -0.1965458 0.6508695 -0.7817720 -0.5078839 -0.3724865  1.5370717 #> [3,] -2.0013695 1.6419256 -1.0118833  0.8753751 -2.0179982  0.7970976 #>          [,110]     [,111]      [,112]     [,113]    [,114]     [,115] #> [1,] -0.8905880 -1.2507351 -0.50721573 -1.2064840 -2.481505 -0.5996291 #> [2,]  0.5763357  0.1610629 -0.09259966  0.4208060  1.238346  1.0235658 #> [3,]  0.5806858  0.4060253 -1.17010917 -0.6352085 -1.230576 -0.8095171 #>         [,116]      [,117]      [,118]     [,119]      [,120]     [,121] #> [1,] -0.171149  1.15558724  0.04011984 -0.1572277 -0.76769396  0.2338058 #> [2,]  1.294253 -0.03855852 -0.19476585 -0.8874279  0.04913796 -1.3990259 #> [3,] -1.284005  0.74026268  0.21653438  1.3712016  0.66563225  1.6939730 #>          [,122]      [,123]      [,124]     [,125]     [,126]     [,127] #> [1,] -1.6289355  0.08140666  0.22538518  0.1261643  0.1638141  1.4257817 #> [2,] -1.4258725  0.95561607 -0.92909251 -2.9517032  0.4581020  0.9200052 #> [3,]  0.8025211 -0.70186374  0.09150084 -0.4920396 -0.7324395 -2.0567068 #>           [,128]     [,129]     [,130]     [,131]     [,132]   [,133] #> [1,] -0.05897442 -0.3197417  1.2290008 -0.3803184 -0.2113850 1.091346 #> [2,]  0.97783729 -0.9814361 -0.3727503  0.4254213 -0.8447907 0.484852 #> [3,] -0.54907533 -1.0930254 -0.4293656 -0.3236630  0.9148115 1.144412 #>          [,134]     [,135]     [,136]      [,137]     [,138]    [,139] #> [1,]  0.4657076  0.4057027  0.1977846  0.04858621 -0.2928409 0.2616953 #> [2,]  1.6902349  0.7468895 -1.3698124 -0.04376511  1.4812227 0.5650319 #> [3,] -0.8809795 -0.9458008  0.4321671 -0.47811377 -0.4316402 1.3154056 #>          [,140]     [,141]     [,142]      [,143]     [,144]     [,145] #> [1,] -0.9001629  2.4054768 -0.4072695 -0.53998145 -0.1302951  1.4619751 #> [2,] -0.2253628 -0.7382938  1.7358083 -0.32270647  0.6631110 -0.3476899 #> [3,] -0.2367499  1.5742122  2.1036864  0.03648995 -0.1805650  0.8529184 #>          [,146]     [,147]     [,148]     [,149]     [,150]     [,151] #> [1,] -0.1856838 -0.3546352 -0.9659299 -1.2262135 -0.1503950  0.7186827 #> [2,] -1.0660836  0.9369016  0.2809311 -2.0489089 -0.3754606 -0.2167629 #> [3,]  0.5688315 -1.2485364  1.7179400  0.1830332 -0.2937036 -1.0118269 #>          [,152]      [,153]      [,154]      [,155]     [,156]     [,157] #> [1,] -1.1074173 -2.23645488  0.76242931 -1.61501003 -1.6030259 -0.5207526 #> [2,] -1.0254479 -0.08796472  0.05115105  1.32136025 -0.6963487  0.6895657 #> [3,]  0.4383174 -0.76834355 -0.04444440  0.07311965 -0.2178307 -0.9770280 #>           [,158]       [,159]     [,160]      [,161]      [,162]     [,163] #> [1,] -0.89369247 -0.737977080  1.3633868 -1.03703030 -0.91555505 -0.3389500 #> [2,]  0.05182462  0.016640037  0.7196872  0.04308037 -0.06346055 -0.6657919 #> [3,] -0.76822435  0.007033898 -1.3969968 -2.50886481 -1.54441047  0.2534342 #>         [,164]     [,165]     [,166]     [,167]    [,168]     [,169]     [,170] #> [1,]  0.133993 -0.6597120  0.1284463  0.9531702 0.6180184 -2.1583704  0.2087425 #> [2,]  1.430974  1.0458578 -0.1513506 -0.6570246 0.0504301  0.6028539  1.0171765 #> [3,] -1.325267 -0.9801132  1.2840834  1.1075540 0.5627075  1.4251571 -0.5007636 #>          [,171]     [,172]      [,173]      [,174]     [,175]     [,176] #> [1,]  0.8366596 -1.0009115 -0.08951541  0.01835868 -0.5678596 -0.3167821 #> [2,]  2.7552289  0.1495018 -0.63973803 -0.37316877 -0.7879823 -0.2661036 #> [3,] -1.0667402 -0.3576611  0.18783039 -0.93447199  0.9108158  1.7329343 #>          [,177]     [,178]     [,179]     [,180]      [,181]      [,182] #> [1,]  0.2491306 -0.2453651  0.5949964 0.47611514 -0.03234655  0.51365614 #> [2,]  0.5223897  0.3370469  1.1604799 1.98948669 -0.74927370 -0.23708295 #> [3,] -0.6680080  0.2278752 -1.6450132 0.01083099 -0.80081674  0.06117196 #>          [,183]    [,184]     [,185]     [,186]     [,187]     [,188] #> [1,]  1.3565190 2.2978683  1.2908672 -1.5314905  2.4583483 0.23352955 #> [2,] -0.9744887 0.2019041 -0.9956484  0.5350238  0.5226997 1.20645883 #> [3,] -0.6499256 0.2458192  1.6577160  0.7401458 -0.3932475 0.01813942 #>          [,189]     [,190]     [,191]     [,192]     [,193]     [,194] #> [1,] -0.1156415 -1.7204100  1.3582825  0.3940044 -2.1487024 -0.8311584 #> [2,] -1.6805615  0.3895405  0.2815839 -1.8614452 -0.4155887  1.0689482 #> [3,]  1.7515134  0.4959821 -0.3373969 -1.3060505 -2.3487420 -0.4403895 #>         [,195]     [,196]     [,197]     [,198]      [,199]     [,200] #> [1,] 0.4497305  0.9978457  0.2144815  0.4602440 -0.80009849  0.2402377 #> [2,] 1.7061998 -1.0831832 -0.3138944  1.3974389  0.06935767 -1.4878176 #> [3,] 0.3729652  0.9281525 -1.2972056 -0.2113556 -0.19787463  1.3472010 #>           [,201]     [,202]     [,203]     [,204]    [,205]     [,206] #> [1,] 0.085544190 -0.3704552  1.4034470  0.8618825 -1.568423 -0.6088071 #> [2,] 1.489087956  0.5305014  0.1106226 -1.8344123  1.086293 -0.9958375 #> [3,] 0.002999937  0.1130053 -0.3356502  0.6702899  1.667893 -0.5418121 #>          [,207]       [,208]      [,209]     [,210]      [,211]     [,212] #> [1,]  0.2269626 -0.073575660  2.06108069  1.4986619 -0.58743869 -0.9060006 #> [2,] -0.7670169  0.003929815 -0.06179832  0.9660848 -2.05322352  0.7973284 #> [3,] -0.4776537  0.456106770  0.55927190 -0.1183438 -0.09718932  0.9211868 #>         [,213]     [,214]    [,215]     [,216]     [,217]     [,218]     [,219] #> [1,] 0.5552113 -0.2407569 1.5183194  0.3761376 -0.1639555  0.2096227  2.2330269 #> [2,] 1.9001779  0.8972068 0.2487841  0.9219002  0.7511173 -2.4722898 -0.7773725 #> [3,] 1.3264505  2.3337425 0.2384047 -0.3251661 -2.1736278  0.3346898  1.1863304 #>           [,220]    [,221]     [,222]     [,223]     [,224]    [,225] #> [1,] -0.02990408 0.8237104  0.3724392 -0.2816777 -0.8315908 -1.335220 #> [2,]  1.52982711 0.5260634  0.9435885 -0.1743198 -0.4707142 -2.403349 #> [3,]  3.26366482 1.5934563 -0.1009079  0.8790382  0.2977280  1.194524 #>          [,226]     [,227]     [,228]    [,229]    [,230]    [,231]     [,232] #> [1,] -0.9106248 -0.1730765  1.4530009 0.2086341 0.9225361 -0.173772  1.9962505 #> [2,] -0.2025954 -0.3689496  0.5581595 0.2297797 0.7032414  1.123506 -0.1287836 #> [3,] -0.1590868 -1.8477828 -0.2777664 0.8392805 1.6238491  0.228884  1.1264890 #>          [,233]     [,234]     [,235]     [,236]     [,237]     [,238] #> [1,] -1.1655880 -0.4272488 0.01897643 -0.3247489  0.2265197  0.9162528 #> [2,]  0.4707445 -0.4160373 0.10472209 -0.4073257 -0.2380610 -0.2013681 #> [3,]  0.8890106  0.4564394 0.62621680  2.4992770 -0.0718940  0.1673118 #>          [,239]     [,240]     [,241]     [,242]      [,243]     [,244] #> [1,] -1.0300515 -1.8891711  0.5483676  1.3349962 -0.01442788  0.3705576 #> [2,] -0.4809135  0.1667013 -0.2593280 -0.3531569  0.93748622 -0.6879857 #> [3,]  1.1986063 -0.8652008 -1.4589260  0.7427106  1.24315144  0.6774012 #>          [,245]     [,246]      [,247]     [,248]     [,249]     [,250] #> [1,] -0.8044090 -0.5090986  0.37798850 -2.4662987 -0.5623104 -0.4886599 #> [2,] -0.1681208  0.5941549 -0.42572055  2.3180543 -1.4181343  1.1866253 #> [3,] -0.6346603  0.6421167 -0.06846486 -0.7846295  1.2503091  0.4064389 #>           [,251]     [,252]   [,253]     [,254]     [,255]   [,256]     [,257] #> [1,] -0.62338866  0.5912440 1.214698  0.1075257  0.7126272 2.259578 -0.7257814 #> [2,]  0.03175416 -1.2077529 1.149881  0.2326399 -1.3831398 1.367423 -0.7151340 #> [3,] -1.05918859 -0.2509787 0.872929 -0.6055348 -0.9146050 0.780752  1.8229125 #>          [,258]    [,259]      [,260]     [,261]     [,262]    [,263]    [,264] #> [1,] -0.3007107 -1.956825  0.27240891 -0.4335435  0.8297035 0.4162713 0.6215762 #> [2,]  0.7384186 -0.426326 -0.45103907 -1.4025637  0.1157241 0.6009621 0.7368836 #> [3,]  1.1235830  1.336889 -0.00535798 -0.8890166 -0.7122266 0.3481709 0.2495381 #>          [,265]       [,266]     [,267]     [,268]      [,269]    [,270] #> [1,] -0.2210753 -0.005144552  2.1639596  1.4103257  1.09035208 0.5670249 #> [2,] -3.4900670  0.642102754 -1.7115876  0.9688232  0.08949185 1.8581129 #> [3,]  0.4405656 -0.551639165  0.1575651 -0.6246614 -0.93680950 1.0930604 #>           [,271]       [,272]      [,273]    [,274]     [,275]     [,276] #> [1,] -0.08694487  0.006046994 -1.39095146 -0.167553 -0.1455613 -0.3566060 #> [2,] -0.25350375 -1.000477855  0.08581140  1.023287  2.0557808 -0.5946989 #> [3,] -1.05460406 -1.670141658 -0.01355923  1.388081 -0.4453792  0.4731596 #>          [,277]      [,278]      [,279]     [,280]     [,281]      [,282] #> [1,] -0.4281454 -0.05445166 -0.01259244 -0.1457651 -2.7869615 -0.05428787 #> [2,]  0.7885154  0.25750790 -0.94451302 -0.9696989 -0.8124720  0.80289439 #> [3,]  1.7154017 -0.02747286  0.73944259 -0.2047740 -0.2549082  0.10501983 #>          [,283]     [,284]     [,285]     [,286]    [,287] #> [1,]  0.2703156  1.0287254  0.4992837 -0.1247665 1.4915381 #> [2,] -0.1845830  0.4794859 -0.4114692  0.5344207 1.0829689 #> [3,] -0.2357144 -1.0004808 -0.4623853 -1.3563772 0.6280441 #>  #> , , 5 #>  #>            [,1]      [,2]       [,3]       [,4]      [,5]       [,6]       [,7] #> [1,]  0.4654008  0.788590  0.6649095  0.1118930 -2.422335 -0.2522510  0.5157262 #> [2,] -0.7879557 -2.854885 -0.5186241 -0.1551842 -1.269912 -1.3580657  0.7907112 #> [3,]  1.3594229  2.817933  0.2255785  1.4823086  1.108581  0.1107773 -1.3263683 #>            [,8]       [,9]      [,10]      [,11]     [,12]       [,13] #> [1,]  0.1237663  0.3815505  0.4223542  1.5663977 0.1216914  0.07583313 #> [2,] -3.1258755  0.6714219 -0.5129492 -0.9218252 1.0724756 -0.64028238 #> [3,] -1.2370677 -0.1826224 -0.2532743  1.1932709 1.2720110  0.49697432 #>           [,14]     [,15]      [,16]      [,17]      [,18]      [,19] #> [1,]  0.3698760 0.3718064 -0.5567403  0.4494315 -0.2644333  0.3309682 #> [2,] -0.8628856 0.9119903 -1.0241617 -0.4477388 -0.2652521  1.6028799 #> [3,]  1.0034899 0.6273903  1.7625233 -0.2817522 -2.5490399 -0.9542623 #>           [,20]     [,21]      [,22]      [,23]      [,24]    [,25]       [,26] #> [1,] -0.2317282  0.224537  0.1256114 -0.9686771 -0.5131690 0.230860  0.91856643 #> [2,]  1.8125048 -1.055479 -0.7100761 -0.4213547  0.1671644 0.084363  0.05271385 #> [3,]  0.6168706 -1.518314 -1.3946322 -0.6994633  1.8357211 1.326579 -0.17897687 #>           [,27]      [,28]      [,29]     [,30]      [,31]     [,32]      [,33] #> [1,] 1.95289036 -0.0706005 -1.8164501 0.5236509 -0.2551286 1.1944448 -1.0111413 #> [2,] 0.01196306  0.3698322 -0.4823762 0.1303573 -0.4285595 0.7279017 -0.5302169 #> [3,] 0.95634004  0.9599209 -0.9008705 1.4512134  0.1200659 1.0974470 -1.8421745 #>           [,34]        [,35]      [,36]     [,37]     [,38]       [,39] #> [1,]  0.4284283 -0.009006111 -0.7301973 0.7154055 1.8750603  0.26241344 #> [2,]  0.1777373  1.096987727  1.1784666 1.0540584 0.7922771  0.03448622 #> [3,] -1.9417415 -1.293269287  0.1831241 0.7446334 1.1806916 -2.00290571 #>            [,40]      [,41]     [,42]     [,43]     [,44]      [,45] #> [1,]  0.64598969  0.5494247  1.434615 3.8475956 0.6473026 -0.4579367 #> [2,] -0.01649236  0.3811194 -1.857701 1.2693773 0.7059673  1.4399667 #> [3,] -0.19094236 -0.2333822  0.360719 0.4563017 1.6963522  1.3433776 #>            [,46]      [,47]     [,48]       [,49]      [,50]      [,51] #> [1,] -1.08020238 -0.8423391 0.2671862  0.85138325  0.5065528 -0.8869193 #> [2,]  0.03011427  1.0025252 0.2707006 -0.05765203  1.2001174 -0.8399168 #> [3,]  0.79749736 -0.4626857 1.2910947 -2.38491380 -0.6896561 -0.4077734 #>           [,52]     [,53]      [,54]     [,55]      [,56]       [,57] #> [1,]  0.8996204 0.2195994  1.6608336 0.9065399 -1.4991716 -0.08544041 #> [2,] -0.3296691 1.8411630 -1.8768996 1.3714919  0.3938404  0.40072665 #> [3,] -0.4359128 0.7051708 -0.2120023 0.4764643 -0.4404269  0.42291044 #>           [,58]       [,59]     [,60]       [,61]       [,62]      [,63] #> [1,]  0.3931300 -0.17109472 0.9181277  1.11050219  0.90108240  1.8533589 #> [2,] -1.3640419  0.08220231 0.5094194 -0.18419927 -1.37935065 -0.1042509 #> [3,]  0.5715738 -0.61822706 0.5010619  0.01547301  0.08966096 -0.7141164 #>           [,64]      [,65]      [,66]      [,67]      [,68]      [,69] #> [1,]  1.5894435 -1.6606336 0.41761331 -0.1641736  0.9844978  2.0449061 #> [2,] -0.1910838  0.8887811 1.15464644  0.5196043 -0.4721003 -0.2699495 #> [3,]  0.1962012  0.6083262 0.05262696  1.5547604  1.7685889  1.2119944 #>           [,70]      [,71]        [,72]       [,73]      [,74]      [,75] #> [1,] -1.0543873 -0.6754716 -0.529012599  0.50068893  0.1484067 -0.1501477 #> [2,] -0.8780298 -1.5430022  0.130720325 -0.09131768 -0.1652121 -1.0668564 #> [3,]  0.4758659  1.9841335 -0.007565884 -1.18388568 -1.3364185 -0.9232881 #>           [,76]      [,77]     [,78]     [,79]      [,80]      [,81]      [,82] #> [1,] -2.5945068  0.1748317  1.024255 0.8629548  0.2150519 -0.2374497  0.4919793 #> [2,] -0.2078395 -0.4378624  0.761039 0.8752467 -1.0403303  0.1786252 -0.4105377 #> [3,] -1.9878433 -1.1176457 -1.283380 0.6319382 -0.1359305  0.2201044 -0.9644167 #>          [,83]        [,84]     [,85]      [,86]      [,87]      [,88] #> [1,] 2.4818157  0.005948042 1.7567498  0.3233739 -1.3293894  0.1044644 #> [2,] 0.9232940 -0.391744611 1.0969838  0.6656828 -0.5895768 -0.4536872 #> [3,] 0.9552354  1.868453417 0.1742525 -0.1025675  1.8844439 -0.2006513 #>           [,89]      [,90]      [,91]      [,92]      [,93]      [,94] #> [1,] -0.8883492  0.3991066  0.2623342  0.4549430 -1.4691941  0.3135436 #> [2,] -0.4048247  0.6403426 -0.4083524 -0.5648696  0.6980613 -1.6826576 #> [3,] -0.2863309 -0.1419845  0.1772888 -1.6564412 -0.7424599  1.4342059 #>           [,95]      [,96]      [,97]      [,98]      [,99]       [,100] #> [1,]  2.1275778  1.1454315  2.0435961  0.1804105  2.0809750 -0.288754968 #> [2,] -2.3803126 -0.9313299 -0.1120170  0.5968566 -1.0569200  1.059067152 #> [3,]  0.6456917  2.0034966 -0.3245517 -0.3929732  0.7683785 -0.009878735 #>           [,101]       [,102]     [,103]    [,104]    [,105]     [,106] #> [1,] -0.53393217 -0.452797483  1.0137294 2.0686219 0.3093462 -1.6637664 #> [2,] -1.10499900  0.386019862 -0.1132137 0.1414098 0.6270378 -0.2430272 #> [3,]  0.04434549  0.001924182  0.1752572 2.6101710 1.5084286  0.1767742 #>          [,107]    [,108]     [,109]     [,110]      [,111]     [,112] #> [1,] -1.5426115 -0.769118 -0.7660633  1.0427619  0.07562234  1.4233696 #> [2,]  0.1259110 -2.073391  1.4738305 -0.7224640 -0.20404389  0.7550212 #> [3,] -0.7151968 -1.154582  0.1452448 -0.2625692 -0.81065868 -2.4120824 #>          [,113]     [,114]     [,115]      [,116]     [,117]     [,118] #> [1,]  0.6908000  2.2461345  1.2288113 -0.39467651  1.2904178  1.3763798 #> [2,] -0.7405511 -1.4281842  0.7736784 -0.06010942 -1.1683656  0.5199654 #> [3,] -0.6459359 -0.9600091 -0.7725246  1.41305775 -0.1265273 -0.9103894 #>           [,119]     [,120]     [,121]     [,122]     [,123]    [,124] #> [1,] -0.64180138  0.9602803  1.0149592  0.9746794 -0.6147672 0.7904701 #> [2,]  0.85898369  0.3844608 -0.0964101  0.3674847  0.1610172 0.9908113 #> [3,] -0.02721734 -0.9722391 -0.9500094 -0.9091834 -0.6315254 0.8374030 #>          [,125]     [,126]     [,127]     [,128]    [,129]     [,130] #> [1,] -0.5295361 -0.1079597 -0.2801858 -0.8107690 2.2344692 -0.2643146 #> [2,] -0.1295450  1.3282872 -0.1551943  0.3050302 0.7279816 -1.3819225 #> [3,] -0.4886532 -0.9202141 -1.0317735  0.1505500 1.9656057  1.3804558 #>           [,131]     [,132]     [,133]     [,134]     [,135]      [,136] #> [1,] -0.13821365  0.6794966 -0.7872949  0.6778386  0.4917711  0.07621935 #> [2,] -0.58115294 -0.8748923 -0.2861097 -0.2192930 -1.0504953  0.10389134 #> [3,]  0.05914292 -1.0783607 -0.4836053 -0.3697834 -1.0472153 -0.84520341 #>          [,137]      [,138]      [,139]     [,140]       [,141]     [,142] #> [1,] -0.7263598  0.60876369  0.26436405 -0.1073674 -1.207528617 -0.2315164 #> [2,]  0.1593565  0.03796188  0.09023817 -0.6888431 -0.001866514  0.2484379 #> [3,] -0.9578640 -2.01426042 -0.24904001 -0.2153273  0.752244427  0.8295962 #>          [,143]     [,144]     [,145]     [,146]     [,147]    [,148] #> [1,]  0.7988306  0.4751142 -0.5195078 -0.7321355 -0.8207180 1.2722465 #> [2,] -0.2611909 -1.5443510  1.3230224 -0.6130656 -0.4090981 1.0471945 #> [3,] -0.5706933 -1.0090526 -1.6201304  2.1976785  0.7309227 0.8674201 #>          [,149]     [,150]     [,151]     [,152]     [,153]     [,154] #> [1,]  1.0450176 -0.2764702 -1.0189738 0.54615855  1.2017325 -0.7430734 #> [2,] -0.1680360 -0.1603454 -0.1249856 0.04410969 -0.5833209 -0.3493318 #> [3,] -0.3111731  1.0153932  0.9651609 0.73425368  0.9178195  0.6900918 #>          [,155]     [,156]     [,157]       [,158]     [,159]     [,160] #> [1,] -0.6557961  1.1489594  0.2063573 -1.347800932 0.09630345 -0.8873504 #> [2,]  0.3534636  0.3516795  0.3168651 -0.710532721 0.26259037  0.6511111 #> [3,] -1.2449288 -1.5380775 -0.5672487 -0.003386492 0.47866019 -0.1320770 #>         [,161]    [,162]     [,163]      [,164]      [,165]     [,166] #> [1,] 1.2246571 1.0206861  1.6088210 -0.24611590 -1.24453565 -0.8644527 #> [2,] 2.2078676 0.4418152 -0.1787714 -1.20866268 -1.15069086  2.1782612 #> [3,] 0.3485959 1.2503058  0.5171666 -0.01050791  0.04180936  1.3318571 #>          [,167]      [,168]     [,169]     [,170]     [,171]     [,172] #> [1,] -1.1044121  0.07284335 0.12091911  0.3947519 -0.2085471 -0.2352206 #> [2,] -0.3568299 -2.86634973 0.85499938 -2.0994485  0.4005091  0.8278431 #> [3,]  0.7814470 -0.28740298 0.00812111 -0.3375124  0.1058990 -0.4036630 #>         [,173]     [,174]     [,175]    [,176]     [,177]     [,178]     [,179] #> [1,]  0.397051 -1.2627048  1.1425039 0.5643791  0.4590996  0.7917688 -0.7853883 #> [2,] -1.082440  0.2673098 -0.3084416 0.5416928  0.1572440 -0.8204868  0.7019112 #> [3,] -1.290423  0.6607779  2.4486931 0.5014230 -1.9937621 -2.5637250 -1.3357595 #>          [,180]     [,181]     [,182]     [,183]      [,184]    [,185] #> [1,] -0.5508582  1.0848517 -0.4604479 -0.9795493  0.80024350 -1.251206 #> [2,]  1.3214482 -0.2923814  1.3688700 -1.6583790  0.06220234  0.214828 #> [3,] -0.5889830 -0.5842981 -1.0544028 -1.2748593 -0.61258241  0.953648 #>         [,186]     [,187]      [,188]     [,189]      [,190]      [,191] #> [1,] 0.1763344 -1.9455147 -0.16747678 -0.4503786 -0.22390210  0.06797888 #> [2,] 0.3788429 -1.1715155  0.09186884 -0.7701800  0.85546699 -0.32490749 #> [3,] 0.2820310  0.6254979 -0.06119136 -1.5285694 -0.05909329  0.63265625 #>          [,192]      [,193]    [,194]     [,195]     [,196]     [,197] #> [1,]  0.4502646  1.05891642 0.4377788 -0.5843669  0.9391742 -0.3231487 #> [2,]  0.7229878 -0.07299678 1.2657501 -2.0367954 -0.8056377 -0.6426742 #> [3,] -1.8220223 -0.18046636 0.1462775  0.9036002 -0.4730396  0.8977116 #>          [,198]      [,199]    [,200]     [,201]      [,202]     [,203] #> [1,] -2.0745585 0.462127932 0.7132579 -0.8076859  0.77513081 -1.1907144 #> [2,] -1.1109781 0.858190197 1.5177451  1.6390998 -0.02819882  0.1333905 #> [3,] -0.4104755 0.008904114 1.3409119  1.3785598  0.87529385 -0.2733006 #>          [,204]      [,205]     [,206]     [,207]      [,208]     [,209] #> [1,] -0.4839346 -0.06361197 -1.0304152 -0.6540518 -0.06872769  0.5573511 #> [2,] -0.4559416 -1.14221243  0.1451883  0.2744949 -0.47285310 -0.5141858 #> [3,] -0.4381995 -0.05962556 -1.3719499 -0.8465902 -1.02233849  0.3815321 #>          [,210]     [,211]     [,212]     [,213]     [,214]    [,215] #> [1,]  0.2115274  1.0075531 -1.6191344 -0.5000803 -1.5108241 -0.537047 #> [2,] -0.5044693 -0.7523721  2.0240267 -0.2427342 -0.9323369  1.044099 #> [3,]  0.1632460  0.3088910 -0.1999749 -1.1496171  0.1907487  2.324830 #>           [,216]     [,217]     [,218]      [,219]     [,220]    [,221] #> [1,]  0.07020195 -1.3356170 0.09423924 -2.42421248  0.4577631 0.7314218 #> [2,] -0.75562619  2.0841801 0.34176054  1.15545196 -0.6668265 0.8887647 #> [3,]  2.08306009  0.3300542 0.91176051 -0.07583185  0.9245157 1.2148489 #>          [,222]      [,223]     [,224]       [,225]     [,226]      [,227] #> [1,] -0.2734941 -1.64950974 -1.2992374 -0.187961726  0.1008470 -0.84471286 #> [2,] -0.8750311  0.05792793 -0.4233134 -0.568844705  0.8859326 -0.08509832 #> [3,]  2.2598246  0.65925618  1.1402379 -0.005921535 -0.5145564 -0.14248772 #>          [,228]    [,229]    [,230]     [,231]     [,232]     [,233]     [,234] #> [1,] -0.6212054 1.4570947 -2.067178  1.0627789  0.2349766 -0.6181763 -0.8581088 #> [2,] -0.8308703 0.6571481 -2.319869 -0.8498090  1.6834092  1.1358098 -0.7741889 #> [3,]  0.3841201 1.8008990  1.421173 -0.1709062 -0.5078856 -0.3326764  0.1516907 #>           [,235]       [,236]     [,237]     [,238]     [,239]     [,240] #> [1,] -0.82150056 -1.030915680 -0.9453398 -0.1388846 -0.4967136  0.4006380 #> [2,]  1.37819844  0.007373399  1.3431304  1.0027554 -0.4633376 -0.3468359 #> [3,] -0.06254674  0.137726607  0.4685039  0.6594595 -1.0582306  0.2221682 #>          [,241]     [,242]     [,243]    [,244]     [,245]     [,246] #> [1,] -0.9978120 -1.0672045 -0.1543736  0.162588 -0.2476937  1.4502682 #> [2,]  0.5740291  0.9547973 -0.7309076 -1.551127  0.4366440 -0.1059297 #> [3,]  0.4389095  1.7859577  2.0093198  0.153212  1.0681273 -0.1693485 #>          [,247]      [,248]       [,249]     [,250]    [,251]      [,252] #> [1,] -0.2209341  0.07527118  0.007289024  0.3658454 0.1489064 -0.96146708 #> [2,]  1.8870869  0.05054988 -1.262408247  1.9081640 1.1531428 -0.01741572 #> [3,] -0.1612963 -0.25864091 -0.543826979 -1.4924028 0.4860354  0.02828361 #>          [,253]      [,254]     [,255]       [,256]     [,257]     [,258] #> [1,] -0.9806965 -0.10868145 -0.2324621 7.248485e-01  1.2245140 -0.2948032 #> [2,] -1.0384230 -1.07436906  2.0081414 5.905991e-06  1.3186194  0.5101586 #> [3,] -0.6052964  0.06846527 -0.5560343 1.879330e+00 -0.2097775  0.7959521 #>          [,259]     [,260]     [,261]     [,262]     [,263]     [,264] #> [1,] -0.2583196 0.33804790 -1.0771907 -0.3402541  0.2105878  1.1828332 #> [2,] -1.3950600 0.70132409  1.5710808 -0.9807910 -2.7666979  1.2004771 #> [3,]  1.4572529 0.08115361 -0.1298633 -0.8486018 -1.1944736 -0.4398956 #>          [,265]     [,266]     [,267]     [,268]     [,269]     [,270] #> [1,] -0.9900237 -1.0180502 -2.7869761 -1.4887252 -1.4640214 -0.9871067 #> [2,] -0.5301708  0.6249636 -0.2850108 -0.8125513 -0.1661112  0.7029530 #> [3,] -1.8679268 -2.0509058 -1.2871821  0.4914794 -0.9201485  1.7231321 #>           [,271]    [,272]       [,273]     [,274]      [,275]     [,276] #> [1,] -0.66565828 0.7265781  1.424610633 -0.4742838 -0.22261988 -1.0014277 #> [2,]  0.79093987 1.2060294 -0.008514531 -0.1210111  0.22954611 -0.2765442 #> [3,]  0.06343244 1.3462053  0.451456331 -0.8418786 -0.02164184  0.8845651 #>           [,277]    [,278]     [,279]    [,280]     [,281]      [,282] #> [1,]  1.84524671 0.8404704 -1.3145057 0.2929450 -0.3263465  0.09679755 #> [2,] -0.05611588 0.3995611 -1.8001836 0.1444704 -0.7671259  0.15798834 #> [3,] -0.22830872 0.2059919  0.1054959 1.6676132 -0.2894683 -0.82165891 #>          [,283]     [,284]     [,285]     [,286]     [,287] #> [1,] -0.5121069 -0.5801183 -0.8669018 0.03777082  0.4201299 #> [2,] -0.3697015 -0.5295094 -0.9884367 0.16005887  0.2546474 #> [3,] -0.3395740 -1.0116868 -0.4481315 0.07831430 -0.1398650 #>  #>  #> $rho #>             [,1]        [,2]       [,3]       [,4]        [,5] #> [1,]  0.01241713 -0.02072497 0.15929940  0.1507767 0.133683589 #> [2,] -0.06539708 -0.10436356 0.05085782 -0.1009757 0.009996463 #> [3,]  0.01019880  0.09092821 0.12131755  0.2887642 0.246505610 #>  #> $omega #>           [,1]        [,2]       [,3]       [,4]       [,5] #> [1,] 0.5552539  0.55678827 -0.5201832  0.4555078 -0.4340874 #> [2,] 0.2507441 -0.20258011 -0.2889913 -0.3485031 -0.3529451 #> [3,] 0.1189334 -0.08204681  0.3357048 -0.4259752 -0.2523185 #>  #> $sigma2v #>            [,1]        [,2]       [,3]      [,4]       [,5] #> [1,] 0.30830694 0.310013179 0.27059057 0.2074873 0.18843187 #> [2,] 0.06287260 0.041038700 0.08351599 0.1214544 0.12457021 #> [3,] 0.01414516 0.006731679 0.11269771 0.1814549 0.06366465 #>  #> $S #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    3    3    3    3    2    4    3    3    3     3     3     3     4     3 #> [2,]    6    5    5    4    2    3    5    7    5     6     8     7     7     7 #> [3,]    5    5    5    4    5    5    5    7    7     7     5     6     6     6 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     3     4     3     3     2     4     3     3     3     3     3     3 #> [2,]     6     7     6     6     6     6     7     7     6     7     6     9 #> [3,]     5     6     6     8     7     6     8     8     6     5     6     5 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     2     2     3     3     3     4     3     3     3     4     3     3 #> [2,]     7     6     7     6     6     7     5     6     7     6     7     7 #> [3,]     8     7     5     8     5     5     7     6     6     8     7     6 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     3     3     2     3     2     3     3     4     3     3     3     3 #> [2,]     8     4     6     5     6     8     9     7     9     6     9     6 #> [3,]     6     6     6     7     5     6     7     6     6     6     7     9 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     3     3     3     3     3     3     2     3     4     3     4     3 #> [2,]     8     6     7     6     8     6     7     6     7     5     7     5 #> [3,]     6     7     8     5     7     4     6     7     6     6     7     4 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     4     4     3     3     3     5     2     3     4     3     3     5 #> [2,]     8     6     7     7     7     6     6     7     6     6     7     5 #> [3,]     5     6     6     7     7     7     6     7     7     6     5     7 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     3     3     2     4     3     4     3     4     3     3     3     4 #> [2,]     7     6     8     6     8     6     7     7     8     6     7     8 #> [3,]     8     6     7     5     5     7     7     6     5     4     7     8 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     4     2     3     3     4     3     2     3     3     3     3     2 #> [2,]     6     6     7     5     9     7     8     7     8     7     8     6 #> [3,]     6     5     6     8     6     6     7     5     7     4     5     5 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     3      3      4      3      2      3      3      3      4      3 #> [2,]     5      6      5      4      7      6      8      8      6      8 #> [3,]     6      5      5      4      8      6      6      6      6      6 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      3      2      3      3      4      3      3      2      3      4 #> [2,]      8      8      8      7      7      8      7      7      7      7 #> [3,]      6      6      5      6      5      6      9      6      6      7 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      2      3      4      3      3      3      2      3      3      2 #> [2,]      6      5      4      6      7      8      6      7      5      6 #> [3,]      5      6      4      6      7      6      5      7      6      5 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      3      4      2      4      2      3      3      3      4      3 #> [2,]      6      5      6      7      8      5      6      7      6      8 #> [3,]      7      6      6      5      5      5      5      6      5      6 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      3      3      3      3      3      4      3      4      3      3 #> [2,]      7      5      5      6      7      7      7      7      5      8 #> [3,]      8      7      5      7      6      7      6      6      8      6 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      3      3      3      3      4      3      3      4      3      3 #> [2,]      5      6      8      6      7      7      6      6      6      8 #> [3,]      8      5      5      6      6      7      6      6      5      6 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      4      3      4      3      2      3      3      4      3      3 #> [2,]      7      7      9      7      7      6      9      8      6      7 #> [3,]      8      6      6      8      5      7      6      6      8      6 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      3      3      3      3      3      3      4      3      3      3 #> [2,]      7      7      7      6      6      8      7      7      7      6 #> [3,]      6      6      6      9      7      7      7      5      6      6 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      4      3      3      2      4      3      4      3      4      3 #> [2,]      6      8      8      7      7      7      8      7      7      7 #> [3,]      6      8      7      6      8      8      7      7      7      7 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      3      3      2      3      3      3      3      3      3      3 #> [2,]      5      7      6      8      6      7      6      6      6      6 #> [3,]      5      7      7      8      7      6      5      7      7      7 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      3      4      4      3      3      3      3      3      3      4 #> [2,]      5      6      5      8      6      6      5      4      6      6 #> [3,]      5      5      5      7      7      6      6      6      5      5 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      3      3      3      3      2      2      3      2      3      3 #> [2,]      6      8      6      6      6      6      6      8      7      7 #> [3,]      7      8      7      7      7      4      8      6      6      7 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      3      4      3      3      3      3      4      3      3      3 #> [2,]      7      6      8      8      7      8      8      8      7      7 #> [3,]      5      8      6      6      7      5      6      8      6      7 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      3      3      3      3      3      3      3      3      3      4 #> [2,]      6      6      7      7      7      7      6      4      7      7 #> [3,]      6      5      5      6      5      8      6      5      7      6 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      3      4      2      3      3      3      4      3      4      3 #> [2,]      6      6      5      6      5      5      6      6      6      6 #> [3,]      5      7      6      6      5      8      5      6      6      6 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      3      4      3      3      5      3      3      3      3      4 #> [2,]      6      6      6      4      6      6      6      6      8      7 #> [3,]      6      6      7      7      7      5      5      6      5      5 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      3      3      2      3      3      3      3      3      3      4 #> [2,]      7      7      8      7      6      7      8      8      8      6 #> [3,]      6      8      6      6      6      7      7      6      6      5 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      3      4      3      4      4      4      3      3      3      4 #> [2,]      9      7      7      6      8      8      8      7      7      8 #> [3,]      7      6      6      5      5      6      7      6      5      6 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      3      3      4      3      4      3      3      4      3 #> [2,]      7      7      4      5      6      8      6      6      6 #> [3,]      7      6      0      1      5      5      4      7      5 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    3    4    1    2    2    5    5    4    2     2     3     3     4     3 #> [2,]    4    2    4    3    0    1    5    8    5     6     5     5     6     4 #> [3,]    6    5    6    7    4    4    6    7    6     7     4     8     7     5 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     2     3     3     2     3     4     3     3     4     5     2     4 #> [2,]     6     6     3     4     6     2     4     6     4     7     5     5 #> [3,]     4     5     5     7     6     5     7     8     5     5     7     5 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     2     2     2     2     4     3     5     4     3     4     3     3 #> [2,]     7     5     6     6     4     5     3     5     8     3     4     6 #> [3,]     7     6     5     8     4     3     6     7     7     8     6     6 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     4     3     3     4     3     3     4     4     2     4     4     2 #> [2,]     6     1     7     3     5     7     6     6     6     4     7     5 #> [3,]     7     6     4     6     4     5     6     5     5     4     7     7 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     3     2     4     4     4     2     1     5     5     3     4     3 #> [2,]     6     3     4     6     5     6     4     7     7     3     7     3 #> [3,]     5     6     7     5     6     4     5     8     5     6     7     5 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     2     1     3     3     2     3     3     2     4     3     3     3 #> [2,]     5     6     6     5     8     3     8     6     7     5     4     4 #> [3,]     5     6     5     7     7     7     5     6     6     6     6     6 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     4     4     3     3     2     2     2     3     4     3     3     4 #> [2,]     4     2     4     6     5     5     4     5     6     6     7     6 #> [3,]     6     9     6     7     4     6     5     7     3     5     5     7 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     4     2     3     3     3     2     2     1     2     1     4     2 #> [2,]     6     5     7     4     8     5     5     4     6     7     5     6 #> [3,]     5     4     5     7     7     5     7     4     7     3     5     4 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     4      3      4      3      3      2      4      3      4      3 #> [2,]     6      6      1      3      7      5      6      6      6      6 #> [3,]     5      6      3      4      7      5      7      6      7      8 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      2      2      3      2      4      3      4      2      3      2 #> [2,]      5      6      6      7      4      4      5      6      6      6 #> [3,]      5      5      6      5      4      7      6      5      5      8 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      2      3      4      4      2      2      3      2      4      1 #> [2,]      6      6      3      4      5      4      5      5      3      5 #> [3,]      6      6      4      6      5      6      5      6      4      4 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      4      3      1      4      3      3      3      4      3      3 #> [2,]      7      4      5      6      6      3      4      6      4      5 #> [3,]      7      5      6      6      5      4      4      6      6      7 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      2      3      4      2      3      2      3      4      3      2 #> [2,]      4      4      2      8      7      7      4      6      5      7 #> [3,]      7      6      4      7      7      8      7      8      6      8 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      3      3      4      3      3      5      2      4      3      3 #> [2,]      3      8      8      5      5      5      6      3      5      7 #> [3,]      5      5      5      7      6      7      5      7      6      8 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      3      4      4      3      3      3      3      5      2      2 #> [2,]      6      6      7      7      6      4      6      7      5      8 #> [3,]      6      7      6      5      4      6      7      7      6      6 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      2      3      2      4      4      3      4      2      3      2 #> [2,]      7      4      7      6      5      7      5      4      5      5 #> [3,]      6      6      7      7      6      7      7      6      6      7 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      4      4      3      2      4      5      4      2      2      3 #> [2,]      5      6      6      4      4      6      5      5      5      4 #> [3,]      6      7      6      6      7      8      6      6      6      8 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      3      3      3      4      3      2      3      3      2      4 #> [2,]      7      4      4      4      6      5      5      3      5      6 #> [3,]      5      6      6      5      6      5      5      7      6      5 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      3      5      4      3      3      4      3      3      4      5 #> [2,]      6      1      8      4      4      7      7      3      4      2 #> [3,]      5      5      5      7      6      7      6      5      5      4 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      3      3      3      2      2      3      5      4      5      3 #> [2,]      4      5      4      4      4      3      6      4      6      6 #> [3,]      7      8      6      6      6      4      7      6      8      8 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      3      2      3      4      3      2      4      4      4      3 #> [2,]      6      5      7      6      6      7      5      5      6      5 #> [3,]      6      7      8      7      7      6      8      7      6      6 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      2      3      3      3      4      4      3      3      4      3 #> [2,]      5      6      5      5      4      5      3      1      1      3 #> [3,]      6      6      7      7      7      6      4      7      6      6 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      4      4      3      3      4      3      4      3      4      4 #> [2,]      2      4      3      4      4      6      5      6      5      4 #> [3,]      8      6      7      7      7      5      7      5      7      7 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      3      3      2      4      5      4      3      4      2      3 #> [2,]      5      5      6      3      8      6      8      5      7      6 #> [3,]      6      5      5      5      6      7      7      5      6      5 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      2      3      3      3      3      3      4      3      4      4 #> [2,]      5      5      7      7      5      6      7      7      7      6 #> [3,]      7      7      8      7      8      7      8      8      7      6 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      4      4      3      5      2      2      2      4      5      3 #> [2,]      5      8      5      3      5      5      5      6      5      5 #> [3,]      7      8      6      5      7      7      6      7      6      6 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      3      4      3      4      3      2      4      4      4 #> [2,]      6      4      0      4      6      6      4      5      5 #> [3,]      8      4      0      0      7      6      5      7      4 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    2    2    1    3    1    4    3    5    3     2     3     3     3     3 #> [2,]    3    0    4    1    0    0    4    5    2     5     4     6     4     4 #> [3,]    6    4    6    4    7    8    5    8    6     6     4     7     7     5 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     3     3     3     3     3     4     3     1     4     3     1     3 #> [2,]     2     7     4     3     4     2     4     7     3     8     4     5 #> [3,]     4     6     6     6     6     5     6     7     7     5     6     6 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     2     4     2     2     3     4     4     3     4     4     2     5 #> [2,]     6     5     6     5     2     4     3     4     7     2     6     4 #> [3,]     8     7     6     8     4     3     5     5     6     6     5     6 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     4     2     3     2     2     4     4     3     3     3     2     3 #> [2,]     6     0     6     3     4     7     6     5     7     4     9     4 #> [3,]     6     5     4     6     4     6     6     6     6     6     7     7 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     3     3     3     4     2     3     1     3     4     3     3     4 #> [2,]     7     2     5     3     5     4     3     8     6     3     8     3 #> [3,]     5     8     9     5     7     6     5     6     6     5     6     6 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     3     3     3     4     3     3     3     2     4     4     3     3 #> [2,]     3     5     6     3     7     2     7     6     8     5     5     3 #> [3,]     6     5     7     7     8     7     6     7     7     6     6     7 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     3     3     3     4     4     3     3     4     3     3     3     2 #> [2,]     5     3     4     4     5     4     4     5     6     5     7     5 #> [3,]     6     6     6     7     6     6     6     7     5     5     6     8 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     4     3     4     2     2     3     3     2     3     4     2     2 #> [2,]     5     4     7     3     7     4     4     3     6     6     5     6 #> [3,]     6     6     5     7     6     5     7     5     7     5     5     4 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     3      3      4      4      4      4      4      3      3      3 #> [2,]     4      5      0      2      6      4      6      6      7      4 #> [3,]     5      4      6      6      8      6      7      6      6      7 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      2      2      2      2      4      3      4      2      3      3 #> [2,]      5      6      5      6      4      4      5      6      5      6 #> [3,]      6      6      4      5      4      6      8      6      5      7 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      3      3      4      3      2      3      4      4      4      2 #> [2,]      7      4      2      3      4      4      5      4      3      4 #> [3,]      6      5      3      5      6      6      5      7      5      4 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      4      3      2      4      3      4      3      4      3      3 #> [2,]      6      3      4      5      6      3      2      5      3      5 #> [3,]      6      5      5      6      5      6      5      6      6      7 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      2      3      3      3      4      4      3      3      3      3 #> [2,]      4      3      1      7      8      6      3      3      4      6 #> [3,]      7      8      6      7      8      7      6      8      8      7 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      3      3      4      2      2      4      4      3      3      3 #> [2,]      3      7      8      4      5      5      5      4      4      7 #> [3,]      6      6      6      9      6      8      7      7      8      8 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      3      4      4      2      3      2      2      2      3      3 #> [2,]      5      6      6      5      5      4      6      6      4      7 #> [3,]      7      8      6      6      5      6      7      8      7      6 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      3      4      4      4      4      4      3      2      4      2 #> [2,]      6      6      5      4      3      6      4      4      3      4 #> [3,]      6      7      7      7      7      7      7      6      7      5 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      3      3      3      3      4      3      4      2      4      4 #> [2,]      3      5      4      5      3      6      3      4      4      3 #> [3,]      7      6      6      8      8      6      6      8      8      6 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      3      1      4      4      4      2      3      3      3      3 #> [2,]      7      3      5      2      7      5      5      4      4      6 #> [3,]      6      7      7      7      8      7      7      7      7      8 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      2      3      3      4      4      3      3      2      3      3 #> [2,]      6      1      7      3      4      8      8      1      3      2 #> [3,]      6      4      6      6      6      5      6      6      5      6 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      3      3      4      3      4      3      5      4      4      4 #> [2,]      4      3      2      4      4      2      7      4      7      7 #> [3,]      7      7      6      6      7      6      8      8      9      8 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      4      2      2      2      3      3      5      3      2      4 #> [2,]      7      4      8      7      4      8      5      5      6      5 #> [3,]      7      8      7      8      7      7      7      7      9      6 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      3      3      4      4      3      4      4      3      2      3 #> [2,]      5      5      5      4      3      3      2      0      1      2 #> [3,]      8      8      7      5      8      5      3      6      6      8 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      4      4      2      4      4      4      3      4      4      4 #> [2,]      2      4      4      6      4      7      5      8      6      5 #> [3,]      7      8      6      6      7      7      7      9      6      8 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      3      4      2      5      4      4      3      4      2      3 #> [2,]      7      5      4      1      6      5      6      4      6      5 #> [3,]      7      7      7      8      6      6      7      6      6      6 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      2      2      4      3      4      3      3      3      4      3 #> [2,]      5      5      5      9      4      5      6      8      7      5 #> [3,]      7      7      8      7      7      8      7      7      7      6 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      3      4      4      4      2      3      2      3      5      3 #> [2,]      6      6      5      4      5      5      6      7      5      5 #> [3,]      7      8      7      6      7      7      6      7      7      7 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      4      3      3      4      3      3      3      5      4 #> [2,]      6      4      0      2      5      8      4      4      4 #> [3,]      7      4      0      1      7      5      6      7      4 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    3    1    1    3    2    4    3    4    3     2     4     3     3     3 #> [2,]    3    1    5    2    0    0    4    7    4     6     4     5     7     3 #> [3,]    7    5    7    4    5    6    5    6    5     8     4     7     8     5 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     3     3     3     4     4     3     3     3     6     4     2     4 #> [2,]     4     4     5     3     4     3     4     6     2     7     5     4 #> [3,]     5     6     6     7     7     6     7     8     7     5     5     6 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     3     3     3     3     4     2     3     4     4     3     3     4 #> [2,]     7     6     5     7     4     5     3     4     6     1     4     5 #> [3,]     8     6     5     8     4     4     6     6     6     8     6     6 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     3     2     4     2     2     4     4     3     3     4     2     3 #> [2,]     5     0     7     3     5     7     6     7     6     4     6     5 #> [3,]     5     8     6     6     4     6     7     6     6     5     6     7 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     3     3     2     3     2     2     3     3     4     5     2     2 #> [2,]     5     4     4     4     5     6     5     7     5     3     7     3 #> [3,]     5     8     8     5     7     5     6     8     5     6     8     4 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     3     3     3     4     3     3     3     2     4     3     2     2 #> [2,]     6     4     8     3     7     3     6     8     6     4     4     2 #> [3,]     6     6     5     7     8     7     6     7     7     6     6     6 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     3     3     3     4     3     3     3     3     4     3     2     2 #> [2,]     4     3     4     6     3     5     3     5     6     4     7     5 #> [3,]     7     6     8     6     6     7     6     6     5     4     5     6 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     4     3     4     2     3     4     2     3     3     4     2     2 #> [2,]     6     4     7     3     6     5     5     4     6     7     5     6 #> [3,]     5     6     5     7     6     5     7     5     7     4     5     5 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     3      2      3      4      2      2      4      4      4      3 #> [2,]     4      6      1      2      7      4      5      6      7      6 #> [3,]     6      5      6      4      8      6      6      6      7      7 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      2      3      3      2      3      2      4      3      3      3 #> [2,]      5      7      6      6      4      5      4      5      5      5 #> [3,]      5      6      5      7      4      8      6      6      6      7 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      4      3      3      1      2      4      4      4      5      2 #> [2,]      6      5      3      3      4      4      6      4      4      5 #> [3,]      6      6      4      6      6      5      6      6      5      5 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      4      3      2      4      5      4      3      3      4      3 #> [2,]      6      5      5      7      6      3      3      6      5      6 #> [3,]      8      6      6      6      5      5      5      6      5      7 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      3      3      4      4      4      3      4      3      4      3 #> [2,]      4      4      3      6      7      6      5      5      3      7 #> [3,]      8      6      5      7      8      7      5      8      7      6 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      3      4      4      3      2      4      4      2      3      3 #> [2,]      4      8      6      4      5      4      5      3      4      7 #> [3,]      5      5      6      7      6      7      6      7      6      7 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      4      4      3      2      2      3      3      3      4      4 #> [2,]      4      5      8      4      8      5      8      5      4      6 #> [3,]      7      6      8      7      5      6      7      8      7      6 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      2      4      4      4      5      4      3      3      3      3 #> [2,]      6      5      4      5      4      6      6      5      4      5 #> [3,]      5      6      7      7      7      8      7      4      5      7 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      3      3      3      4      4      4      3      2      4      3 #> [2,]      4      4      6      5      3      6      4      4      4      2 #> [3,]      5      8      7      6      6      7      4      5      5      7 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      3      2      4      3      3      2      3      3      3      4 #> [2,]      6      4      4      3      6      3      4      5      5      6 #> [3,]      3      5      6      5      5      5      5      6      6      4 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      2      3      4      3      5      5      2      3      4      3 #> [2,]      6      2      7      3      6      7      7      2      4      1 #> [3,]      5      5      4      7      5      9      4      5      6      3 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      4      4      3      3      4      4      5      5      3      3 #> [2,]      4      4      4      5      3      3      7      4      7      7 #> [3,]      7      9      6      6      7      3      6      7      8      7 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      5      3      3      4      3      3      5      3      3      5 #> [2,]      8      5      7      7      5      7      5      4      8      4 #> [3,]      6      7      6      6      7      5      6      8      6      7 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      4      4      3      4      3      4      4      4      4      3 #> [2,]      6      6      5      4      3      5      3      2      2      3 #> [3,]      6      5      6      7      5      6      4      7      6      6 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      3      3      3      4      3      5      3      3      3      2 #> [2,]      3      6      5      6      5      9      6      7      6      5 #> [3,]      8      7      7      8      6      5      8      6      6      7 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      4      3      2      3      4      4      3      4      2      3 #> [2,]      7      5      5      3      6      5      7      5      6      6 #> [3,]      7      6      5      7      8      6      6      6      6      5 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      1      4      2      3      5      4      4      2      5      4 #> [2,]      4      4      6      8      5      6      7      7      6      6 #> [3,]      6      7      7      6      6      7      7      6      6      5 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      4      4      4      3      3      3      3      4      4      4 #> [2,]      7      5      6      3      5      6      7      7      5      6 #> [3,]      8      7      6      6      6      9      7      6      5      6 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      3      3      1      4      4      4      4      4      4 #> [2,]      7      6      0      2      4      7      5      3      3 #> [3,]      7      5      0      1      6      6      6      6      4 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    3    2    2    3    4    4    4    3    4     3     3     4     2     3 #> [2,]    3    1    4    2    0    1    4    6    2     6     6     7     5     6 #> [3,]    6    6    5    4    6    7    4    9    5     7     4     7     7     5 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     2     3     4     3     4     4     3     4     4     4     3     4 #> [2,]     4     6     5     4     4     3     5     8     3     8     5     6 #> [3,]     4     6     6     7     6     5     7     9     6     4     5     5 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     2     5     4     4     3     3     4     3     4     4     4     3 #> [2,]     6     6     7     5     4     5     3     4     7     1     5     5 #> [3,]     8     5     6     7     3     2     6     5     7     6     6     5 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     3     3     3     1     1     2     3     3     3     4     2     3 #> [2,]     6     1     5     4     4     7     6     6     7     4     8     5 #> [3,]     6     6     5     4     4     6     7     6     6     5     7     7 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     3     3     3     2     2     3     3     4     4     3     2     2 #> [2,]     7     5     5     3     5     5     3     6     5     3     8     3 #> [3,]     6     7     8     5     8     4     5     8     6     5     7     5 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     4     3     4     3     3     4     3     3     3     3     3     3 #> [2,]     5     5     8     3     8     3     8     7     8     6     5     4 #> [3,]     5     6     6     7     7     7     6     7     8     4     6     7 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     4     5     4     3     3     3     4     3     1     3     3     3 #> [2,]     6     4     6     3     5     4     4     6     6     5     7     6 #> [3,]     7     6     8     6     5     6     6     6     4     3     5     8 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     5     3     3     3     4     4     4     3     2     4     1     3 #> [2,]     6     5     7     4     6     5     5     4     6     6     6     7 #> [3,]     5     6     5     6     6     6     7     6     7     3     6     4 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]     2      3      3      4      3      1      4      4      4      3 #> [2,]     4      5      1      2      8      4      6      7      6      6 #> [3,]     5      4      5      5      8      6      5      6      6      7 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]      4      3      3      3      2      1      3      4      3      3 #> [2,]      5      7      6      6      4      5      4      6      7      6 #> [3,]      6      6      5      6      4      7      8      6      5      6 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]      3      3      3      2      3      3      4      3      4      4 #> [2,]      8      4      4      4      5      5      6      6      3      3 #> [3,]      5      5      3      5      6      6      5      7      5      4 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]      3      4      2      3      4      3      5      4      4      3 #> [2,]      6      4      4      6      6      3      4      6      5      6 #> [3,]      8      5      5      6      5      4      5      7      5      6 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      5      4      4      3      3      4      5      4      4      2 #> [2,]      5      3      2      5      8      6      4      5      4      7 #> [3,]      6      7      5      5      7      6      7      6      8      6 #>      [,149] [,150] [,151] [,152] [,153] [,154] [,155] [,156] [,157] [,158] #> [1,]      3      4      4      2      2      3      3      3      3      4 #> [2,]      4      6      7      4      6      5      4      4      4      7 #> [3,]      8      5      6      6      4      7      6      6      7      7 #>      [,159] [,160] [,161] [,162] [,163] [,164] [,165] [,166] [,167] [,168] #> [1,]      3      3      3      4      3      3      4      3      4      4 #> [2,]      5      6      7      5      6      4      7      6      4      7 #> [3,]      8      6      9      7      5      6      6      7      8      6 #>      [,169] [,170] [,171] [,172] [,173] [,174] [,175] [,176] [,177] [,178] #> [1,]      2      3      3      3      3      4      5      4      4      3 #> [2,]      5      6      5      3      4      7      4      4      4      6 #> [3,]      5      6      7      7      8      9      6      5      6      7 #>      [,179] [,180] [,181] [,182] [,183] [,184] [,185] [,186] [,187] [,188] #> [1,]      4      4      4      4      3      5      5      2      4      5 #> [2,]      3      5      5      6      5      6      4      4      4      3 #> [3,]      6      7      7      7      7      7      6      6      6      7 #>      [,189] [,190] [,191] [,192] [,193] [,194] [,195] [,196] [,197] [,198] #> [1,]      4      3      4      4      2      4      4      5      3      4 #> [2,]      7      5      5      4      7      4      5      5      6      8 #> [3,]      6      6      8      6      8      6      5      7      8      7 #>      [,199] [,200] [,201] [,202] [,203] [,204] [,205] [,206] [,207] [,208] #> [1,]      3      3      4      3      5      4      3      3      5      3 #> [2,]      7      3      6      4      6      7      5      2      4      1 #> [3,]      5      4      5      6      8      5      8      7      5      6 #>      [,209] [,210] [,211] [,212] [,213] [,214] [,215] [,216] [,217] [,218] #> [1,]      4      4      4      3      4      4      4      4      3      4 #> [2,]      5      6      4      5      3      4      5      5      6      8 #> [3,]      7      7      6      6      8      4      7      6      7      6 #>      [,219] [,220] [,221] [,222] [,223] [,224] [,225] [,226] [,227] [,228] #> [1,]      4      4      4      4      4      3      3      4      3      4 #> [2,]      7      4      8      9      6      7      6      6      7      5 #> [3,]      6      6      6      6      6      6      6      9      7      8 #>      [,229] [,230] [,231] [,232] [,233] [,234] [,235] [,236] [,237] [,238] #> [1,]      4      4      4      4      4      5      3      4      4      4 #> [2,]      5      6      6      3      3      5      3      1      5      4 #> [3,]      6      6      6      7      6      6      4      7      7      6 #>      [,239] [,240] [,241] [,242] [,243] [,244] [,245] [,246] [,247] [,248] #> [1,]      4      3      4      4      3      4      3      2      5      2 #> [2,]      5      8      6      8      7      6      7      5      8      6 #> [3,]      5      7      5      5      5      8      5      6      5      6 #>      [,249] [,250] [,251] [,252] [,253] [,254] [,255] [,256] [,257] [,258] #> [1,]      3      3      3      5      4      4      4      5      3      4 #> [2,]      6      7      3      2      6      5      6      4      5      6 #> [3,]      6      7      8      7      7      5      5      6      5      4 #>      [,259] [,260] [,261] [,262] [,263] [,264] [,265] [,266] [,267] [,268] #> [1,]      3      3      3      4      4      2      4      4      5      4 #> [2,]      5      5      7      8      5      5      6      8      7      6 #> [3,]      5      7      6      7      7      7      7      7      6      4 #>      [,269] [,270] [,271] [,272] [,273] [,274] [,275] [,276] [,277] [,278] #> [1,]      4      4      3      3      2      3      3      4      3      3 #> [2,]      8      6      6      4      7      7      8      7      5      6 #> [3,]      7      6      6      6      5      7      8      6      5      7 #>      [,279] [,280] [,281] [,282] [,283] [,284] [,285] [,286] [,287] #> [1,]      4      3      2      4      4      3      3      3      4 #> [2,]      9      6      2      3      4      8      4      4      4 #> [3,]      7      6      0      0      6      5      4      6      3 #>  #>  #> $sigma2_omega #>           [,1]      [,2]       [,3]       [,4]       [,5] #> [1,] 1.3930681 0.6354695 1.22815484 0.39805547 0.07219179 #> [2,] 0.1172092 0.0994348 0.09184514 0.21559340 0.15496162 #> [3,] 1.1686462 1.4323917 0.21954980 0.03684169 0.01983866 #>  #> $s_ #>           [,1]      [,2]      [,3]       [,4]       [,5] #> [1,] 0.7172934 0.6565914 0.4459175 0.80505366 0.12442119 #> [2,] 0.4373844 0.1633971 0.1533522 0.27125972 0.05512068 #> [3,] 0.7093221 1.1245671 0.6494023 0.04611702 0.01755139 #>  #> $sigma #> , , 1 #>  #>           [,1]     [,2]      [,3]      [,4]      [,5]      [,6]     [,7] #> [1,] 1.1870333 1.198990 0.7273017 0.7079010 0.8731424 1.6234149 1.712658 #> [2,] 0.8752107 1.178248 1.0622378 0.9822162 0.8387528 1.3799278 1.003101 #> [3,] 0.9415952 1.002819 1.1399651 0.9784184 1.0637752 0.9878374 1.071220 #>          [,8]      [,9]     [,10]     [,11]    [,12]     [,13]     [,14] #> [1,] 1.083710 0.7844146 1.1099332 0.8760347 1.002820 1.5654867 1.2573249 #> [2,] 1.168888 1.1065002 0.9795535 0.6987580 1.154915 1.0399219 0.7605800 #> [3,] 1.135048 0.9860823 1.0307694 0.9373116 1.006976 0.9848333 0.9936455 #>          [,15]    [,16]     [,17]     [,18]     [,19]     [,20]     [,21] #> [1,] 0.8539476 1.226250 1.0232938 0.6604408 0.9019922 1.9163470 1.1064168 #> [2,] 1.1718379 1.058143 1.0903675 1.0332976 1.2054929 0.8451355 0.8456251 #> [3,] 1.0894691 1.033784 0.9902467 1.0470204 1.0139229 1.0470271 1.0499948 #>          [,22]    [,23]    [,24]     [,25]    [,26]     [,27]     [,28] #> [1,] 0.8685049 1.096040 1.428860 0.8077082 1.234088 0.8930972 0.7208760 #> [2,] 1.1057485 1.143054 1.030184 1.2661030 1.088680 0.9173460 1.0596159 #> [3,] 0.9888111 1.042925 1.052187 0.9568855 1.100874 1.0208470 0.8650552 #>          [,29]     [,30]     [,31]     [,32]     [,33]     [,34]     [,35] #> [1,] 0.6972886 0.5246588 1.0613843 1.1205666 1.4713649 0.8615491 0.9258482 #> [2,] 1.0049832 0.9194660 1.1517333 0.9902110 0.7727503 0.9179721 1.0163625 #> [3,] 1.0234835 1.0319444 0.9468647 0.9978313 1.0457587 0.9647166 1.0864313 #>          [,36]    [,37]    [,38]    [,39]     [,40]     [,41]     [,42] #> [1,] 2.0265917 1.086778 1.092539 1.091717 0.9112148 0.8688412 1.1208483 #> [2,] 1.1939908 1.005873 1.219555 1.081860 0.8255622 1.0410893 0.9962571 #> [3,] 0.9186557 1.156047 1.087871 1.045573 1.0561042 0.9480437 0.8835061 #>         [,43]     [,44]     [,45]    [,46]     [,47]     [,48]    [,49] #> [1,] 1.110831 0.9005486 1.0766195 1.757656 0.8674045 1.2712240 1.649317 #> [2,] 1.061167 0.8033122 0.8793278 1.143204 0.8820955 0.8816781 1.166457 #> [3,] 1.099664 1.0046902 1.0345310 1.034553 0.9065064 0.8816958 1.049951 #>          [,50]     [,51]     [,52]     [,53]     [,54]     [,55]     [,56] #> [1,] 0.8207161 0.9576294 0.6829525 1.5762294 1.1364332 1.6451902 0.7025028 #> [2,] 0.9141008 0.8775859 0.9320175 0.7943428 1.2543098 1.0539720 0.9662210 #> [3,] 1.0422939 1.0719844 1.1064336 1.0531364 0.9410497 0.9515262 0.9392963 #>          [,57]     [,58]     [,59]     [,60]     [,61]     [,62]     [,63] #> [1,] 0.5748014 1.6053984 1.2205367 1.1421768 1.4557738 0.9055571 0.7770760 #> [2,] 0.9440919 0.8712502 0.9929766 1.1117372 0.7879114 0.8941156 1.2299319 #> [3,] 1.0085636 0.9978136 1.0002708 0.9701822 1.0813709 0.9647534 0.9965705 #>          [,64]     [,65]     [,66]     [,67]     [,68]     [,69]     [,70] #> [1,] 0.7631251 0.9442808 0.9903946 0.9229454 0.9774623 1.1059084 0.8915635 #> [2,] 1.1271818 0.9177684 1.1506953 1.1270871 1.0285317 0.7581381 0.8738045 #> [3,] 1.0477557 0.9686368 1.1049098 1.0411608 0.9611810 0.9624276 0.9958829 #>         [,71]     [,72]     [,73]     [,74]    [,75]     [,76]     [,77] #> [1,] 1.062249 0.9633487 1.1618117 0.9979429 1.222990 1.1310058 0.9390228 #> [2,] 1.081472 1.1456439 0.9823117 0.8375574 1.077742 0.8873781 1.0682710 #> [3,] 1.055161 1.0817317 1.0160195 1.0408353 1.013675 0.9555274 1.0276096 #>          [,78]     [,79]     [,80]     [,81]     [,82]    [,83]     [,84] #> [1,] 1.1907565 0.8749210 0.8234130 0.8576711 0.8594073 1.202658 1.0018718 #> [2,] 0.9596357 0.8758724 1.0313838 0.8567292 1.2060634 1.011866 0.9144585 #> [3,] 1.0282171 0.9264393 0.9255951 1.0138186 1.1429505 1.054291 1.0039578 #>          [,85]    [,86]     [,87]    [,88]     [,89]     [,90]     [,91] #> [1,] 0.6141396 1.449211 1.6222895 0.602257 0.8651358 0.9696576 1.2610127 #> [2,] 0.9629595 1.101435 0.8595869 1.052727 0.8628531 1.0678306 0.9766155 #> [3,] 0.9922443 1.023724 1.0341522 1.060767 0.9895990 1.0032221 1.0905120 #>         [,92]     [,93]     [,94]     [,95]     [,96]    [,97]     [,98] #> [1,] 1.072785 0.7831371 0.5457996 0.7973046 0.6729073 1.289178 0.6072511 #> [2,] 1.033028 0.8585170 1.0983126 1.2061400 0.9346985 1.020652 1.0378286 #> [3,] 1.064336 0.9944559 0.9512078 1.0343215 1.0051904 1.054117 0.9525408 #>          [,99]    [,100]   [,101]    [,102]    [,103]    [,104]   [,105] #> [1,] 1.3052907 0.8480399 1.495713 0.8680693 0.7887459 0.7296063 1.350249 #> [2,] 0.8586709 0.9950817 1.146361 0.9328107 1.0842446 1.0956739 1.106158 #> [3,] 1.0869039 1.0425340 1.059283 0.9823883 0.9508756 1.0859995 1.118736 #>         [,106]   [,107]    [,108]    [,109]    [,110]    [,111]    [,112] #> [1,] 0.8644338 1.097380 0.9894507 0.6622013 0.7785622 1.0715582 0.8421685 #> [2,] 1.1151306 1.172577 1.3616784 1.0490903 1.0568663 0.9002822 1.0281144 #> [3,] 0.9687901 1.054237 0.9595033 1.0457746 1.0209549 1.0664594 1.0587698 #>         [,113]    [,114]    [,115]    [,116]    [,117]    [,118]    [,119] #> [1,] 1.7029339 1.1052722 1.4970920 0.5876337 0.8194538 0.7320782 0.8119538 #> [2,] 0.9839865 0.6296377 1.1543352 0.9780173 1.1380690 0.9872920 0.9330877 #> [3,] 1.0823641 1.0711599 0.9232408 1.0339775 1.0498636 0.9542441 1.0057472 #>         [,120]    [,121]    [,122]    [,123]    [,124]    [,125]    [,126] #> [1,] 1.0579592 1.9937988 1.2926571 0.9481951 0.8736205 0.8456228 0.7383379 #> [2,] 1.1855358 0.9860507 0.8639983 1.1189137 1.1116448 0.9074782 0.9815653 #> [3,] 0.9687118 1.0916679 1.0917402 0.9858213 0.9309131 0.9904580 0.9557103 #>         [,127]    [,128]   [,129]    [,130]    [,131]    [,132]    [,133] #> [1,] 1.3026384 0.6463959 1.090447 0.9816787 0.6830636 1.5191143 1.2864103 #> [2,] 0.8548116 1.0319541 0.910050 0.7854374 1.1934287 0.9600256 1.0061076 #> [3,] 1.0927983 0.9653090 1.059196 0.8691142 0.9096084 0.9995099 0.9829711 #>         [,134]    [,135]    [,136]    [,137]    [,138]    [,139]    [,140] #> [1,] 0.8522932 1.0905865 1.4931511 1.2254426 1.0603916 1.0347556 0.9717404 #> [2,] 0.8670291 1.3264076 0.9673105 0.8064286 0.8350786 0.9984196 1.0026082 #> [3,] 1.0704641 0.9714979 1.1285935 0.9625660 0.9930819 0.9755794 1.0119882 #>         [,141]    [,142]    [,143]    [,144]    [,145]    [,146]    [,147] #> [1,] 1.3325342 0.6640776 0.9128676 0.8138123 0.9473877 1.7000724 1.0732330 #> [2,] 0.9150597 1.1550521 0.9230084 0.8173025 0.9070569 1.3711384 0.7582313 #> [3,] 1.0267229 0.9820799 0.9753617 1.0499414 0.9783682 0.9555742 1.1042568 #>         [,148]   [,149]    [,150]    [,151]    [,152]    [,153]    [,154] #> [1,] 0.7213945 1.037945 1.2157825 1.4136032 0.9930536 0.9379582 1.5557919 #> [2,] 1.0255462 1.195408 0.9946063 1.0342912 1.0181172 0.9764323 1.0419909 #> [3,] 0.9759262 1.037338 0.9292926 0.9449961 0.9574000 1.0960400 0.9667143 #>         [,155]    [,156]    [,157]    [,158]    [,159]    [,160]    [,161] #> [1,] 0.8208661 1.0505192 0.9229979 1.0296895 1.2019066 1.1611320 1.3275219 #> [2,] 1.1479677 0.9477394 0.9107933 0.8917729 0.9253543 0.9683263 1.1271943 #> [3,] 0.9904645 0.9699721 0.9759286 0.8224209 1.0403403 0.9528188 0.9666293 #>         [,162]    [,163]    [,164]    [,165]    [,166]    [,167]    [,168] #> [1,] 1.0873690 0.7359479 0.8129664 0.7690406 1.6198668 0.6756598 0.7255064 #> [2,] 0.9618221 1.3177127 1.0655093 1.0532976 0.8511702 0.8790273 1.0932877 #> [3,] 0.9784809 0.9422041 1.0311908 1.0553427 0.8897387 1.0516900 0.9622754 #>         [,169]    [,170]    [,171]   [,172]    [,173]    [,174]    [,175] #> [1,] 0.8697048 1.0004862 0.7038512 1.206511 1.3746675 0.8710691 1.4632452 #> [2,] 0.7920250 0.9980053 1.0964510 1.065906 1.3558989 0.8348801 0.8948555 #> [3,] 0.9706747 1.1202229 0.9188594 1.097474 0.9368237 1.0425055 1.1229812 #>         [,176]    [,177]    [,178]   [,179]   [,180]    [,181]    [,182] #> [1,] 0.9477452 0.8591757 0.6409486 2.163340 1.292738 0.7488206 0.8701933 #> [2,] 1.1607397 0.8857689 0.9937099 1.124663 1.153740 0.8899930 0.8419112 #> [3,] 0.9906319 1.0033950 0.9958431 1.003957 0.984733 1.0787199 0.9819702 #>         [,183]    [,184]    [,185]    [,186]    [,187]   [,188]    [,189] #> [1,] 1.3504094 1.6914271 1.5504080 0.6841622 0.8041218 1.033416 0.9734505 #> [2,] 0.9932914 0.8791484 1.0462293 1.1877483 1.0272742 1.333003 0.9793975 #> [3,] 1.0202507 0.9769767 0.9750951 1.1101100 0.9730032 0.995096 1.0279119 #>         [,190]    [,191]   [,192]    [,193]    [,194]    [,195]    [,196] #> [1,] 0.9533742 0.8724771 1.813332 0.9846265 0.7991424 0.8957130 1.1318406 #> [2,] 0.9745116 0.9816004 1.067191 0.9391047 1.0172333 1.1544524 0.9670359 #> [3,] 1.0421828 0.9969493 1.054465 1.1129017 0.9521306 0.9556272 0.9266272 #>         [,197]   [,198]    [,199]    [,200]    [,201]    [,202]    [,203] #> [1,] 1.0294242 1.025966 1.0910485 1.2656925 1.2109830 0.6958749 1.0458941 #> [2,] 0.9178894 1.122463 0.7801340 0.9185677 1.0109116 0.9365723 0.9428871 #> [3,] 1.1086210 0.983653 0.9845888 0.9483481 0.9892036 1.0572290 0.9953231 #>         [,204]    [,205]    [,206]    [,207]   [,208]    [,209]   [,210] #> [1,] 0.8762117 0.9638108 1.1797299 1.1711335 1.414787 0.7655589 1.042641 #> [2,] 0.7839504 0.9263068 0.9741187 0.8658114 1.260192 1.0685198 1.208713 #> [3,] 0.9660075 0.9734634 0.9410209 0.9425479 1.062807 0.9261008 1.106353 #>         [,211]    [,212]   [,213]    [,214]    [,215]    [,216]    [,217] #> [1,] 0.9524185 0.9319820 0.737948 0.8446320 1.9825423 0.8627173 1.3060527 #> [2,] 0.9035679 0.8158439 1.022550 0.8678298 0.9293817 1.0992173 1.1008372 #> [3,] 1.0085007 1.0925534 1.017500 0.9217241 0.9737131 1.1137269 0.9989951 #>         [,218]   [,219]    [,220]    [,221]    [,222]    [,223]    [,224] #> [1,] 0.8700148 1.128642 0.7281854 0.7381635 1.1179162 0.9131567 0.6917456 #> [2,] 1.0231091 1.197115 0.7550607 1.2761746 0.8801757 0.8764437 1.0543203 #> [3,] 0.9929596 1.001191 1.1003012 0.9939852 1.0481545 1.1294423 0.9491111 #>        [,225]    [,226]    [,227]    [,228]    [,229]   [,230]    [,231] #> [1,] 1.261842 0.9585301 1.2403348 1.0434898 0.8351117 1.223422 0.9770359 #> [2,] 1.278784 0.8453422 0.9952625 1.1443721 0.8452493 1.016559 0.9401180 #> [3,] 1.027633 1.0256309 0.9439062 0.8906082 1.0242104 1.076540 1.0749315 #>         [,232]   [,233]   [,234]    [,235]    [,236]    [,237]    [,238] #> [1,] 0.9401058 1.126074 1.106070 1.1368120 0.9296059 1.3168789 1.4031729 #> [2,] 0.9272669 1.027113 1.021028 0.9925135 0.9736393 0.9578463 1.1728909 #> [3,] 1.1293848 1.073748 1.053638 1.0348689 0.9112493 0.9773859 0.8958958 #>         [,239]    [,240]    [,241]    [,242]    [,243]    [,244]    [,245] #> [1,] 1.0916799 1.2102794 0.9073371 0.9232780 0.9443829 1.1585713 0.8508870 #> [2,] 0.9657805 1.0985535 0.8381913 0.9420149 1.0161799 1.0895904 0.9076832 #> [3,] 1.0470973 0.9918789 1.0091901 0.9529675 0.9781719 0.9213458 1.0984434 #>         [,246]   [,247]    [,248]    [,249]    [,250]    [,251]   [,252] #> [1,] 0.9559746 1.201846 0.9950960 1.1727895 1.1082603 1.0267022 1.080022 #> [2,] 1.0864576 1.067172 1.0197569 0.9909146 0.8330579 1.0761309 1.097767 #> [3,] 1.0398474 0.986652 0.9194985 0.9992233 1.0121998 0.9394206 1.040928 #>         [,253]   [,254]    [,255]    [,256]    [,257]    [,258]    [,259] #> [1,] 2.1902761 1.274597 0.7437973 1.0591332 0.6332921 1.1169627 0.7927062 #> [2,] 0.9483769 0.913560 1.1675247 0.9025956 1.0383451 1.1950367 1.0172105 #> [3,] 0.9274161 1.000230 0.9963068 0.9963781 1.0434537 0.9712211 1.0809000 #>         [,260]   [,261]    [,262]    [,263]    [,264]   [,265]   [,266] #> [1,] 0.8078372 1.196120 0.8941561 0.8136830 0.8507747 1.404637 1.182832 #> [2,] 0.9521813 1.190170 1.0367931 1.0056450 1.0221032 1.131051 1.008573 #> [3,] 1.1037364 1.125583 1.0301128 0.9204604 0.9533596 1.014063 1.075229 #>        [,267]    [,268]    [,269]   [,270]   [,271]    [,272]    [,273] #> [1,] 1.053258 1.1792165 1.0702473 1.549332 1.034220 1.6777057 0.8763943 #> [2,] 1.151914 1.0450493 0.8562669 1.255434 1.021952 0.7996018 1.0436227 #> [3,] 1.108947 0.9541788 0.9573406 1.026761 1.039856 0.9661182 1.0028858 #>         [,274]    [,275]    [,276]   [,277]    [,278]    [,279]    [,280] #> [1,] 0.8118141 0.9917815 1.0473755 1.806367 1.3070767 0.9116396 1.0251402 #> [2,] 0.9580410 1.1054131 1.1342439 1.098812 0.8790443 1.0140224 0.9538590 #> [3,] 0.9179400 0.9553022 0.9143483 1.032776 1.1511506 1.0471615 0.9732635 #>         [,281]    [,282]    [,283]    [,284]    [,285]    [,286]    [,287] #> [1,] 0.8920220 1.1250104 1.2583186 0.8424959 1.1114832 1.2333668 1.2732939 #> [2,] 1.0395139 1.0465027 0.9038842 1.2437962 0.9082128 0.8486886 1.2057687 #> [3,] 0.9105156 0.9482969 0.9690209 0.9723580 0.9848951 1.0256138 0.9630782 #>  #> , , 2 #>  #>           [,1]      [,2]      [,3]      [,4]     [,5]      [,6]      [,7] #> [1,] 0.8017423 0.6252807 0.6308739 0.8557754 0.644380 1.6562095 1.1551011 #> [2,] 1.2189222 1.0989416 0.8734325 1.0346667 1.021472 0.9546706 0.9606542 #> [3,] 1.0158513 0.9698039 1.0002412 1.0020419 1.054486 1.0884888 1.1020565 #>           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14] #> [1,] 2.2833721 0.8619847 0.6934678 0.9775885 0.7677566 1.0065549 1.5155633 #> [2,] 0.9413167 0.9777546 0.9112184 0.9967257 0.8732354 0.9421066 0.9496241 #> [3,] 0.9796902 1.0172723 0.9937852 1.0175240 0.9762321 1.0073810 0.9230202 #>          [,15]     [,16]     [,17]     [,18]     [,19]     [,20]    [,21] #> [1,] 0.9045339 0.7001264 0.8069645 1.0205194 1.0457098 1.2391068 1.056779 #> [2,] 0.9318088 0.8819542 1.1111610 1.0507033 0.9830362 0.9816315 1.012116 #> [3,] 0.9717004 0.9781646 1.0053050 0.9713207 0.9492544 1.0360477 1.000530 #>          [,22]     [,23]     [,24]    [,25]     [,26]     [,27]     [,28] #> [1,] 0.6399257 1.1614945 1.0065684 0.647189 0.9955004 0.6872111 1.1239554 #> [2,] 0.9668377 1.0896933 0.9227978 1.087405 0.9430424 1.0391308 0.9264996 #> [3,] 0.9795690 0.9897431 1.0070146 1.058113 1.0425942 0.9594666 0.9782237 #>          [,29]     [,30]     [,31]    [,32]     [,33]    [,34]     [,35] #> [1,] 0.6535614 0.8009037 0.8953625 1.082379 1.5030555 1.099676 1.2959411 #> [2,] 1.0381801 1.0238742 1.0041293 0.932771 1.1179862 1.003787 1.0082676 #> [3,] 1.0266908 1.0660117 0.9743885 1.008630 0.8925275 0.955812 0.9707947 #>         [,36]     [,37]     [,38]    [,39]     [,40]     [,41]     [,42] #> [1,] 1.968090 0.8680727 1.1278980 1.560583 0.8641315 0.7795635 0.8777086 #> [2,] 1.074109 0.8879576 0.9072493 1.101846 0.9299357 1.0582687 1.0862773 #> [3,] 0.998989 0.9747459 1.0549614 1.015262 0.9657155 0.9700423 0.9701461 #>          [,43]    [,44]     [,45]     [,46]    [,47]     [,48]     [,49] #> [1,] 0.9996450 1.372536 1.6572972 0.8941194 1.064095 1.0290451 0.9635474 #> [2,] 0.8494271 1.215693 0.9572909 0.8142155 1.026433 0.8316593 1.1374099 #> [3,] 1.0136555 1.019826 0.9746593 1.0003391 0.988377 1.0447674 1.0758677 #>          [,50]     [,51]     [,52]     [,53]     [,54]    [,55]    [,56] #> [1,] 0.6728549 1.0158190 0.9738860 0.8943559 1.5984791 1.028209 1.085525 #> [2,] 0.7462751 1.2530564 0.9430902 1.2207490 1.0493010 1.059263 1.039108 #> [3,] 0.9688327 0.9897602 1.0864907 1.0178231 0.9909271 1.040296 1.037082 #>          [,57]     [,58]     [,59]     [,60]     [,61]     [,62]    [,63] #> [1,] 0.4656086 1.1368548 1.0256866 1.2057468 1.0044030 1.4707077 0.927892 #> [2,] 1.0287726 0.8249028 0.9955695 0.8850163 0.9337188 0.8809278 1.028855 #> [3,] 0.9483372 1.0312154 0.9742150 1.0374676 1.0013404 1.0018441 1.050172 #>          [,64]     [,65]     [,66]     [,67]     [,68]     [,69]     [,70] #> [1,] 0.8141797 1.0721062 1.1705783 0.8509965 1.0542599 1.0735076 0.8344979 #> [2,] 0.9969498 0.9439667 0.9010586 1.0936849 1.0012190 0.8489771 0.9344837 #> [3,] 1.0360258 1.0078637 1.0423790 1.0007773 0.9812124 0.9864287 0.9674856 #>          [,71]     [,72]     [,73]     [,74]     [,75]    [,76]     [,77] #> [1,] 1.6303614 1.0856071 0.8345938 0.9760723 0.8943398 1.212004 0.7488148 #> [2,] 0.8974694 1.0274660 0.9814864 1.0345553 1.1024550 1.112959 1.0114310 #> [3,] 0.9324004 0.9975054 0.9590620 1.0035320 0.9418240 1.000276 1.0358344 #>          [,78]     [,79]     [,80]     [,81]    [,82]    [,83]     [,84] #> [1,] 1.2575608 1.1086987 1.0106489 0.8708898 1.058890 1.133160 0.9295992 #> [2,] 1.0653864 0.9802991 1.0626039 0.8956777 1.124342 1.098199 1.0658442 #> [3,] 0.9979388 1.0882861 0.9761567 0.9733225 1.059738 1.000210 1.0417534 #>          [,85]     [,86]     [,87]     [,88]     [,89]     [,90]     [,91] #> [1,] 0.7063676 0.7227629 1.4207687 1.0797678 1.6439573 0.7937985 0.7146329 #> [2,] 0.9551408 1.1522995 0.9122930 0.8796392 1.0904634 0.9883965 1.0656044 #> [3,] 1.0135602 1.0215043 0.9550551 1.0059027 0.9416426 0.9200139 0.9835939 #>          [,92]     [,93]     [,94]     [,95]     [,96]     [,97]    [,98] #> [1,] 0.7718285 0.9337924 0.5570630 0.9131597 0.7508635 0.8938231 0.602354 #> [2,] 0.8695437 0.9656620 0.9663033 0.9960487 1.0748286 0.9629100 1.121704 #> [3,] 0.9409701 1.0394659 0.9190086 0.9569477 0.9616904 1.0275516 1.007330 #>          [,99]   [,100]    [,101]    [,102]   [,103]    [,104]    [,105] #> [1,] 0.9170189 1.025337 1.7902275 1.0407211 1.184220 0.8541348 1.5877912 #> [2,] 0.9973328 1.039342 0.8493334 1.0308546 1.034527 1.0355444 0.9532688 #> [3,] 1.0726463 1.032408 1.0250638 0.9222135 1.001587 0.9591814 1.0471990 #>         [,106]    [,107]    [,108]    [,109]    [,110]    [,111]    [,112] #> [1,] 0.9357116 0.7766245 0.8289801 0.7486149 0.7012972 0.7900096 0.6866303 #> [2,] 1.0114212 1.2031621 0.9148657 1.1408485 0.9299442 1.1078923 0.8438281 #> [3,] 1.0402773 0.9877383 1.0025383 0.9672177 1.0008910 0.9904278 0.9832125 #>         [,113]    [,114]    [,115]    [,116]    [,117]    [,118]    [,119] #> [1,] 1.6734205 0.9445629 1.2094277 0.6876387 0.9816548 1.0642528 0.8235652 #> [2,] 1.1356936 0.8383218 1.1103286 0.9853842 0.9816158 1.0905889 1.0813297 #> [3,] 0.9474843 0.9768141 0.8944413 0.9514157 1.0542742 0.9756286 0.9795537 #>         [,120]   [,121]   [,122]    [,123]   [,124]   [,125]    [,126] #> [1,] 0.8050020 1.121252 1.151691 0.7287234 0.908503 1.213753 1.4757540 #> [2,] 0.8969044 1.034244 1.005600 1.0424924 0.913099 1.164628 0.8374136 #> [3,] 0.9842994 1.052493 1.023923 0.9916598 1.013336 0.963725 0.9485726 #>         [,127]    [,128]   [,129]    [,130]    [,131]    [,132]    [,133] #> [1,] 1.0314113 0.6485570 1.012685 0.9248816 0.6517341 0.9852483 1.1973088 #> [2,] 0.9851700 0.9049503 1.025429 0.8708770 0.9449764 1.0849471 0.8933982 #> [3,] 0.9784429 1.0149862 1.021552 0.9667115 1.0209742 0.9703049 0.9738693 #>         [,134]    [,135]   [,136]    [,137]    [,138]    [,139]    [,140] #> [1,] 1.3378996 0.8372340 1.643044 0.8773675 1.0047046 0.7184065 0.8206715 #> [2,] 0.9770035 0.9013090 1.330504 0.9930228 0.8684959 1.0185667 1.0658169 #> [3,] 1.0573987 0.9887388 1.023258 0.9982936 0.9899271 0.9878853 0.9430155 #>         [,141]    [,142]    [,143]    [,144]    [,145]    [,146]    [,147] #> [1,] 0.8026821 0.9316502 0.7793503 1.1643830 1.1420443 1.1617702 0.8232201 #> [2,] 0.9127416 1.0979374 1.0274053 0.8507315 0.9312434 0.8159648 1.0223084 #> [3,] 0.9641351 1.0265221 1.0303969 1.0396410 0.9744666 0.9841225 1.0075003 #>         [,148]    [,149]    [,150]    [,151]    [,152]    [,153]   [,154] #> [1,] 0.9485559 0.9855259 0.7768479 1.0702590 0.8918669 0.8473934 1.410362 #> [2,] 0.9841147 1.0710039 0.9815588 1.0456955 0.9192748 1.0570987 1.018812 #> [3,] 0.9925793 0.9176255 0.9607051 0.9948233 0.9806879 1.0304508 1.002397 #>        [,155]    [,156]    [,157]   [,158]    [,159]   [,160]   [,161] #> [1,] 1.124484 1.0484880 0.9543935 1.031919 1.0493826 1.649259 1.191975 #> [2,] 1.011162 1.2014185 1.0431501 1.011985 0.9922703 1.058455 1.154260 #> [3,] 1.107850 0.9865274 1.0706816 1.012398 0.9380608 1.031285 1.041836 #>         [,162]    [,163]    [,164]    [,165]    [,166]    [,167]    [,168] #> [1,] 0.6932584 0.9204455 0.6454912 0.6057610 0.9725771 0.7204309 0.7326925 #> [2,] 0.9435297 0.7476962 1.0513580 0.9098892 0.9635310 0.9695059 1.0776914 #> [3,] 0.9581829 1.0391430 1.0318769 0.9604047 0.9993733 0.9564714 0.9910949 #>         [,169]    [,170]    [,171]    [,172]    [,173]    [,174]    [,175] #> [1,] 0.6385992 0.9031539 0.6025237 1.2076955 1.4888286 1.0037478 0.9700996 #> [2,] 1.0329087 1.0699618 0.9192610 1.2200633 0.8801255 0.9944385 1.0617494 #> [3,] 1.0307767 0.9975505 1.0342030 0.9906412 0.9999028 0.9873440 0.9716086 #>         [,176]    [,177]    [,178]    [,179]    [,180]    [,181]    [,182] #> [1,] 0.5795015 1.0797096 0.7595168 0.8862842 0.9480350 0.7056670 0.9918371 #> [2,] 0.9792415 0.8584964 0.9290053 1.0885180 1.0332583 0.9811803 1.0836364 #> [3,] 0.9719281 1.0018628 0.9792308 0.9864717 0.9362641 0.9781917 0.9605014 #>         [,183]    [,184]    [,185]    [,186]    [,187]   [,188]   [,189] #> [1,] 1.2318097 1.0687492 1.1537538 0.7068420 0.8163263 1.050858 0.877781 #> [2,] 0.8913706 0.9371186 0.9830802 0.9642970 1.0934545 1.058068 1.032636 #> [3,] 1.0409362 0.9238094 0.9970683 0.9796556 0.9726793 1.040012 1.048522 #>         [,190]    [,191]   [,192]   [,193]    [,194]    [,195]   [,196] #> [1,] 0.5987895 0.9650462 1.361416 1.421292 0.6853737 0.9604531 1.420958 #> [2,] 0.8783063 1.0223712 1.026992 1.037798 1.1032158 0.9931128 1.297751 #> [3,] 0.9427597 1.0631922 0.979583 1.041044 1.0316081 1.1025790 1.077381 #>        [,197]   [,198]    [,199]    [,200]    [,201]    [,202]    [,203] #> [1,] 1.119187 1.065896 0.6989455 0.8541570 1.5433926 1.2796213 0.8479797 #> [2,] 1.209720 1.002568 0.8379441 0.9656147 1.0788980 1.2079792 0.9093480 #> [3,] 1.028344 1.033130 0.9367951 1.0247643 0.9453833 0.9475056 1.0272601 #>         [,204]    [,205]    [,206]    [,207]    [,208]    [,209]    [,210] #> [1,] 1.1370201 0.9806085 0.7548908 0.9933633 1.0189550 0.9523524 0.8884595 #> [2,] 0.9414916 0.8608709 0.8736603 0.7999985 1.1546887 0.8802501 0.9005714 #> [3,] 1.0031198 0.9584249 1.0627805 0.9873925 0.9781146 1.0664520 1.0663288 #>         [,211]   [,212]   [,213]    [,214]   [,215]   [,216]   [,217]    [,218] #> [1,] 1.1436128 1.034237 1.490034 1.0377789 1.420971 1.352099 1.823638 0.9960250 #> [2,] 0.8653339 1.080173 1.005987 0.9677359 1.111050 1.029632 1.164043 0.8891117 #> [3,] 1.0001646 1.026749 1.021246 1.0451360 1.088519 1.042092 0.929261 1.0377379 #>        [,219]    [,220]    [,221]   [,222]    [,223]    [,224]   [,225] #> [1,] 1.087591 0.6964722 0.6575326 0.844835 0.8925017 0.6467630 1.448630 #> [2,] 1.190720 0.8867692 0.9655617 1.004433 1.1091884 0.9650926 1.157925 #> [3,] 1.040579 1.0061346 1.0093296 1.020308 1.0561456 0.9970279 1.061577 #>         [,226]    [,227]    [,228]    [,229]    [,230]    [,231]   [,232] #> [1,] 1.1986990 0.6613723 1.3967034 0.8479049 0.8283023 1.2811058 1.378134 #> [2,] 1.0810210 1.0817888 0.9833598 0.9216124 0.8737640 0.9445637 1.039057 #> [3,] 0.9997629 1.0179629 0.9564526 1.0821183 0.9904084 1.0483149 1.033174 #>         [,233]    [,234]    [,235]    [,236]    [,237]    [,238]    [,239] #> [1,] 0.9125866 1.5931938 1.0844513 0.6752367 0.7510664 0.8343275 1.2820905 #> [2,] 1.0984615 1.0318040 0.9872028 0.9210506 1.0304045 1.0287210 0.8527573 #> [3,] 1.0485810 0.9359993 1.0127744 0.9951214 0.9791222 1.0830948 0.9654368 #>        [,240]    [,241]    [,242]    [,243]    [,244]    [,245]    [,246] #> [1,] 2.363094 0.8792236 0.9365440 1.0911609 0.9210715 1.0617781 1.3124649 #> [2,] 0.842804 0.9473342 0.9147452 1.0321448 1.0795479 0.8883525 0.9842505 #> [3,] 1.039889 1.0317895 1.0090328 0.9682809 0.9351411 0.9773461 1.1052045 #>         [,247]    [,248]    [,249]    [,250]    [,251]    [,252]    [,253] #> [1,] 0.9889020 1.4095708 1.1207467 1.4609029 0.5602839 1.1542973 1.7590051 #> [2,] 0.9969524 0.9535655 1.0940071 0.9397865 1.0170254 0.9059408 0.9805675 #> [3,] 1.1092727 0.9629237 0.8737873 1.0670451 1.0206591 1.0335290 1.0414394 #>        [,254]    [,255]    [,256]    [,257]    [,258]    [,259]    [,260] #> [1,] 1.143827 0.8265216 1.0369206 0.8803519 1.0019814 0.7477460 0.7766089 #> [2,] 1.094942 1.0820315 0.9083001 1.1948827 0.9926204 0.9526103 1.0043914 #> [3,] 1.055102 1.0971326 1.0186919 1.0850382 1.0451412 0.9549264 0.9924367 #>         [,261]    [,262]    [,263]    [,264]    [,265]    [,266]   [,267] #> [1,] 1.3070298 1.1881186 0.9385467 0.9083115 0.7449959 1.0850413 1.420336 #> [2,] 1.0044598 0.9891535 0.9294840 0.8135953 0.8714990 0.9332184 1.039730 #> [3,] 0.9729197 0.9117435 1.0673545 0.9952371 0.9676824 0.9482423 1.008884 #>         [,268]    [,269]    [,270]    [,271]    [,272]    [,273]    [,274] #> [1,] 0.9855859 1.1376033 1.2585436 0.9967473 1.4208986 0.6878803 0.7308330 #> [2,] 0.8939117 0.8723442 1.0406679 1.0145743 1.1114149 0.9628984 0.9886859 #> [3,] 0.9462483 0.9334209 0.9576574 1.0318050 0.9754756 1.0100376 1.0367330 #>         [,275]   [,276]    [,277]    [,278]    [,279]    [,280]    [,281] #> [1,] 0.8715409 1.219957 1.8836862 0.8529663 1.1562326 0.8545397 0.9010598 #> [2,] 0.8357790 1.121704 0.9298627 0.9532161 0.9451947 1.0071022 1.0109437 #> [3,] 1.0197568 0.983604 1.0439948 1.0035811 1.1013354 1.0012706 1.0097002 #>        [,282]   [,283]    [,284]    [,285]    [,286]    [,287] #> [1,] 1.425075 1.144252 0.9608054 0.8312836 1.4970130 1.3222374 #> [2,] 1.031686 1.104030 1.1373811 1.1538222 0.9816026 0.9215111 #> [3,] 0.973730 1.048949 1.0198315 1.0096351 0.9533390 1.0512244 #>  #> , , 3 #>  #>           [,1]      [,2]      [,3]      [,4]      [,5]     [,6]      [,7] #> [1,] 0.9166276 0.6345489 0.5072465 0.8395279 0.7635182 1.274606 0.7967528 #> [2,] 0.8881839 1.0499565 1.2395127 1.0030900 1.2915714 1.209947 0.8294236 #> [3,] 0.8357658 0.8380534 0.8250079 0.9709949 1.0386690 1.054988 1.1896876 #>           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14] #> [1,] 1.3682214 0.8540280 0.5917040 1.1080740 0.8826032 0.8721208 0.9891896 #> [2,] 0.9283215 0.9374158 0.7416205 0.8270948 0.8801147 1.0549492 0.9330814 #> [3,] 0.9960752 0.7988361 1.0421460 1.1449442 0.9219224 1.1299143 0.8270850 #>          [,15]     [,16]     [,17]     [,18]     [,19]     [,20]     [,21] #> [1,] 0.8732105 0.8084732 0.8453296 1.0258463 0.9118976 0.8847800 1.1929273 #> [2,] 0.9131209 0.7563933 1.1390478 0.7361033 0.8329817 0.9973834 0.8681478 #> [3,] 0.9182436 1.0109984 0.8992451 0.7851597 1.0358948 1.3145791 1.2914733 #>          [,22]    [,23]     [,24]     [,25]     [,26]     [,27]    [,28] #> [1,] 0.7166261 1.755890 1.7063288 0.6954905 1.1052696 0.8669142 1.037870 #> [2,] 0.7775325 1.030378 1.0965687 1.0936952 0.8250986 0.9025362 1.278210 #> [3,] 0.8170667 1.182143 0.7519812 0.8013441 0.8440995 1.1620664 1.077442 #>          [,29]    [,30]     [,31]     [,32]     [,33]     [,34]     [,35] #> [1,] 1.0508184 0.954378 1.0939356 0.9153929 0.9184732 1.0455324 1.2659565 #> [2,] 0.8822243 1.226451 1.0115948 0.9120215 0.9328280 1.0418221 1.0379240 #> [3,] 1.0447428 0.997506 0.9339738 0.9832648 0.8639424 0.8815813 0.9762111 #>          [,36]     [,37]     [,38]     [,39]     [,40]     [,41]     [,42] #> [1,] 1.2632772 0.8863528 1.4597043 1.2375134 0.6830111 0.9821791 0.5792742 #> [2,] 0.7915124 0.9136527 0.9837649 1.0059423 0.8745843 0.9480508 1.0629349 #> [3,] 1.0907371 0.8269781 0.8946324 0.7603855 0.9861450 0.9308929 1.0399856 #>          [,43]     [,44]     [,45]     [,46]     [,47]     [,48]     [,49] #> [1,] 0.8849836 1.6193533 1.2530248 1.0341326 0.8183638 1.1717771 0.7488537 #> [2,] 0.9472522 1.1314813 1.0621800 0.8819102 0.9404019 1.0745278 1.1102940 #> [3,] 1.1617612 0.7954247 0.7891873 1.2101165 0.9467021 0.8416612 0.7612934 #>          [,50]     [,51]     [,52]     [,53]     [,54]     [,55]     [,56] #> [1,] 0.9935488 1.0553452 0.9835226 0.7529522 0.9061511 0.8822350 0.8952334 #> [2,] 0.9044582 0.7215984 0.9846284 0.9319748 0.7591113 0.8333219 1.0748969 #> [3,] 0.9925296 0.8565797 1.1170536 1.1924832 1.0754243 1.1796938 1.0368303 #>          [,57]     [,58]    [,59]     [,60]     [,61]     [,62]     [,63] #> [1,] 0.8049115 0.8197181 1.075874 1.5949201 0.7263695 0.8110687 1.0814927 #> [2,] 0.9191859 1.0284557 1.001579 0.9313191 1.1079912 0.8812989 0.8508642 #> [3,] 0.8635142 1.1567313 1.343314 0.9868358 0.7642065 0.8770969 1.2461645 #>          [,64]     [,65]     [,66]    [,67]     [,68]     [,69]     [,70] #> [1,] 1.0009761 1.0430509 1.3539588 1.059248 1.2716207 0.7832322 0.6888935 #> [2,] 0.9301662 1.0886335 1.0769202 1.026418 0.9246716 1.0800782 1.1888030 #> [3,] 1.0856368 0.8795683 0.9937956 1.273300 1.0183949 0.9635277 1.0648071 #>          [,71]     [,72]     [,73]     [,74]     [,75]     [,76]     [,77] #> [1,] 1.1691350 0.9976171 0.7538099 0.9417625 0.5875596 0.9460928 1.1216387 #> [2,] 1.0497114 0.9945607 0.8645985 0.9280690 1.0909931 1.0036479 1.0882940 #> [3,] 0.9389964 0.7651842 1.2712520 1.0368979 0.9574892 0.9185149 0.8073615 #>          [,78]    [,79]     [,80]     [,81]    [,82]    [,83]     [,84] #> [1,] 1.3051678 1.056462 0.9033731 0.9924010 1.132439 1.347375 0.7978595 #> [2,] 1.1276380 1.015835 1.0640477 1.0140509 1.092538 1.031427 0.8126311 #> [3,] 0.8911838 1.133161 1.0900795 0.9511267 0.797001 1.180604 0.9258035 #>          [,85]     [,86]     [,87]     [,88]    [,89]     [,90]     [,91] #> [1,] 0.7393090 0.6784342 1.1663146 0.8639199 1.248915 0.7776581 0.8800814 #> [2,] 0.8455929 0.9983241 1.0633235 0.8769549 1.007796 0.9397406 0.9577316 #> [3,] 0.9879649 0.8928141 0.9172809 1.0490461 1.060791 0.9610481 1.0480260 #>          [,92]     [,93]     [,94]     [,95]     [,96]    [,97]     [,98] #> [1,] 1.3092001 0.9097577 0.8797855 1.1073694 1.1597929 0.700209 0.8658491 #> [2,] 0.9654520 1.0581158 0.7857169 0.8384316 0.9600276 1.045071 0.9411111 #> [3,] 0.6057559 0.7853736 0.9070972 1.1324775 0.9700851 0.677715 1.2204591 #>          [,99]    [,100]   [,101]    [,102]    [,103]    [,104]    [,105] #> [1,] 0.9769371 1.0738934 1.260100 1.7473706 0.8412866 0.8186294 1.1513550 #> [2,] 0.8437168 0.9775057 1.048770 0.9045939 0.9023248 1.1030266 0.7066167 #> [3,] 1.3243083 1.2755984 1.424953 0.8638890 1.0940530 1.3559240 1.0477512 #>         [,106]    [,107]    [,108]    [,109]    [,110]    [,111]    [,112] #> [1,] 1.2090036 0.9965421 0.8740628 0.5692997 0.7662449 0.6866800 0.7096208 #> [2,] 0.9057372 1.0504797 0.9770035 0.8112986 0.7134438 0.9749365 1.0802090 #> [3,] 1.2374300 0.9979153 1.0254780 0.7169227 1.3299383 1.0996022 1.1239740 #>         [,113]    [,114]    [,115]    [,116]    [,117]    [,118]    [,119] #> [1,] 1.1581573 0.6182233 1.1973532 0.7709479 0.9567535 0.9798735 0.8863605 #> [2,] 0.8900492 0.9724437 0.9039301 1.0601743 0.9087789 0.8832277 1.1292142 #> [3,] 1.0399581 1.0581236 0.7409965 0.9669997 0.9474673 0.9099226 1.0915719 #>         [,120]    [,121]    [,122]    [,123]    [,124]   [,125]    [,126] #> [1,] 0.9135361 1.2899457 0.5786114 0.7470877 0.9638811 1.335410 1.0443283 #> [2,] 1.1401925 1.0786959 1.1540123 1.1013108 0.8939687 1.078988 0.8551596 #> [3,] 0.8910002 0.9207931 1.0916549 1.1380196 1.0166449 1.029482 1.2003832 #>         [,127]    [,128]    [,129]    [,130]    [,131]    [,132]    [,133] #> [1,] 1.1920774 0.7163233 1.1753830 1.0383896 0.5941572 0.9071491 1.5493503 #> [2,] 0.7811612 1.1494009 0.8572732 1.0346079 1.0707445 1.0757599 0.8740935 #> [3,] 1.2192907 1.1452803 1.1976271 0.8433051 0.7222971 0.9949867 0.7102537 #>         [,134]    [,135]    [,136]   [,137]    [,138]    [,139]    [,140] #> [1,] 0.9398654 0.8315089 1.1247747 1.127135 0.9012627 0.8137500 0.9287865 #> [2,] 0.9841386 0.9511038 0.9442964 1.188715 0.6326861 0.9028788 0.9606545 #> [3,] 1.0259914 1.0694933 0.8818309 0.858746 1.0565192 1.0909157 0.9383177 #>         [,141]    [,142]    [,143]    [,144]    [,145]    [,146]    [,147] #> [1,] 0.8946873 1.1139837 1.3943144 1.0901046 1.6942855 0.8970457 1.1112296 #> [2,] 1.0057138 0.8463476 0.9005213 1.0397709 0.9259288 0.8387279 0.9305174 #> [3,] 0.8817552 0.8030443 0.9450026 0.9650252 0.6754830 0.9939344 0.8703529 #>         [,148]    [,149]   [,150]    [,151]    [,152]    [,153]   [,154] #> [1,] 0.8153189 1.0831602 1.116911 0.9784171 0.7457070 0.7470020 1.143093 #> [2,] 1.0289176 1.2363934 1.082234 1.0139708 0.9847593 0.7477253 1.035880 #> [3,] 0.9883655 0.8524763 1.185832 1.0558639 1.1523948 1.0736803 0.963172 #>        [,155]    [,156]    [,157]    [,158]    [,159]    [,160]    [,161] #> [1,] 1.382564 0.6759070 0.9790615 0.8878236 0.7835128 1.1318649 1.0253907 #> [2,] 1.174914 1.0790385 0.7077749 0.9137159 0.8717508 1.1703739 0.9568162 #> [3,] 1.321054 0.9901504 0.9501783 0.8718036 1.2087189 0.8686305 1.3082866 #>         [,162]    [,163]    [,164]    [,165]    [,166]    [,167]    [,168] #> [1,] 0.7783706 0.7419579 0.7536193 0.8291794 1.0741341 0.9885719 0.9997213 #> [2,] 1.0360078 1.2204215 1.0922061 1.2627475 0.7385364 0.9729788 0.8465818 #> [3,] 1.0482376 0.9349368 1.1331009 1.0627715 1.0834975 0.8364443 0.9329944 #>        [,169]    [,170]    [,171]   [,172]   [,173]    [,174]   [,175] #> [1,] 0.674531 1.2454693 0.9935042 1.348483 1.934952 1.4455767 1.018705 #> [2,] 1.467833 0.9872550 0.7620756 1.422912 1.012747 0.8509041 1.360883 #> [3,] 1.037850 0.9378211 1.3186207 1.269947 1.098844 1.1054997 1.070538 #>         [,176]    [,177]    [,178]    [,179]    [,180]    [,181]    [,182] #> [1,] 0.6914239 0.7763066 0.9409148 0.8196364 0.9911617 1.0481652 1.4801297 #> [2,] 1.2073296 0.9503819 0.8456695 0.9858802 0.7433436 1.1466831 1.0223226 #> [3,] 0.8240951 0.7765601 1.0062418 0.8646984 0.9846444 0.9156516 0.8442223 #>         [,183]    [,184]    [,185]    [,186]    [,187]   [,188]    [,189] #> [1,] 0.8713370 1.0442907 0.9976843 0.6768074 0.9601378 1.050977 1.0904717 #> [2,] 1.0384684 1.1761571 0.8846508 1.2415850 0.9892292 1.176889 0.9578757 #> [3,] 0.9895183 0.9834841 1.0731943 1.0691148 0.8168679 1.091837 0.7447195 #>         [,190]    [,191]   [,192]    [,193]    [,194]    [,195]    [,196] #> [1,] 0.6694501 1.0311552 0.968343 1.0775500 0.6206657 1.0117487 0.9364511 #> [2,] 1.1050425 0.8617384 1.157845 0.9716089 0.9116024 0.9552982 1.0742742 #> [3,] 0.9454222 0.7018054 1.010740 0.9663356 1.0235488 1.1292507 1.0002580 #>         [,197]    [,198]    [,199]    [,200]    [,201]    [,202]    [,203] #> [1,] 0.9214707 0.7063066 0.8170206 1.0833593 1.1604216 1.1538192 1.1115560 #> [2,] 1.2281208 0.9457516 1.2641727 1.1115040 0.9376549 0.8574227 1.1712760 #> [3,] 1.2274583 0.8486849 1.0388508 0.9925732 1.0968726 0.9377541 0.9465672 #>         [,204]    [,205]    [,206]   [,207]    [,208]    [,209]    [,210] #> [1,] 1.0417965 0.7697241 0.7383312 1.069105 1.0480570 0.8247855 0.9374566 #> [2,] 1.0219940 0.8634159 0.9840810 1.026942 1.3544329 1.0422018 0.7617534 #> [3,] 0.8788431 0.7655933 0.8174739 1.072518 0.8668333 0.8392803 0.8240809 #>         [,211]    [,212]    [,213]    [,214]    [,215]    [,216]   [,217] #> [1,] 0.9218269 0.6968538 1.0717885 1.0938967 1.1750271 1.2818181 1.058603 #> [2,] 0.9158687 0.9631290 0.8934281 0.9597195 0.7372182 0.9683426 1.255341 #> [3,] 1.1081293 0.8859061 0.8381244 0.8076178 0.9178401 1.4719799 1.218342 #>         [,218]   [,219]    [,220]    [,221]    [,222]    [,223]    [,224] #> [1,] 1.0241070 1.357281 0.8012766 0.7572257 0.7982782 0.8709287 1.1266659 #> [2,] 1.0685851 1.021886 1.1992495 1.0080753 0.9219603 0.7874873 0.8834808 #> [3,] 0.8015435 1.116499 0.9673272 1.1034130 1.1003182 0.7620125 0.9032615 #>        [,225]    [,226]    [,227]   [,228]   [,229]    [,230]    [,231] #> [1,] 1.875888 1.4540293 0.8608571 1.293949 1.120822 0.9349889 1.0660919 #> [2,] 1.193461 0.9568275 0.8864706 1.071469 1.068891 1.1918796 0.8926833 #> [3,] 1.063877 0.9499983 1.1656461 1.246324 1.226593 1.0393331 1.3420172 #>        [,232]    [,233]    [,234]   [,235]   [,236]   [,237]    [,238] #> [1,] 1.095672 1.0059625 1.2391447 1.112860 1.069810 1.181519 1.1545441 #> [2,] 1.204477 0.8627501 1.0608789 0.879156 1.152592 1.044899 0.9080419 #> [3,] 1.028485 0.9557386 0.8584917 1.023593 1.122143 1.323202 0.9404717 #>         [,239]    [,240]    [,241]   [,242]    [,243]    [,244]    [,245] #> [1,] 0.8630319 1.0489975 0.8693923 1.862563 0.9158756 1.0492516 1.0861921 #> [2,] 0.8269680 0.8440743 1.1811910 1.108342 1.1659469 1.2731499 1.1034589 #> [3,] 1.2152308 1.0196059 0.8803357 1.135081 1.2189239 0.8525717 0.9533409 #>         [,246]    [,247]    [,248]    [,249]    [,250]    [,251]    [,252] #> [1,] 0.9447457 1.1712946 0.7092449 0.9869908 1.1840533 0.9763270 1.2077979 #> [2,] 1.0205724 1.0024543 1.2685697 0.8570266 0.8124325 0.9393847 1.0632249 #> [3,] 0.9228334 0.9752437 0.9970618 1.0336100 0.8181296 0.7753468 0.9500113 #>        [,253]   [,254]    [,255]    [,256]    [,257]    [,258]    [,259] #> [1,] 1.357750 1.323316 1.0963036 1.1927913 0.7035687 0.9526639 0.4525940 #> [2,] 1.099415 1.116947 0.7967554 1.1346921 1.0003063 1.1243543 0.8713787 #> [3,] 1.006764 0.917608 1.0053518 0.9113242 1.0372765 0.8845031 0.7556760 #>         [,260]    [,261]   [,262]    [,263]   [,264]    [,265]    [,266] #> [1,] 0.7574193 0.5977491 1.415056 1.4606114 1.089721 0.6738099 0.6379507 #> [2,] 1.1229611 0.8455163 1.354209 0.9541349 1.181130 0.9874657 0.9492553 #> [3,] 0.8946228 1.4608389 0.837544 0.9867872 1.022561 0.9164430 0.9138321 #>        [,267]    [,268]    [,269]    [,270]    [,271]    [,272]    [,273] #> [1,] 1.028954 0.7608817 0.9108439 1.0661256 0.7520654 0.8546944 0.6611755 #> [2,] 0.869893 0.8358240 1.0358741 1.0782863 0.8210737 0.7749018 1.1487750 #> [3,] 1.180263 0.9224757 1.1071020 0.7797783 1.0148971 0.9316614 0.9730723 #>         [,274]    [,275]    [,276]    [,277]    [,278]   [,279]    [,280] #> [1,] 0.7478231 0.9443160 1.5597784 1.5395095 1.5486754 1.294333 1.1403392 #> [2,] 1.1997315 0.9249289 0.7808336 0.9985227 1.2132153 1.179331 0.8194571 #> [3,] 1.0252061 0.9251078 1.1568172 1.2100996 0.9584305 1.168403 0.7086682 #>         [,281]    [,282]    [,283]    [,284]   [,285]    [,286]    [,287] #> [1,] 0.5211762 1.0883254 1.2851726 0.9451525 1.315135 1.4958256 1.0160325 #> [2,] 1.0816136 0.9352532 0.8945736 0.7730202 1.157364 0.7817312 0.9169112 #> [3,] 0.9997676 1.2352530 1.1189490 1.3888600 1.537890 1.0774755 0.9126558 #>  #> , , 4 #>  #>          [,1]      [,2]     [,3]      [,4]     [,5]     [,6]     [,7]      [,8] #> [1,] 1.198081 0.7177950 0.711905 0.9575349 1.015849 1.173211 1.452386 1.0766673 #> [2,] 1.103149 1.2094965 1.020125 1.2003078 1.157797 1.255038 1.129855 1.0799546 #> [3,] 1.038626 0.9782653 1.037186 0.9651652 1.216605 1.311901 1.207754 0.6327692 #>           [,9]     [,10]     [,11]     [,12]     [,13]     [,14]     [,15] #> [1,] 0.9936973 0.9823026 0.9258216 0.9536704 0.7623626 1.1032753 0.7895572 #> [2,] 0.7922101 0.9424321 1.1860819 0.8004237 1.2613321 0.9551742 1.0101075 #> [3,] 0.7880402 0.9539880 0.9649737 1.1420498 0.7244872 0.9916862 0.7692799 #>          [,16]    [,17]     [,18]     [,19]     [,20]     [,21]     [,22] #> [1,] 0.8468382 1.040798 1.3936548 1.4201110 1.0137600 1.2711056 1.0704660 #> [2,] 0.7392089 1.308389 0.7614842 1.0458061 0.8546773 1.0467615 0.9775724 #> [3,] 0.8333958 1.116381 1.0288001 0.9108417 1.2692882 0.9310502 1.1611254 #>          [,23]    [,24]     [,25]     [,26]     [,27]     [,28]     [,29] #> [1,] 1.5045076 1.169728 0.9489528 1.0931570 0.7909711 1.0538359 0.8334784 #> [2,] 0.6446239 1.188408 0.9602891 1.2741321 0.9793142 1.1751599 0.8616432 #> [3,] 0.9898422 1.048461 0.8771878 0.8701617 1.4517317 0.9355823 1.3602388 #>          [,30]     [,31]     [,32]     [,33]     [,34]     [,35]     [,36] #> [1,] 1.1807646 1.0927873 0.7760157 0.9850982 0.9699721 0.9738851 1.1178530 #> [2,] 0.9572156 1.1524331 1.0158697 1.0068787 0.9556437 1.0505208 0.6757173 #> [3,] 0.9009368 0.9567394 0.8163102 1.2117072 0.9045584 1.8497203 1.3429882 #>          [,37]     [,38]     [,39]     [,40]     [,41]     [,42]     [,43] #> [1,] 0.9719058 0.8792871 0.9981678 0.8444149 0.8814290 0.5414373 0.5664751 #> [2,] 0.9325154 1.0970191 0.9771670 1.0379202 0.9546847 1.1961473 0.8445416 #> [3,] 0.8476824 0.9161616 0.9261156 1.1752729 1.1889287 0.9239539 0.8361144 #>          [,44]     [,45]     [,46]     [,47]     [,48]     [,49]     [,50] #> [1,] 1.0053048 1.0178570 0.7983814 0.8278191 1.0558696 0.6093464 0.9396615 #> [2,] 0.9798141 0.8810806 1.2902743 1.0671350 0.7736782 1.0357447 0.8571984 #> [3,] 0.8030085 1.1256156 1.0742537 0.9418159 0.8442412 0.9003370 1.2444284 #>          [,51]     [,52]     [,53]     [,54]     [,55]     [,56]     [,57] #> [1,] 0.8228051 0.8919989 0.8070136 0.8218905 0.7323178 0.9340404 1.3424647 #> [2,] 1.0319767 1.1541156 0.8804703 0.9969365 1.3084644 0.9008355 0.7818401 #> [3,] 0.8179045 0.7717884 0.9851886 0.9454895 1.5143863 1.1554420 1.0829787 #>         [,58]    [,59]     [,60]     [,61]     [,62]    [,63]    [,64]    [,65] #> [1,] 1.358073 1.298176 0.7199714 0.5392565 0.5636201 1.156428 1.001179 1.076267 #> [2,] 1.029095 1.186935 1.2885346 1.5796478 1.0280050 1.176310 1.004828 1.394424 #> [3,] 1.184682 1.042582 0.9380274 0.9843170 0.7406755 1.064829 1.092840 1.124091 #>          [,66]     [,67]     [,68]     [,69]     [,70]     [,71]     [,72] #> [1,] 0.8395095 1.1376096 0.9488998 0.6045186 0.5771019 1.0632961 0.9873276 #> [2,] 0.7425090 0.9088127 1.1464457 1.0327641 1.2311032 1.4980579 1.2275805 #> [3,] 0.8753317 0.8455691 0.6488665 0.7502362 0.9587889 0.6751502 0.7788478 #>          [,73]     [,74]     [,75]    [,76]     [,77]     [,78]     [,79] #> [1,] 0.9670248 0.8853118 0.9560932 1.290361 1.0895271 1.0356462 0.8161074 #> [2,] 0.9178464 1.1100195 0.9504569 1.133046 0.9471809 0.7626402 0.6415578 #> [3,] 0.9424131 1.0994546 1.0961007 1.293265 1.1103001 0.8472954 1.0318521 #>          [,80]     [,81]     [,82]     [,83]     [,84]     [,85]     [,86] #> [1,] 1.0891732 1.1858978 1.1879940 0.5330527 1.0950238 0.8033604 0.8488276 #> [2,] 1.0242570 0.7149394 0.9312299 0.9244435 1.2496619 0.7591870 0.7888814 #> [3,] 0.9611168 0.8294797 0.5643309 0.7462785 0.8679312 0.7827303 0.7318185 #>          [,87]     [,88]     [,89]     [,90]     [,91]     [,92]     [,93] #> [1,] 1.0946653 0.7833742 0.8474467 0.7845958 0.9196666 1.2574049 1.0930637 #> [2,] 1.1237992 0.8997669 1.0984604 1.2199877 0.9230125 0.7346783 1.2936879 #> [3,] 0.6185578 0.5529406 0.9695096 1.0515371 1.0613342 0.9764501 0.8700725 #>          [,94]     [,95]     [,96]    [,97]     [,98]     [,99]    [,100] #> [1,] 0.8242934 0.7288382 0.9396955 0.623368 0.8577593 0.6150989 0.7960161 #> [2,] 0.9688395 0.9897286 0.9224286 1.426775 1.0756026 1.0141693 1.0578917 #> [3,] 1.4265063 1.2086228 1.0378461 1.192684 1.3432519 1.4095601 1.1067420 #>        [,101]    [,102]    [,103]    [,104]    [,105]   [,106]   [,107] #> [1,] 1.008017 0.9098107 0.8311779 0.5579901 1.0323916 1.197678 1.038140 #> [2,] 1.025640 1.0472670 0.9128721 1.0348416 0.8927801 1.145940 1.092534 #> [3,] 1.025274 1.0206060 1.2323709 1.5315295 0.7048926 1.240505 0.829905 #>        [,108]    [,109]    [,110]    [,111]    [,112]    [,113]    [,114] #> [1,] 1.036868 0.9403615 0.8164130 0.7521197 0.8909024 0.7597382 0.5682622 #> [2,] 1.067059 0.7650324 0.9044508 0.9723247 1.0162665 0.9292977 0.8059096 #> [3,] 1.536963 0.8438573 0.8836636 0.9171554 1.2830227 1.1448705 1.2996532 #>         [,115]    [,116]    [,117]    [,118]    [,119]    [,120]    [,121] #> [1,] 0.8723471 0.9617701 1.3010732 1.0091793 0.9648243 0.8395869 1.0546935 #> [2,] 0.8366429 0.7980967 1.0067415 1.0345207 1.1672327 0.9914742 1.2760667 #> [3,] 1.1881733 1.3145274 0.8541344 0.9549282 0.7467320 0.8678196 0.6971217 #>         [,122]    [,123]    [,124]   [,125]    [,126]    [,127]    [,128] #> [1,] 0.6900464 1.0187136 1.0526727 1.029151 1.0380140 1.3836533 0.9866581 #> [2,] 1.2820502 0.8466079 1.1757377 1.672532 0.9232779 0.8518777 0.8433361 #> [3,] 0.8428831 1.1612399 0.9807001 1.110487 1.1688268 1.5496871 1.1240590 #>         [,129]   [,130]    [,131]    [,132]    [,133]    [,134]    [,135] #> [1,] 0.9297659 1.323010 0.9170264 0.9529968 1.2821755 1.1118961 1.0968039 #> [2,] 1.1865106 1.067108 0.9285507 1.1585927 0.9189843 0.7448845 0.8779667 #> [3,] 1.2621301 1.095761 1.0713679 0.8229634 0.7836870 1.2063964 1.2231676 #>        [,136]   [,137]    [,138]   [,139]    [,140]    [,141]    [,142] #> [1,] 1.046076 1.011127 0.9354799 1.061414 0.8146346 1.7295421 0.9114148 #> [2,] 1.269587 1.007655 0.7725138 0.906234 1.0400511 1.1372907 0.7389927 #> [3,] 0.912063 1.107198 1.0962925 0.755659 1.0517178 0.7151323 0.6388669 #>         [,143]    [,144]    [,145]    [,146]    [,147]    [,148]    [,149] #> [1,] 0.8842788 0.9707608 1.3951062 0.9585915 0.9224062 0.8025234 0.7563320 #> [2,] 1.0578432 0.8908777 1.0624584 1.2041413 0.8493733 0.9522262 1.4290724 #> [3,] 0.9922582 1.0392072 0.8338839 0.8858975 1.3046343 0.6935722 0.9617663 #>        [,150]   [,151]    [,152]    [,153]    [,154]    [,155]    [,156] #> [1,] 0.966327 1.177841 0.7770749 0.6008792 1.1896347 0.6922384 0.6941304 #> [2,] 1.067612 1.038494 1.1956451 1.0154461 0.9911265 0.7943357 1.1290085 #> [3,] 1.064553 1.240490 0.9108690 1.1777992 1.0095111 0.9845471 1.0474883 #>         [,157]    [,158]    [,159]    [,160]    [,161]    [,162]    [,163] #> [1,] 0.8881599 0.8158360 0.8452886 1.3641297 0.7896325 0.8117838 0.9257073 #> [2,] 0.8867804 0.9910101 0.9971046 0.8821381 0.9925213 1.0111195 1.1230130 #> [3,] 1.2313300 1.1777693 0.9985030 1.3465463 1.7063509 1.3894949 0.9474526 #>         [,164]    [,165]   [,166]    [,167]    [,168]    [,169]    [,170] #> [1,] 1.0309879 0.8604911 1.029686 1.2424537 1.1511439 0.6116609 1.0486902 #> [2,] 0.7793076 0.8333994 1.026724 1.1212987 0.9912510 0.9002811 0.8375749 #> [3,] 1.3261308 1.2321393 0.760717 0.7898634 0.8870537 0.7381998 1.1125520 #>         [,171]    [,172]    [,173]   [,174]    [,175]    [,176]    [,177] #> [1,] 1.2099179 0.7961549 0.9798189 1.004190 0.8786820 0.9303928 1.0583811 #> [2,] 0.6187197 0.9742855 1.1179262 1.067186 1.1471804 1.0474608 0.9129929 #> [3,] 1.2550839 1.0791540 0.9607841 1.220220 0.8236641 0.6913607 1.1528964 #>         [,178]    [,179]    [,180]   [,181]    [,182]   [,183]    [,184] #> [1,] 0.9456499 1.1451238 1.1145348 0.992660 1.1241050 1.361998 1.6876693 #> [2,] 0.9429604 0.8169189 0.7070378 1.139469 1.0421773 1.185075 0.9654296 #> [3,] 0.9526244 1.4195891 0.9976958 1.185974 0.9870556 1.148465 0.9489905 #>         [,185]    [,186]    [,187]   [,188]    [,189]    [,190]    [,191] #> [1,] 1.3417840 0.7055322 1.7504946 1.054627 0.9740060 0.6758189 1.3625448 #> [2,] 1.1894527 0.9109851 0.9129435 0.810400 1.3402289 0.9343744 0.9521179 #> [3,] 0.7025259 0.8541556 1.0873645 0.996144 0.6886304 0.8997503 1.0745064 #>        [,192]    [,193]    [,194]    [,195]    [,196]   [,197]    [,198] #> [1,] 1.093885 0.6130092 0.8275386 1.1078574 1.2551602 1.050062 1.1105133 #> [2,] 1.383145 1.0751035 0.8300529 0.7428152 1.2077346 1.056220 0.7838749 #> [3,] 1.320714 1.6491383 1.0983373 0.9236362 0.8206283 1.318228 1.0460447 #>         [,199]    [,200]    [,201]    [,202]    [,203]    [,204]    [,205] #> [1,] 0.8334133 1.0562396 1.0196741 0.9190887 1.3766328 1.2168884 0.6996224 #> [2,] 0.9879871 1.2959636 0.7714558 0.9117033 0.9809084 1.3766447 0.8275479 #> [3,] 1.0430455 0.7505589 0.9993613 0.9762186 1.0741067 0.8669591 0.7010048 #>         [,206]   [,207]    [,208]    [,209]   [,210]    [,211]    [,212] #> [1,] 0.8705255 1.053051 0.9833825 1.5990651 1.406812 0.8747725 0.8135522 #> [2,] 1.1894919 1.142997 0.9993155 1.0108266 0.845065 1.4301472 0.8702840 #> [3,] 1.1223215 1.107089 0.9074243 0.8877031 1.025526 1.0209159 0.8218467 #>         [,213]    [,214]    [,215]    [,216]    [,217]    [,218]    [,219] #> [1,] 1.1347945 0.9466429 1.4131244 1.0894433 0.9633471 1.0489004 1.6629291 #> [2,] 0.7181269 0.8552686 0.9575752 0.8515964 0.8773201 1.5384883 1.1450615 #> [3,] 0.7538834 0.6083176 0.9504904 1.0717109 1.5887631 0.9311967 0.7767213 #>         [,220]    [,221]    [,222]    [,223]    [,224]    [,225]    [,226] #> [1,] 0.9932124 1.2063548 1.0885260 0.9378613 0.8274571 0.7377859 0.8126959 #> [2,] 0.7659987 0.9124086 0.8483841 1.0308415 1.0854804 1.5201169 1.0359331 #> [3,] 0.4990145 0.7122072 1.0217247 0.8292578 0.9385564 0.7753670 1.0344641 #>        [,227]    [,228]    [,229]    [,230]    [,231]    [,232]    [,233] #> [1,] 0.961348 1.3922576 1.0486643 1.2338152 0.9611957 1.5756279 0.7668476 #> [2,] 1.066402 0.9073199 0.9607515 0.8846697 0.8221991 1.0226944 0.9212462 #> [3,] 1.482241 1.0609458 0.8363096 0.7076117 0.9524197 0.7866844 0.8274983 #>         [,234]    [,235]    [,236]   [,237]    [,238]    [,239]    [,240] #> [1,] 0.9072769 1.0043313 0.9287062 1.052945 1.2320509 0.7908885 0.6503360 #> [2,] 1.0751876 0.9819175 1.0735567 1.042355 1.0357116 1.0874113 0.9713699 #> [3,] 0.9073601 0.8751356 0.5872439 1.015430 0.9649921 0.7746931 1.2023489 #>        [,241]    [,242]    [,243]   [,244]    [,245]    [,246]   [,247] #> [1,] 1.133027 1.3553376 0.9967194 1.088060 0.8325955 0.8905205 1.089903 #> [2,] 1.046225 1.0634710 0.8492867 1.127364 1.0297286 0.9016468 1.077003 #> [3,] 1.364425 0.8536891 0.7673779 0.865647 1.1447369 0.8721770 1.014689 #>         [,248]    [,249]    [,250]    [,251]   [,252]    [,253]    [,254] #> [1,] 0.5702336 0.8797932 0.8946755 0.8676393 1.144146 1.3187077 1.0247917 #> [2,] 0.6676945 1.2803226 0.8132056 0.9944821 1.234237 0.8184290 0.9602728 #> [3,] 1.1818918 0.7662090 0.9170746 1.2530669 1.054910 0.8303375 1.1376576 #>        [,255]    [,256]    [,257]    [,258]    [,259]   [,260]    [,261] #> [1,] 1.176217 1.6730155 0.8476398 0.9338046 0.6403922 1.064007 0.9059771 #> [2,] 1.272539 0.7879855 1.1327103 0.8792636 1.0771169 1.081765 1.2768536 #> [3,] 1.215067 0.8468002 0.6782375 0.7871714 0.7522092 1.001142 1.2084632 #>         [,262]    [,263]    [,264]    [,265]    [,266]    [,267]    [,268] #> [1,] 1.2080025 1.0994471 1.1520770 0.9508958 0.9988290 1.6369753 1.3787912 #> [2,] 0.9800369 0.9005779 0.8794988 1.8370290 0.8941449 1.3474943 0.8446618 #> [3,] 1.1638057 0.9285268 0.9482392 0.9104330 1.1246730 0.9669975 1.1423015 #>         [,269]    [,270]    [,271]   [,272]    [,273]    [,274]    [,275] #> [1,] 1.2818854 1.1378518 0.9803927 1.001378 0.7284804 0.9625581 0.9673914 #> [2,] 0.9845269 0.7234101 1.0451636 1.190454 0.9851585 0.8366835 0.6989172 #> [3,] 1.2208274 0.7923054 1.2518439 1.427207 1.0028921 0.7440523 1.0995052 #>         [,276]    [,277]    [,278]    [,279]    [,280]    [,281]    [,282] #> [1,] 0.9219923 0.9070917 0.9876750 0.9971361 0.9673465 0.5300726 0.9877119 #> [2,] 1.1091869 0.8716215 0.9561207 1.1789012 1.1840864 1.1520863 0.8694403 #> [3,] 0.9041345 0.6939473 1.0058685 0.8542836 1.0445794 1.0557932 0.9778804 #>        [,283]   [,284]   [,285]    [,286]    [,287] #> [1,] 1.063500 1.264019 1.120431 0.9719839 1.4045313 #> [2,] 1.032687 0.919844 1.074332 0.9110808 0.8280274 #> [3,] 1.051486 1.237496 1.103495 1.3349469 0.8747951 #>  #> , , 5 #>  #>           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #> [1,] 0.9039219 0.8426880 0.8656155 0.9760069 1.6917314 1.0562760 0.8941023 #> [2,] 1.1491845 1.6550129 1.0958419 1.0277642 1.2512019 1.2708186 0.8697593 #> [3,] 0.8423971 0.7008171 0.9719423 0.8294380 0.8694818 0.9861216 1.1821486 #>           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14] #> [1,] 0.9734949 0.9205231 0.9124068 0.7117869 0.9739334 0.9836756 0.9228586 #> [2,] 1.7360825 0.8882629 1.0947450 1.1766564 0.8275693 1.1196233 1.1644811 #> [3,] 1.1689052 1.0233070 1.0324689 0.8602414 0.8517383 0.9392272 0.8810864 #>          [,15]     [,16]     [,17]    [,18]     [,19]     [,20]     [,21] #> [1,] 0.9224720 1.1284409 0.9070604 1.059073 0.9306849 1.0515814 0.9524341 #> [2,] 0.8513421 1.1980993 1.0822190 1.047923 0.7536221 0.7262527 1.2047390 #> [3,] 0.9239003 0.8006282 1.0361849 1.379312 1.1279356 0.9251273 1.2111247 #>          [,22]    [,23]     [,24]     [,25]     [,26]     [,27]     [,28] #> [1,] 0.9731051 1.233981 1.1178197 0.9511279 0.8192475 0.6545138 1.0154414 #> [2,] 1.1334986 1.077192 0.9709310 0.9852225 0.9907406 0.9978911 0.9368190 #> [3,] 1.1923734 1.092254 0.7932687 0.8458948 1.0228364 0.8863431 0.8859428 #>         [,29]     [,30]     [,31]     [,32]    [,33]     [,34]     [,35] #> [1,] 1.483270 0.8925657 1.0569359 0.7716326 1.245406 0.9112047 1.0019566 #> [2,] 1.088854 0.9772581 1.0785623 0.8794534 1.098086 0.9691210 0.8239972 #> [3,] 1.120363 0.8326982 0.9849667 0.8707041 1.261634 1.2775813 1.1772226 #>          [,36]     [,37]     [,38]     [,39]     [,40]     [,41]     [,42] #> [1,] 1.1717340 0.8561803 0.6656641 0.9446364 0.8691774 0.8875866 0.7324398 #> [2,] 0.8122339 0.8302633 0.8695190 0.9939326 1.0029147 0.9349548 1.3879575 #> [3,] 0.9771620 0.9103352 0.8616077 1.2874778 1.0243816 1.0298811 0.9555119 #>          [,43]     [,44]     [,45]     [,46]     [,47]     [,48]    [,49] #> [1,] 0.4338327 0.8689298 1.1044995 1.2642147 1.2006036 0.9436584 0.831281 #> [2,] 0.7993070 0.8828642 0.7756029 0.9946998 0.8378484 0.9533519 1.010226 #> [3,] 0.9440589 0.8073399 0.8441040 0.9042841 1.0601094 0.8496901 1.351046 #>          [,50]    [,51]     [,52]     [,53]     [,54]     [,55]     [,56] #> [1,] 0.8958842 1.212277 0.8226233 0.9534554 0.6973461 0.8213887 1.3845646 #> [2,] 0.8091364 1.159771 1.0599032 0.7225890 1.3926678 0.7850321 0.9328583 #> [3,] 1.0909038 1.052791 1.0565347 0.9148787 1.0271069 0.9416606 1.0571366 #>          [,57]     [,58]     [,59]     [,60]     [,61]     [,62]     [,63] #> [1,] 1.0187173 0.9182125 1.0378331 0.8193255 0.7858200 0.8223623 0.6688069 #> [2,] 0.9317253 1.2721596 0.9855983 0.9140239 1.0330402 1.2756011 1.0185677 #> [3,] 0.9480443 0.9304292 1.0811173 0.9387429 0.9980498 0.9887522 1.0942754 #>          [,64]     [,65]     [,66]     [,67]     [,68]     [,69]     [,70] #> [1,] 0.7082354 1.4339460 0.9133461 1.0362753 0.8076076 0.6415719 1.2571511 #> [2,] 1.0342960 0.8548362 0.8156554 0.9123826 1.0868817 1.0487916 1.1675974 #> [3,] 0.9755512 0.9261251 0.9933826 0.8218910 0.8000157 0.8582118 0.9417317 #>          [,71]     [,72]     [,73]     [,74]    [,75]    [,76]     [,77] #> [1,] 1.1578986 1.1216702 0.8970252 0.9683025 1.033125 1.756146 0.9627648 #> [2,] 1.3129776 0.9771955 1.0162456 1.0295846 1.207160 1.037359 1.0803345 #> [3,] 0.7785541 1.0009550 1.1610888 1.1836485 1.123537 1.285034 1.1514262 #>          [,78]     [,79]     [,80]     [,81]     [,82]     [,83]     [,84] #> [1,] 0.8006686 0.8291958 0.9543969 1.0528881 0.8987225 0.5835282 0.9987098 #> [2,] 0.8743256 0.8568803 1.2015228 0.9689692 1.0751376 0.8496455 1.0715778 #> [3,] 1.1757548 0.9233704 1.0172968 0.9726138 1.1293815 0.8864666 0.7899997 #>          [,85]     [,86]     [,87]     [,88]    [,89]     [,90]     [,91] #> [1,] 0.6829788 0.9322202 1.3344719 0.9775818 1.212653 0.9170222 0.9446526 #> [2,] 0.8239977 0.8891630 1.1096494 1.0833557 1.074054 0.8931481 1.0747230 #> [3,] 0.9782563 1.0130239 0.7884076 1.0256371 1.036784 1.0180741 0.9778817 #>         [,92]     [,93]     [,94]     [,95]     [,96]     [,97]     [,98] #> [1,] 0.905976 1.3755853 0.9342113 0.6301626 0.7798851 0.6417544 0.9615998 #> [2,] 1.104822 0.8840969 1.3457384 1.5220525 1.1786316 1.0199646 0.9000286 #> [3,] 1.232415 1.0981953 0.8344868 0.9217696 0.7766545 1.0417950 1.0508267 #>          [,99]    [,100]   [,101]    [,102]    [,103]    [,104]    [,105] #> [1,] 0.6365690 1.0646780 1.122869 1.1032682 0.8024999 0.6382780 0.9350627 #> [2,] 1.2050455 0.8295298 1.215313 0.9341466 1.0201800 0.9753539 0.8952476 #> [3,] 0.9076122 1.0012471 0.994421 0.9997573 0.9781323 0.7194291 0.8267092 #>         [,106]    [,107]   [,108]    [,109]   [,110]    [,111]    [,112] #> [1,] 1.4349213 1.3976805 1.181674 1.1808910 0.797459 0.9837206 0.7342297 #> [2,] 1.0438206 0.9780252 1.441806 0.7709817 1.135979 1.0366643 0.8752546 #> [3,] 0.9779451 1.0944246 1.156804 0.9818429 1.033680 1.1076848 1.3556846 #>        [,113]    [,114]    [,115]    [,116]    [,117]    [,118]    [,119] #> [1,] 0.860765 0.6141541 0.7658984 1.0894381 0.7557255 0.7417563 1.1494677 #> [2,] 1.139611 1.2866414 0.8723775 1.0106641 1.2289798 0.9123244 0.8593431 #> [3,] 1.084903 1.1287536 1.1023686 0.8367162 1.0160907 1.1217097 1.0034396 #>         [,120]    [,121]    [,122]    [,123]    [,124]   [,125]    [,126] #> [1,] 0.8118637 0.8022857 0.8093304 1.1427428 0.8423442 1.121798 1.0237087 #> [2,] 0.9344036 1.0171593 0.9372071 0.9719848 0.8395821 1.023124 0.7910404 #> [3,] 1.1304966 1.1273305 1.1215391 1.0829327 0.8997430 1.063588 1.1231009 #>        [,127]    [,128]    [,129]    [,130]    [,131]    [,132]   [,133] #> [1,] 1.062700 1.1924050 0.6157111 1.0590453 1.0304529 0.8628793 1.186345 #> [2,] 1.027766 0.9475937 0.8794410 1.2761801 1.1080010 1.1669511 1.051787 #> [3,] 1.139019 0.9811860 0.7803760 0.8401647 0.9925663 1.1457337 1.062911 #>         [,134]    [,135]    [,136]    [,137]    [,138]    [,139]   [,140] #> [1,] 0.8631899 0.8987631 0.9835932 1.1707585 0.8762285 0.9442366 1.023577 #> [2,] 1.0394578 1.2036800 0.9818331 0.9722697 0.9933232 0.9842016 1.129259 #> [3,] 1.0477569 1.1412406 1.1125228 1.1284482 1.2893235 1.0319175 1.027538 #>         [,141]    [,142]    [,143]    [,144]    [,145]    [,146]    [,147] #> [1,] 1.2996389 1.0515331 0.8408171 0.9020182 1.1193587 1.1722270 1.1949827 #> [2,] 1.0003294 0.9571047 1.0471718 1.3132901 0.7917757 1.1142586 1.0748645 #> [3,] 0.9094615 0.9006296 1.0746535 1.1357592 1.2267820 0.7578593 0.9119112 #>         [,148]    [,149]    [,150]    [,151]    [,152]    [,153]    [,154] #> [1,] 0.7587120 0.7970686 1.0618430 1.2475253 0.8882160 0.7704131 1.1750132 #> [2,] 0.8312696 1.0300978 1.0287007 1.0223016 0.9922461 1.1084250 1.0635873 #> [3,] 0.8963421 1.0400381 0.8797643 0.8853573 0.9115281 0.8906610 0.9166207 #>        [,155]    [,156]    [,157]   [,158]    [,159]    [,160]    [,161] #> [1,] 1.152964 0.7792882 0.9561997 1.339815 0.9793149 1.2123902 0.7665893 #> [2,] 0.939529 0.9398248 0.9456167 1.133590 0.9547173 0.8914524 0.6773088 #> [3,] 1.170065 1.2141482 1.0741866 1.000427 0.9413997 1.0168023 0.9569744 #>         [,162]    [,163]   [,164]    [,165]    [,166]   [,167]    [,168] #> [1,] 0.8012891 0.7052630 1.054870 1.3101199 1.2063799 1.270875 0.9843141 #> [2,] 0.9249938 1.0320512 1.237751 1.2251525 0.6808568 1.064996 1.6583647 #> [3,] 0.8540738 0.9368376 1.001327 0.9947392 0.8453318 0.906117 1.0369239 #>         [,169]    [,170]    [,171]    [,172]    [,173]    [,174]    [,175] #> [1,] 0.9740967 0.9178894 1.0463039 1.0523788 0.9174315 1.3152965 0.7803808 #> [2,] 0.8599475 1.4484514 0.9317611 0.8640786 1.2104849 0.9539225 1.0559401 #> [3,] 0.9989760 1.0434999 0.9867287 1.0522448 1.1767999 0.9200169 0.7342356 #>         [,176]    [,177]    [,178]    [,179]    [,180]    [,181]    [,182] #> [1,] 0.8847104 0.9051590 0.8421068 1.1858545 1.1270012 0.7902071 1.1051016 #> [2,] 0.9088330 0.9726322 1.1558007 0.8834964 0.7919957 1.0529516 0.7853954 #> [3,] 0.9387002 1.2859935 1.3818700 1.1835501 1.0771360 1.0764996 1.1422759 #>        [,183]    [,184]    [,185]    [,186]    [,187]    [,188]   [,189] #> [1,] 1.236896 0.8405593 1.3120180 0.9624509 1.5254077 1.0370185 1.102689 #> [2,] 1.339985 0.9890830 0.9627984 0.9353305 1.2296632 0.9839184 1.145585 #> [3,] 1.174492 1.0803477 0.8866442 0.9650447 0.9241209 1.0077497 1.212693 #>         [,190]    [,191]    [,192]    [,193]    [,194]    [,195]    [,196] #> [1,] 1.0497967 0.9853539 0.9068964 0.7946678 0.9093574 1.1352276 0.8155914 #> [2,] 0.8598766 1.0590129 0.8802164 1.0129653 0.7998188 1.4325247 1.1527760 #> [3,] 1.0074830 0.9232867 1.2584301 1.0230287 0.9817150 0.8922601 1.0614950 #>         [,197]   [,198]    [,199]    [,200]    [,201]    [,202]    [,203] #> [1,] 1.0726555 1.568735 0.9045642 0.8565795 1.1916074 0.8451533 1.2949046 #> [2,] 1.1200959 1.216596 0.8594634 0.7650299 0.7488204 1.0049887 0.9767351 #> [3,] 0.8929233 1.053150 0.9988773 0.8443666 0.8403657 0.8954522 1.0350807 #>        [,204]   [,205]    [,206]    [,207]   [,208]    [,209]    [,210] #> [1,] 1.110749 1.013902 1.2506271 1.1525280 1.015029 0.8860609 0.9551273 #> [2,] 1.083787 1.223321 0.9747037 0.9527137 1.087026 1.0949839 1.0931080 #> [3,] 1.056840 1.007551 1.1889662 1.1127175 1.137665 0.9530063 0.9796156 #>         [,211]   [,212]   [,213]    [,214]    [,215]    [,216]    [,217] #> [1,] 0.8035764 1.421088 1.114649 1.3880708 1.1236279 0.9848786 1.3362768 #> [2,] 1.1419908 0.699643 1.043767 1.1788411 0.8317238 1.1426467 0.6922553 #> [3,] 0.9617801 1.025550 1.156080 0.9762225 0.7457992 0.7688977 0.9592156 #>         [,218]    [,219]    [,220]    [,221]    [,222]    [,223]    [,224] #> [1,] 0.9797537 1.6924210 0.9054216 0.8532092 1.0611574 1.4304881 1.3257672 #> [2,] 0.9414714 0.8155394 1.1248802 0.8548386 1.1669797 0.9898294 1.0775643 #> [3,] 0.8913420 1.0096128 0.8899089 0.8579028 0.7519407 0.9201935 0.8660163 #>        [,225]    [,226]   [,227]    [,228]    [,229]   [,230]    [,231] #> [1,] 1.041639 0.9783496 1.201222 1.1443408 0.7288749 1.566224 0.7940019 #> [2,] 1.105597 0.8552660 1.015131 1.1579206 0.8905032 1.505904 1.1617970 #> [3,] 1.000747 1.0670694 1.018139 0.9526951 0.7967613 0.835860 1.0217955 #>         [,232]    [,233]    [,234]    [,235]    [,236]    [,237]    [,238] #> [1,] 0.9502785 1.1435887 1.2047199 1.1951856 1.2507630 1.2277461 1.0306030 #> [2,] 0.7429879 0.8183712 1.1463960 0.7841036 0.9986996 0.7889711 0.8378143 #> [3,] 1.0661718 1.0428634 0.9810448 1.0079221 0.9827746 0.9426067 0.9201699 #>        [,239]    [,240]    [,241]    [,242]    [,243]    [,244]    [,245] #> [1,] 1.113834 0.9167175 1.2418085 1.2606532 1.0340735 0.9653267 1.0552317 #> [2,] 1.085202 1.0631190 0.9036616 0.8449351 1.1376732 1.3148614 0.9258383 #> [3,] 1.142828 0.9723606 0.9461326 0.7982646 0.7760841 0.9808565 0.8739307 #>         [,246]    [,247]    [,248]    [,249]    [,250]    [,251]    [,252] #> [1,] 0.7299556 1.0491207 0.9837956 0.9984192 0.9236663 0.9681975 1.2320511 #> [2,] 1.0188695 0.7167566 0.9911190 1.2495461 0.7140955 0.8158718 1.0030781 #> [3,] 1.0215947 1.0205575 1.0331681 1.0710172 1.2071720 0.9405242 0.9964381 #>        [,253]    [,254]    [,255]    [,256]    [,257]    [,258]   [,259] #> [1,] 1.237204 1.0238690 1.0517489 0.8544274 0.7666131 1.0660766 1.057668 #> [2,] 1.201118 1.2087619 0.7016071 0.9999990 0.7923912 0.9139047 1.279142 #> [3,] 1.079355 0.9913997 1.0726679 0.7889164 1.0268187 0.9044604 0.832064 #>         [,260]   [,261]   [,262]    [,263]    [,264]   [,265]    [,266] #> [1,] 0.9292559 1.263389 1.076645 0.9553221 0.7735798 1.239711 1.2472753 #> [2,] 0.8835880 0.757863 1.188964 1.6294559 0.8090851 1.098077 0.8955754 #> [3,] 0.9898140 1.016518 1.113000 1.1626407 1.0570658 1.265739 1.2952980 #>        [,267]    [,268]   [,269]    [,270]    [,271]    [,272]    [,273] #> [1,] 1.831061 1.3814289 1.374042 1.2389265 1.1554350 0.8541067 0.7340319 #> [2,] 1.051583 1.1541833 1.029748 0.8833340 0.8697242 0.8082927 1.0015037 #> [3,] 1.176319 0.9398785 1.123092 0.8046168 0.9920293 0.8438029 0.9446362 #>        [,274]    [,275]    [,276]    [,277]    [,278]    [,279]    [,280] #> [1,] 1.108425 1.0495046 1.2427834 0.6699855 0.8332523 1.3301679 0.9383973 #> [2,] 1.021585 0.9603009 1.0500129 1.0099521 0.9319170 1.3739406 0.9748272 #> [3,] 1.112056 1.0027340 0.8944054 1.0292221 0.9743470 0.9867789 0.8102723 #>        [,281]    [,282]   [,283]   [,284]   [,285]    [,286]    [,287] #> [1,] 1.073400 0.9792099 1.117562 1.134181 1.207021 0.9918356 0.9128474 #> [2,] 1.144968 0.9725045 1.067417 1.097949 1.190570 0.9721492 0.9560565 #> [3,] 1.037194 1.1092231 1.043771 1.136137 1.058165 0.9901686 1.0178019 #>  #>    ## ------------------------------------------------ ## Method `specify_posterior_bsvar_sv$get_last_draw` ## ------------------------------------------------  data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_sv$new(us_fiscal_lsuw, p = 4) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # run the burn-in burn_in        = estimate(specification, 5, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 5 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # estimate the model posterior      = estimate(burn_in, 5, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 5 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|   ## ------------------------------------------------ ## Method `specify_posterior_bsvar_sv$is_normalised` ## ------------------------------------------------  # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_sv$new(us_fiscal_lsuw, p = 4) #> The identification is set to the default option of lower-triangular structural matrix.  # estimate the model set.seed(123) posterior      = estimate(specification, 5, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 5 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # check normalisation status beforehand posterior$is_normalised() #> [1] TRUE  # normalise the posterior BB            = posterior$last_draw$starting_values$B      # get the last draw of B B_hat         = diag((-1) * sign(diag(BB))) %*% BB         # set negative diagonal elements normalise_posterior(posterior, B_hat)                      # draws in posterior are normalised  # check normalisation status afterwards posterior$is_normalised() #> [1] TRUE   ## ------------------------------------------------ ## Method `specify_posterior_bsvar_sv$set_normalised` ## ------------------------------------------------  # This is an internal function that is run while executing normalise_posterior() # Observe its working by analysing the workflow:  # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_sv$new(us_fiscal_lsuw, p = 4) #> The identification is set to the default option of lower-triangular structural matrix.  # estimate the model set.seed(123) posterior      = estimate(specification, 5, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 5 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # check normalisation status beforehand posterior$is_normalised() #> [1] TRUE  # normalise the posterior BB            = posterior$last_draw$starting_values$B      # get the last draw of B B_hat         = diag(sign(diag(BB))) %*% BB                # set positive diagonal elements normalise_posterior(posterior, B_hat)                      # draws in posterior are normalised  # check normalisation status afterwards posterior$is_normalised() #> [1] TRUE"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class Representing PriorBSVAR — specify_prior_bsvar","title":"R6 Class Representing PriorBSVAR — specify_prior_bsvar","text":"class PriorBSVAR presents prior specification homoskedastic bsvar model.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class Representing PriorBSVAR — specify_prior_bsvar","text":"NxK matrix, mean normal prior distribution parameter matrix \\(\\). A_V_inv KxK precision matrix normal prior distribution  row parameter matrix \\(\\). precision matrix equation invariant. B_V_inv NxN precision matrix generalised-normal prior distribution  structural matrix \\(B\\). precision matrix equation invariant. B_nu positive integer greater equal N, shape parameter  generalised-normal prior distribution structural matrix \\(B\\). hyper_nu_B positive scalar, shape parameter inverted-gamma 2 prior overall shrinkage parameter matrix \\(B\\). hyper_a_B positive scalar, shape parameter gamma prior second-level hierarchy overall shrinkage parameter matrix \\(B\\). hyper_s_BB positive scalar, scale parameter inverted-gamma 2 prior third-level hierarchy overall shrinkage parameter matrix \\(B\\). hyper_nu_BB positive scalar, shape parameter inverted-gamma 2 prior third-level hierarchy overall shrinkage parameter matrix \\(B\\). hyper_nu_A positive scalar, shape parameter inverted-gamma 2 prior  overall shrinkage parameter matrix \\(\\). hyper_a_A positive scalar, shape parameter gamma prior second-level hierarchy overall shrinkage parameter matrix \\(\\). hyper_s_AA positive scalar, scale parameter inverted-gamma 2 prior third-level hierarchy overall shrinkage parameter matrix \\(\\). hyper_nu_AA positive scalar, shape parameter inverted-gamma 2 prior third-level hierarchy overall shrinkage parameter matrix \\(\\).","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class Representing PriorBSVAR — specify_prior_bsvar","text":"specify_prior_bsvar$new() specify_prior_bsvar$get_prior() specify_prior_bsvar$clone()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class Representing PriorBSVAR — specify_prior_bsvar","text":"Create new prior specification PriorBSVAR.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PriorBSVAR — specify_prior_bsvar","text":"","code":"specify_prior_bsvar$new(N, p, d = 0, stationary = rep(FALSE, N))"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PriorBSVAR — specify_prior_bsvar","text":"N positive integer - number dependent variables model. p positive integer - autoregressive lag order SVAR model. d positive integer - number exogenous variables model. stationary N logical vector - element set FALSE sets  prior mean autoregressive parameters Nth equation white noise process,  otherwise random walk.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Representing PriorBSVAR — specify_prior_bsvar","text":"new prior specification PriorBSVAR.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PriorBSVAR — specify_prior_bsvar","text":"","code":"# a prior for 3-variable example with one lag and stationary data prior = specify_prior_bsvar$new(N = 3, p = 1, stationary = rep(TRUE, 3)) prior$A # show autoregressive prior mean"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar.html","id":"method-get-prior-","dir":"Reference","previous_headings":"","what":"Method get_prior()","title":"R6 Class Representing PriorBSVAR — specify_prior_bsvar","text":"Returns elements prior specification PriorBSVAR list.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PriorBSVAR — specify_prior_bsvar","text":"","code":"specify_prior_bsvar$get_prior()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PriorBSVAR — specify_prior_bsvar","text":"","code":"# a prior for 3-variable example with four lags prior = specify_prior_bsvar$new(N = 3, p = 4) prior$get_prior() # show the prior as list"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class Representing PriorBSVAR — specify_prior_bsvar","text":"objects class cloneable method.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PriorBSVAR — specify_prior_bsvar","text":"","code":"specify_prior_bsvar$clone(deep = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PriorBSVAR — specify_prior_bsvar","text":"deep Whether make deep clone.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PriorBSVAR — specify_prior_bsvar","text":"","code":"prior = specify_prior_bsvar$new(N = 3, p = 1)  # a prior for 3-variable example with one lag prior$A                                        # show autoregressive prior mean #>      [,1] [,2] [,3] [,4] #> [1,]    1    0    0    0 #> [2,]    0    1    0    0 #> [3,]    0    0    1    0   ## ------------------------------------------------ ## Method `specify_prior_bsvar$new` ## ------------------------------------------------  # a prior for 3-variable example with one lag and stationary data prior = specify_prior_bsvar$new(N = 3, p = 1, stationary = rep(TRUE, 3)) prior$A # show autoregressive prior mean #>      [,1] [,2] [,3] [,4] #> [1,]    0    0    0    0 #> [2,]    0    0    0    0 #> [3,]    0    0    0    0   ## ------------------------------------------------ ## Method `specify_prior_bsvar$get_prior` ## ------------------------------------------------  # a prior for 3-variable example with four lags prior = specify_prior_bsvar$new(N = 3, p = 4) prior$get_prior() # show the prior as list #> $A #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #> [1,]    1    0    0    0    0    0    0    0    0     0     0     0     0 #> [2,]    0    1    0    0    0    0    0    0    0     0     0     0     0 #> [3,]    0    0    1    0    0    0    0    0    0     0     0     0     0 #>  #> $A_V_inv #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,]    1    0    0    0    0    0    0    0    0     0     0     0     0 #>  [2,]    0    1    0    0    0    0    0    0    0     0     0     0     0 #>  [3,]    0    0    1    0    0    0    0    0    0     0     0     0     0 #>  [4,]    0    0    0    4    0    0    0    0    0     0     0     0     0 #>  [5,]    0    0    0    0    4    0    0    0    0     0     0     0     0 #>  [6,]    0    0    0    0    0    4    0    0    0     0     0     0     0 #>  [7,]    0    0    0    0    0    0    9    0    0     0     0     0     0 #>  [8,]    0    0    0    0    0    0    0    9    0     0     0     0     0 #>  [9,]    0    0    0    0    0    0    0    0    9     0     0     0     0 #> [10,]    0    0    0    0    0    0    0    0    0    16     0     0     0 #> [11,]    0    0    0    0    0    0    0    0    0     0    16     0     0 #> [12,]    0    0    0    0    0    0    0    0    0     0     0    16     0 #> [13,]    0    0    0    0    0    0    0    0    0     0     0     0     1 #>  #> $B_V_inv #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 #>  #> $B_nu #> [1] 3 #>  #> $hyper_nu_B #> [1] 10 #>  #> $hyper_a_B #> [1] 10 #>  #> $hyper_s_BB #> [1] 100 #>  #> $hyper_nu_BB #> [1] 1 #>  #> $hyper_nu_A #> [1] 10 #>  #> $hyper_a_A #> [1] 10 #>  #> $hyper_s_AA #> [1] 10 #>  #> $hyper_nu_AA #> [1] 10 #>"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_mix.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class Representing PriorBSVARMIX — specify_prior_bsvar_mix","title":"R6 Class Representing PriorBSVARMIX — specify_prior_bsvar_mix","text":"class PriorBSVARMIX presents prior specification bsvar model zero-mean mixture normals model structural shocks.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_mix.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"R6 Class Representing PriorBSVARMIX — specify_prior_bsvar_mix","text":"bsvars::PriorBSVAR -> bsvars::PriorBSVARMSH -> PriorBSVARMIX","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_mix.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class Representing PriorBSVARMIX — specify_prior_bsvar_mix","text":"NxK matrix, mean normal prior distribution parameter matrix \\(\\). A_V_inv KxK precision matrix normal prior distribution row parameter matrix \\(\\). precision matrix equation invariant. B_V_inv NxN precision matrix generalised-normal prior distribution structural matrix \\(B\\). precision matrix equation invariant. B_nu positive integer greater equal N, shape parameter generalised-normal prior distribution structural matrix \\(B\\). hyper_nu_B positive scalar, shape parameter inverted-gamma 2 prior overall shrinkage parameter matrix \\(B\\). hyper_a_B positive scalar, shape parameter gamma prior second-level hierarchy overall shrinkage parameter matrix \\(B\\). hyper_s_BB positive scalar, scale parameter inverted-gamma 2 prior third-level hierarchy overall shrinkage parameter matrix \\(B\\). hyper_nu_BB positive scalar, shape parameter inverted-gamma 2 prior third-level hierarchy overall shrinkage parameter matrix \\(B\\). hyper_nu_A positive scalar, shape parameter inverted-gamma 2 prior  overall shrinkage parameter matrix \\(\\). hyper_a_A positive scalar, shape parameter gamma prior second-level hierarchy overall shrinkage parameter matrix \\(\\). hyper_s_AA positive scalar, scale parameter inverted-gamma 2 prior third-level hierarchy overall shrinkage parameter matrix \\(\\). hyper_nu_AA positive scalar, shape parameter inverted-gamma 2 prior third-level hierarchy overall shrinkage parameter matrix \\(\\). sigma_nu positive scalar,  shape parameter inverted-gamma 2 mixture component-dependent variances structural shocks, \\(\\sigma^2_{n.s_t}\\). sigma_s positive scalar,  scale parameter inverted-gamma 2 mixture component-dependent variances structural shocks, \\(\\sigma^2_{n.s_t}\\). PR_TR MxM matrix, matrix hyper-parameters row-specific Dirichlet prior distribution state probabilities Markov process \\(s_t\\). rows must identical.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_mix.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"R6 Class Representing PriorBSVARMIX — specify_prior_bsvar_mix","text":"bsvars::PriorBSVARMSH$get_prior() bsvars::PriorBSVARMSH$initialize()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_mix.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class Representing PriorBSVARMIX — specify_prior_bsvar_mix","text":"specify_prior_bsvar_mix$clone()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_mix.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class Representing PriorBSVARMIX — specify_prior_bsvar_mix","text":"objects class cloneable method.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_mix.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PriorBSVARMIX — specify_prior_bsvar_mix","text":"","code":"specify_prior_bsvar_mix$clone(deep = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_mix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PriorBSVARMIX — specify_prior_bsvar_mix","text":"deep Whether make deep clone.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_mix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PriorBSVARMIX — specify_prior_bsvar_mix","text":"","code":"prior = specify_prior_bsvar_mix$new(N = 3, p = 1, M = 2)  # specify the prior prior$A                                        # show autoregressive prior mean #>      [,1] [,2] [,3] [,4] #> [1,]    1    0    0    0 #> [2,]    0    1    0    0 #> [3,]    0    0    1    0"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_msh.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class Representing PriorBSVARMSH — specify_prior_bsvar_msh","title":"R6 Class Representing PriorBSVARMSH — specify_prior_bsvar_msh","text":"class PriorBSVARMSH presents prior specification bsvar model Markov Switching Heteroskedasticity.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_msh.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"R6 Class Representing PriorBSVARMSH — specify_prior_bsvar_msh","text":"bsvars::PriorBSVAR -> PriorBSVARMSH","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_msh.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class Representing PriorBSVARMSH — specify_prior_bsvar_msh","text":"NxK matrix, mean normal prior distribution parameter matrix \\(\\). A_V_inv KxK precision matrix normal prior distribution row parameter matrix \\(\\). precision matrix equation invariant. B_V_inv NxN precision matrix generalised-normal prior distribution structural matrix \\(B\\). precision matrix equation invariant. B_nu positive integer greater equal N, shape parameter generalised-normal prior distribution structural matrix \\(B\\). hyper_nu_B positive scalar, shape parameter inverted-gamma 2 prior overall shrinkage parameter matrix \\(B\\). hyper_a_B positive scalar, shape parameter gamma prior second-level hierarchy overall shrinkage parameter matrix \\(B\\). hyper_s_BB positive scalar, scale parameter inverted-gamma 2 prior third-level hierarchy overall shrinkage parameter matrix \\(B\\). hyper_nu_BB positive scalar, shape parameter inverted-gamma 2 prior third-level hierarchy overall shrinkage parameter matrix \\(B\\). hyper_nu_A positive scalar, shape parameter inverted-gamma 2 prior  overall shrinkage parameter matrix \\(\\). hyper_a_A positive scalar, shape parameter gamma prior second-level hierarchy overall shrinkage parameter matrix \\(\\). hyper_s_AA positive scalar, scale parameter inverted-gamma 2 prior third-level hierarchy overall shrinkage parameter matrix \\(\\). hyper_nu_AA positive scalar, shape parameter inverted-gamma 2 prior third-level hierarchy overall shrinkage parameter matrix \\(\\). sigma_nu positive scalar,  shape parameter inverted-gamma 2 MS state-dependent variances structural shocks, \\(\\sigma^2_{n.s_t}\\). sigma_s positive scalar,  scale parameter inverted-gamma 2 MS state-dependent variances structural shocks, \\(\\sigma^2_{n.s_t}\\). PR_TR MxM matrix, matrix hyper-parameters row-specific Dirichlet prior distribution transition probabilities matrix \\(P\\) Markov process \\(s_t\\).","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_msh.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class Representing PriorBSVARMSH — specify_prior_bsvar_msh","text":"specify_prior_bsvar_msh$new() specify_prior_bsvar_msh$get_prior() specify_prior_bsvar_msh$clone()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_msh.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class Representing PriorBSVARMSH — specify_prior_bsvar_msh","text":"Create new prior specification PriorBSVARMSH.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_msh.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PriorBSVARMSH — specify_prior_bsvar_msh","text":"","code":"specify_prior_bsvar_msh$new(N, p, d = 0, M, stationary = rep(FALSE, N))"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_msh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PriorBSVARMSH — specify_prior_bsvar_msh","text":"N positive integer - number dependent variables model. p positive integer - autoregressive lag order SVAR model. d positive integer - number exogenous variables model. M integer greater 1 - number Markov process' heteroskedastic regimes. stationary N logical vector - element set FALSE sets prior mean autoregressive parameters Nth equation white noise process, otherwise random walk.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_msh.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Representing PriorBSVARMSH — specify_prior_bsvar_msh","text":"new prior specification PriorBSVARMSH.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_msh.html","id":"method-get-prior-","dir":"Reference","previous_headings":"","what":"Method get_prior()","title":"R6 Class Representing PriorBSVARMSH — specify_prior_bsvar_msh","text":"Returns elements prior specification PriorBSVARMSH list.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_msh.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PriorBSVARMSH — specify_prior_bsvar_msh","text":"","code":"specify_prior_bsvar_msh$get_prior()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_msh.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PriorBSVARMSH — specify_prior_bsvar_msh","text":"","code":"# a prior for 3-variable example with four lags and two regimes prior = specify_prior_bsvar_msh$new(N = 3, p = 4, M = 2) prior$get_prior() # show the prior as list"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_msh.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class Representing PriorBSVARMSH — specify_prior_bsvar_msh","text":"objects class cloneable method.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_msh.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PriorBSVARMSH — specify_prior_bsvar_msh","text":"","code":"specify_prior_bsvar_msh$clone(deep = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_msh.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PriorBSVARMSH — specify_prior_bsvar_msh","text":"deep Whether make deep clone.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_msh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PriorBSVARMSH — specify_prior_bsvar_msh","text":"","code":"prior = specify_prior_bsvar_msh$new(N = 3, p = 1, M = 2)  # specify the prior prior$A                                        # show autoregressive prior mean #>      [,1] [,2] [,3] [,4] #> [1,]    1    0    0    0 #> [2,]    0    1    0    0 #> [3,]    0    0    1    0   ## ------------------------------------------------ ## Method `specify_prior_bsvar_msh$get_prior` ## ------------------------------------------------  # a prior for 3-variable example with four lags and two regimes prior = specify_prior_bsvar_msh$new(N = 3, p = 4, M = 2) prior$get_prior() # show the prior as list #> $A #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #> [1,]    1    0    0    0    0    0    0    0    0     0     0     0     0 #> [2,]    0    1    0    0    0    0    0    0    0     0     0     0     0 #> [3,]    0    0    1    0    0    0    0    0    0     0     0     0     0 #>  #> $A_V_inv #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,]    1    0    0    0    0    0    0    0    0     0     0     0     0 #>  [2,]    0    1    0    0    0    0    0    0    0     0     0     0     0 #>  [3,]    0    0    1    0    0    0    0    0    0     0     0     0     0 #>  [4,]    0    0    0    4    0    0    0    0    0     0     0     0     0 #>  [5,]    0    0    0    0    4    0    0    0    0     0     0     0     0 #>  [6,]    0    0    0    0    0    4    0    0    0     0     0     0     0 #>  [7,]    0    0    0    0    0    0    9    0    0     0     0     0     0 #>  [8,]    0    0    0    0    0    0    0    9    0     0     0     0     0 #>  [9,]    0    0    0    0    0    0    0    0    9     0     0     0     0 #> [10,]    0    0    0    0    0    0    0    0    0    16     0     0     0 #> [11,]    0    0    0    0    0    0    0    0    0     0    16     0     0 #> [12,]    0    0    0    0    0    0    0    0    0     0     0    16     0 #> [13,]    0    0    0    0    0    0    0    0    0     0     0     0     1 #>  #> $B_V_inv #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 #>  #> $B_nu #> [1] 3 #>  #> $hyper_nu_B #> [1] 10 #>  #> $hyper_a_B #> [1] 10 #>  #> $hyper_s_BB #> [1] 100 #>  #> $hyper_nu_BB #> [1] 1 #>  #> $hyper_nu_A #> [1] 10 #>  #> $hyper_a_A #> [1] 10 #>  #> $hyper_s_AA #> [1] 10 #>  #> $hyper_nu_AA #> [1] 10 #>  #> $sv_a_ #> NULL #>  #> $sv_s_ #> NULL #>  #> $sigma_nu #> [1] 3 #>  #> $sigma_s #> [1] 1 #>  #> $PR_TR #>      [,1] [,2] #> [1,]    1    1 #> [2,]    1    1 #>"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_sv.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class Representing PriorBSVARSV — specify_prior_bsvar_sv","title":"R6 Class Representing PriorBSVARSV — specify_prior_bsvar_sv","text":"class PriorBSVARSV presents prior specification bsvar model Stochastic Volatility heteroskedasticity.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_sv.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"R6 Class Representing PriorBSVARSV — specify_prior_bsvar_sv","text":"bsvars::PriorBSVAR -> PriorBSVARSV","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_sv.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class Representing PriorBSVARSV — specify_prior_bsvar_sv","text":"NxK matrix, mean normal prior distribution parameter matrix \\(\\). A_V_inv KxK precision matrix normal prior distribution row parameter matrix \\(\\). precision matrix equation invariant. B_V_inv NxN precision matrix generalised-normal prior distribution structural matrix \\(B\\). precision matrix equation invariant. B_nu positive integer greater equal N, shape parameter generalised-normal prior distribution structural matrix \\(B\\). hyper_nu_B positive scalar, shape parameter inverted-gamma 2 prior overall shrinkage parameter matrix \\(B\\). hyper_a_B positive scalar, shape parameter gamma prior second-level hierarchy overall shrinkage parameter matrix \\(B\\). hyper_s_BB positive scalar, scale parameter inverted-gamma 2 prior third-level hierarchy overall shrinkage parameter matrix \\(B\\). hyper_nu_BB positive scalar, shape parameter inverted-gamma 2 prior third-level hierarchy overall shrinkage parameter matrix \\(B\\). hyper_nu_A positive scalar, shape parameter inverted-gamma 2 prior  overall shrinkage parameter matrix \\(\\). hyper_a_A positive scalar, shape parameter gamma prior second-level hierarchy overall shrinkage parameter matrix \\(\\). hyper_s_AA positive scalar, scale parameter inverted-gamma 2 prior third-level hierarchy overall shrinkage parameter matrix \\(\\). hyper_nu_AA positive scalar, shape parameter inverted-gamma 2 prior third-level hierarchy overall shrinkage parameter matrix \\(\\). sv_a_ positive scalar, shape parameter gamma prior hierarchical prior \\(\\sigma^2_{\\omega}\\). sv_s_ positive scalar, scale parameter gamma prior hierarchical prior \\(\\sigma^2_{\\omega}\\).","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_sv.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class Representing PriorBSVARSV — specify_prior_bsvar_sv","text":"specify_prior_bsvar_sv$new() specify_prior_bsvar_sv$get_prior() specify_prior_bsvar_sv$clone()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_sv.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class Representing PriorBSVARSV — specify_prior_bsvar_sv","text":"Create new prior specification PriorBSVARSV.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_sv.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PriorBSVARSV — specify_prior_bsvar_sv","text":"","code":"specify_prior_bsvar_sv$new(N, p, d = 0, stationary = rep(FALSE, N))"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_sv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PriorBSVARSV — specify_prior_bsvar_sv","text":"N positive integer - number dependent variables model. p positive integer - autoregressive lag order SVAR model. d positive integer - number exogenous variables model. stationary N logical vector - element set FALSE sets prior mean autoregressive parameters Nth equation white noise process, otherwise random walk.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_sv.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Representing PriorBSVARSV — specify_prior_bsvar_sv","text":"new prior specification PriorBSVARSV.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_sv.html","id":"method-get-prior-","dir":"Reference","previous_headings":"","what":"Method get_prior()","title":"R6 Class Representing PriorBSVARSV — specify_prior_bsvar_sv","text":"Returns elements prior specification PriorBSVARSV list.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_sv.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PriorBSVARSV — specify_prior_bsvar_sv","text":"","code":"specify_prior_bsvar_sv$get_prior()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_sv.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PriorBSVARSV — specify_prior_bsvar_sv","text":"","code":"# a prior for 3-variable example with four lags prior = specify_prior_bsvar_sv$new(N = 3, p = 4) prior$get_prior() # show the prior as list"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_sv.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class Representing PriorBSVARSV — specify_prior_bsvar_sv","text":"objects class cloneable method.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_sv.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing PriorBSVARSV — specify_prior_bsvar_sv","text":"","code":"specify_prior_bsvar_sv$clone(deep = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_sv.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing PriorBSVARSV — specify_prior_bsvar_sv","text":"deep Whether make deep clone.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_prior_bsvar_sv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing PriorBSVARSV — specify_prior_bsvar_sv","text":"","code":"prior = specify_prior_bsvar_sv$new(N = 3, p = 1) # a prior for 3-variable example with one lag prior$A                                          # show autoregressive prior mean #>      [,1] [,2] [,3] [,4] #> [1,]    1    0    0    0 #> [2,]    0    1    0    0 #> [3,]    0    0    1    0   ## ------------------------------------------------ ## Method `specify_prior_bsvar_sv$get_prior` ## ------------------------------------------------  # a prior for 3-variable example with four lags prior = specify_prior_bsvar_sv$new(N = 3, p = 4) prior$get_prior() # show the prior as list #> $A #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #> [1,]    1    0    0    0    0    0    0    0    0     0     0     0     0 #> [2,]    0    1    0    0    0    0    0    0    0     0     0     0     0 #> [3,]    0    0    1    0    0    0    0    0    0     0     0     0     0 #>  #> $A_V_inv #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,]    1    0    0    0    0    0    0    0    0     0     0     0     0 #>  [2,]    0    1    0    0    0    0    0    0    0     0     0     0     0 #>  [3,]    0    0    1    0    0    0    0    0    0     0     0     0     0 #>  [4,]    0    0    0    4    0    0    0    0    0     0     0     0     0 #>  [5,]    0    0    0    0    4    0    0    0    0     0     0     0     0 #>  [6,]    0    0    0    0    0    4    0    0    0     0     0     0     0 #>  [7,]    0    0    0    0    0    0    9    0    0     0     0     0     0 #>  [8,]    0    0    0    0    0    0    0    9    0     0     0     0     0 #>  [9,]    0    0    0    0    0    0    0    0    9     0     0     0     0 #> [10,]    0    0    0    0    0    0    0    0    0    16     0     0     0 #> [11,]    0    0    0    0    0    0    0    0    0     0    16     0     0 #> [12,]    0    0    0    0    0    0    0    0    0     0     0    16     0 #> [13,]    0    0    0    0    0    0    0    0    0     0     0     0     1 #>  #> $B_V_inv #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 #>  #> $B_nu #> [1] 3 #>  #> $hyper_nu_B #> [1] 10 #>  #> $hyper_a_B #> [1] 10 #>  #> $hyper_s_BB #> [1] 100 #>  #> $hyper_nu_BB #> [1] 1 #>  #> $hyper_nu_A #> [1] 10 #>  #> $hyper_a_A #> [1] 10 #>  #> $hyper_s_AA #> [1] 10 #>  #> $hyper_nu_AA #> [1] 10 #>  #> $sv_a_ #> [1] 1 #>  #> $sv_s_ #> [1] 0.1 #>"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"class StartingValuesBSVAR presents starting values homoskedastic bsvar model.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"NxK matrix starting values parameter \\(\\). B NxN matrix starting values parameter \\(B\\). hyper (2*N+1)x2 matrix starting values shrinkage hyper-parameters  hierarchical prior distribution.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"specify_starting_values_bsvar$new() specify_starting_values_bsvar$get_starting_values() specify_starting_values_bsvar$set_starting_values() specify_starting_values_bsvar$clone()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"Create new starting values StartingValuesBSVAR.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"","code":"specify_starting_values_bsvar$new(N, p, d = 0)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"N positive integer - number dependent variables model. p positive integer - autoregressive lag order SVAR model. d positive integer - number exogenous variables model.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"Starting values StartingValuesBSVAR.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"","code":"# starting values for a homoskedastic bsvar with 4 lags for a 3-variable system sv = specify_starting_values_bsvar$new(N = 3, p = 4)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"method-get-starting-values-","dir":"Reference","previous_headings":"","what":"Method get_starting_values()","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"Returns elements starting values StartingValuesBSVAR list.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"","code":"specify_starting_values_bsvar$get_starting_values()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"","code":"# starting values for a homoskedastic bsvar with 1 lag for a 3-variable system sv = specify_starting_values_bsvar$new(N = 3, p = 1) sv$get_starting_values()   # show starting values as list"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"method-set-starting-values-","dir":"Reference","previous_headings":"","what":"Method set_starting_values()","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"Returns elements starting values StartingValuesBSVAR list.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"","code":"specify_starting_values_bsvar$set_starting_values(last_draw)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"last_draw list containing last draw elements B - NxN matrix,  - NxK matrix, hyper - vector 5 positive real numbers.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"object class StartingValuesBSVAR including last draw current MCMC  starting value passed continuation MCMC estimation using estimate().","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"","code":"# starting values for a homoskedastic bsvar with 1 lag for a 3-variable system sv = specify_starting_values_bsvar$new(N = 3, p = 1)  # Modify the starting values by: sv_list = sv$get_starting_values()   # getting them as list sv_list$A <- matrix(rnorm(12), 3, 4) # modifying the entry sv$set_starting_values(sv_list)      # providing to the class object"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"objects class cloneable method.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"","code":"specify_starting_values_bsvar$clone(deep = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"deep Whether make deep clone.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing StartingValuesBSVAR — specify_starting_values_bsvar","text":"","code":"# starting values for a homoskedastic bsvar for a 3-variable system sv = specify_starting_values_bsvar$new(N = 3, p = 1)   ## ------------------------------------------------ ## Method `specify_starting_values_bsvar$new` ## ------------------------------------------------  # starting values for a homoskedastic bsvar with 4 lags for a 3-variable system sv = specify_starting_values_bsvar$new(N = 3, p = 4)   ## ------------------------------------------------ ## Method `specify_starting_values_bsvar$get_starting_values` ## ------------------------------------------------  # starting values for a homoskedastic bsvar with 1 lag for a 3-variable system sv = specify_starting_values_bsvar$new(N = 3, p = 1) sv$get_starting_values()   # show starting values as list #> $B #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 #>  #> $A #>           [,1]      [,2]      [,3] [,4] #> [1,] 0.3764381 0.0000000 0.0000000    0 #> [2,] 0.0000000 0.7078746 0.0000000    0 #> [3,] 0.0000000 0.0000000 0.6236649    0 #>  #> $hyper #>      [,1] [,2] #> [1,]   10   10 #> [2,]   10   10 #> [3,]   10   10 #> [4,]   10   10 #> [5,]   10   10 #> [6,]   10   10 #> [7,]   10   10 #>    ## ------------------------------------------------ ## Method `specify_starting_values_bsvar$set_starting_values` ## ------------------------------------------------  # starting values for a homoskedastic bsvar with 1 lag for a 3-variable system sv = specify_starting_values_bsvar$new(N = 3, p = 1)  # Modify the starting values by: sv_list = sv$get_starting_values()   # getting them as list sv_list$A <- matrix(rnorm(12), 3, 4) # modifying the entry sv$set_starting_values(sv_list)      # providing to the class object"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_mix.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class Representing StartingValuesBSVARMIX — specify_starting_values_bsvar_mix","title":"R6 Class Representing StartingValuesBSVARMIX — specify_starting_values_bsvar_mix","text":"class StartingValuesBSVARMIX presents starting values bsvar model zero-mean mixture normals model structural shocks.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_mix.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"R6 Class Representing StartingValuesBSVARMIX — specify_starting_values_bsvar_mix","text":"bsvars::StartingValuesBSVAR -> bsvars::StartingValuesBSVARMSH -> StartingValuesBSVARMIX","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_mix.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class Representing StartingValuesBSVARMIX — specify_starting_values_bsvar_mix","text":"NxK matrix starting values parameter \\(\\). B NxN matrix starting values parameter \\(B\\). hyper (2*N+1)x2 matrix starting values shrinkage hyper-parameters  hierarchical prior distribution. sigma2 NxM matrix starting values MS state-specific variances structural shocks. elements sum value M rows. PR_TR MxM matrix starting values probability matrix Markov process. rows must identical elements row sum 1 rows. xi MxT matrix starting values Markov process indicator. columns chosen column identity matrix order M. pi_0 M-vector starting values mixture components state probabilities. elements sum 1.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_mix.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"R6 Class Representing StartingValuesBSVARMIX — specify_starting_values_bsvar_mix","text":"bsvars::StartingValuesBSVARMSH$get_starting_values() bsvars::StartingValuesBSVARMSH$set_starting_values()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_mix.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class Representing StartingValuesBSVARMIX — specify_starting_values_bsvar_mix","text":"specify_starting_values_bsvar_mix$new() specify_starting_values_bsvar_mix$clone()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_mix.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class Representing StartingValuesBSVARMIX — specify_starting_values_bsvar_mix","text":"Create new starting values StartingValuesBSVARMIX.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_mix.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing StartingValuesBSVARMIX — specify_starting_values_bsvar_mix","text":"","code":"specify_starting_values_bsvar_mix$new(N, p, M, T, d = 0, finiteM = TRUE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_mix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing StartingValuesBSVARMIX — specify_starting_values_bsvar_mix","text":"N positive integer - number dependent variables model. p positive integer - autoregressive lag order SVAR model. M integer greater 1 - number components mixture normals. T positive integer - time series dimension dependent variable matrix \\(Y\\). d positive integer - number exogenous variables model. finiteM logical value - true finite mixture model estimated. Otherwise, sparse mixture model estimated M=20 number visited states estimated.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_mix.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Representing StartingValuesBSVARMIX — specify_starting_values_bsvar_mix","text":"Starting values StartingValuesBSVARMIX.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_mix.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class Representing StartingValuesBSVARMIX — specify_starting_values_bsvar_mix","text":"objects class cloneable method.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_mix.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing StartingValuesBSVARMIX — specify_starting_values_bsvar_mix","text":"","code":"specify_starting_values_bsvar_mix$clone(deep = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_mix.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing StartingValuesBSVARMIX — specify_starting_values_bsvar_mix","text":"deep Whether make deep clone.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_mix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing StartingValuesBSVARMIX — specify_starting_values_bsvar_mix","text":"","code":"# starting values for a bsvar model for a 3-variable system sv = specify_starting_values_bsvar_mix$new(N = 3, p = 1, M = 2, T = 100)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"class StartingValuesBSVARMSH presents starting values bsvar model Markov Switching Heteroskedasticity.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"bsvars::StartingValuesBSVAR -> StartingValuesBSVARMSH","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"NxK matrix starting values parameter \\(\\). B NxN matrix starting values parameter \\(B\\). hyper (2*N+1)x2 matrix starting values shrinkage hyper-parameters  hierarchical prior distribution. sigma2 NxM matrix starting values MS state-specific variances structural shocks. elements sum value M rows. PR_TR MxM matrix starting values transition probability matrix Markov process. elements sum 1 rows. xi MxT matrix starting values Markov process indicator. columns chosen column identity matrix order M. pi_0 M-vector starting values state probability time t=0. elements sum 1.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"specify_starting_values_bsvar_msh$new() specify_starting_values_bsvar_msh$get_starting_values() specify_starting_values_bsvar_msh$set_starting_values() specify_starting_values_bsvar_msh$clone()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"Create new starting values StartingValuesBSVAR-MS.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"","code":"specify_starting_values_bsvar_msh$new(N, p, M, T, d = 0, finiteM = TRUE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"N positive integer - number dependent variables model. p positive integer - autoregressive lag order SVAR model. M integer greater 1 - number Markov process' heteroskedastic regimes. T positive integer - time series dimension dependent variable matrix \\(Y\\). d positive integer - number exogenous variables model. finiteM logical value - true stationary Markov switching model estimated. Otherwise, sparse Markov switching model estimated M=20 number visited states estimated.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"Starting values StartingValuesBSVAR-MS.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"method-get-starting-values-","dir":"Reference","previous_headings":"","what":"Method get_starting_values()","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"Returns elements starting values StartingValuesBSVAR-MS list.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"","code":"specify_starting_values_bsvar_msh$get_starting_values()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"","code":"# starting values for a homoskedastic bsvar with 1 lag for a 3-variable system sv = specify_starting_values_bsvar_msh$new(N = 3, p = 1, M = 2, T = 100) sv$get_starting_values()   # show starting values as list"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"method-set-starting-values-","dir":"Reference","previous_headings":"","what":"Method set_starting_values()","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"Returns elements starting values StartingValuesBSVARMSH list.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"","code":"specify_starting_values_bsvar_msh$set_starting_values(last_draw)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"last_draw list containing last draw.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"object class StartingValuesBSVAR-MS including last draw current MCMC starting value passed continuation MCMC estimation using estimate().","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"","code":"# starting values for a bsvar model with 1 lag for a 3-variable system sv = specify_starting_values_bsvar_msh$new(N = 3, p = 1, M = 2, T = 100)  # Modify the starting values by: sv_list = sv$get_starting_values()   # getting them as list sv_list$A <- matrix(rnorm(12), 3, 4) # modifying the entry sv$set_starting_values(sv_list)      # providing to the class object"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"objects class cloneable method.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"","code":"specify_starting_values_bsvar_msh$clone(deep = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"deep Whether make deep clone.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_msh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing StartingValuesBSVARMSH — specify_starting_values_bsvar_msh","text":"","code":"# starting values for a bsvar model for a 3-variable system sv = specify_starting_values_bsvar_msh$new(N = 3, p = 1, M = 2, T = 100)   ## ------------------------------------------------ ## Method `specify_starting_values_bsvar_msh$get_starting_values` ## ------------------------------------------------  # starting values for a homoskedastic bsvar with 1 lag for a 3-variable system sv = specify_starting_values_bsvar_msh$new(N = 3, p = 1, M = 2, T = 100) sv$get_starting_values()   # show starting values as list #> $B #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 #>  #> $A #>           [,1]      [,2]      [,3] [,4] #> [1,] 0.3178951 0.0000000 0.0000000    0 #> [2,] 0.0000000 0.1912299 0.0000000    0 #> [3,] 0.0000000 0.0000000 0.8167954    0 #>  #> $hyper #>      [,1] [,2] #> [1,]   10   10 #> [2,]   10   10 #> [3,]   10   10 #> [4,]   10   10 #> [5,]   10   10 #> [6,]   10   10 #> [7,]   10   10 #>  #> $sigma2 #>      [,1] [,2] #> [1,]    1    1 #> [2,]    1    1 #> [3,]    1    1 #>  #> $PR_TR #>      [,1] [,2] #> [1,]    1    0 #> [2,]    0    1 #>  #> $xi #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    1    1    0    0    0    1    1    1    1     1     1     1     1     0 #> [2,]    0    0    1    1    1    0    0    0    0     0     0     0     0     1 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     0     0     1     1     1     0     0     1     1     1     0     1 #> [2,]     1     1     0     0     0     1     1     0     0     0     1     0 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     0     1     1     1     1     1     0     0     1     0     1     1 #> [2,]     1     0     0     0     0     0     1     1     0     1     0     0 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     0     1     1     0     1     0     0     0     1     0     1 #> [2,]     0     1     0     0     1     0     1     1     1     0     1     0 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     1     0     0     0     1     1     0     1     0     0 #> [2,]     0     0     0     1     1     1     0     0     1     0     1     1 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     1     1     1     1     1     1     1     1     1     0     1     1 #> [2,]     0     0     0     0     0     0     0     0     0     1     0     0 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     0     1     0     1     0     0     0     1     1     1     0     0 #> [2,]     1     0     1     0     1     1     1     0     0     0     1     1 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     1     1     0     1     0     0     0     1     1     0     0     1 #> [2,]     0     0     1     0     1     1     1     0     0     1     1     0 #>      [,99] [,100] #> [1,]     0      1 #> [2,]     1      0 #>  #> $pi_0 #> [1] 0.5 0.5 #>    ## ------------------------------------------------ ## Method `specify_starting_values_bsvar_msh$set_starting_values` ## ------------------------------------------------  # starting values for a bsvar model with 1 lag for a 3-variable system sv = specify_starting_values_bsvar_msh$new(N = 3, p = 1, M = 2, T = 100)  # Modify the starting values by: sv_list = sv$get_starting_values()   # getting them as list sv_list$A <- matrix(rnorm(12), 3, 4) # modifying the entry sv$set_starting_values(sv_list)      # providing to the class object"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"class StartingValuesBSVARSV presents starting values bsvar model Stochastic Volatility heteroskedasticity.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"bsvars::StartingValuesBSVAR -> StartingValuesBSVARSV","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"NxK matrix starting values parameter \\(\\). B NxN matrix starting values parameter \\(B\\). hyper (2*N+1)x2 matrix starting values shrinkage hyper-parameters  hierarchical prior distribution. h NxT matrix starting values log-volatility processes. rho N-vector values SV autoregressive parameters. omega N-vector values SV process conditional standard deviations. sigma2v N-vector values SV process conditional variances. S NxT integer matrix auxiliary mixture component indicators. sigma2_omega N-vector variances zero-mean normal prior \\(\\omega_n\\). s_ positive scalar scale gamma prior hierarchical prior \\(\\sigma^2_{\\omega}\\).","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"specify_starting_values_bsvar_sv$new() specify_starting_values_bsvar_sv$get_starting_values() specify_starting_values_bsvar_sv$set_starting_values() specify_starting_values_bsvar_sv$clone()","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"Create new starting values StartingValuesBSVARSV.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"","code":"specify_starting_values_bsvar_sv$new(N, p, T, d = 0)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"N positive integer - number dependent variables model. p positive integer - autoregressive lag order SVAR model. T positive integer - time series dimension dependent variable matrix \\(Y\\). d positive integer - number exogenous variables model.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"Starting values StartingValuesBSVARSV.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"method-get-starting-values-","dir":"Reference","previous_headings":"","what":"Method get_starting_values()","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"Returns elements starting values StartingValuesBSVARSV list.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"","code":"specify_starting_values_bsvar_sv$get_starting_values()"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"","code":"# starting values for a bsvar model with 1 lag for a 3-variable system sv = specify_starting_values_bsvar_sv$new(N = 3, p = 1, T = 100) sv$get_starting_values()   # show starting values as list"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"method-set-starting-values-","dir":"Reference","previous_headings":"","what":"Method set_starting_values()","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"Returns elements starting values StartingValuesBSVAR_SV list.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"","code":"specify_starting_values_bsvar_sv$set_starting_values(last_draw)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"last_draw list containing last draw current MCMC run.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"object class StartingValuesBSVAR including last draw current MCMC starting value passed continuation MCMC estimation using estimate().","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"","code":"# starting values for a bsvar model with 1 lag for a 3-variable system sv = specify_starting_values_bsvar_sv$new(N = 3, p = 1, T = 100)  # Modify the starting values by: sv_list = sv$get_starting_values()   # getting them as list sv_list$A <- matrix(rnorm(12), 3, 4) # modifying the entry sv$set_starting_values(sv_list)      # providing to the class object"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"objects class cloneable method.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"","code":"specify_starting_values_bsvar_sv$clone(deep = FALSE)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"deep Whether make deep clone.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/specify_starting_values_bsvar_sv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Representing StartingValuesBSVARSV — specify_starting_values_bsvar_sv","text":"","code":"# starting values for a bsvar model for a 3-variable system sv = specify_starting_values_bsvar_sv$new(N = 3, p = 1, T = 100)   ## ------------------------------------------------ ## Method `specify_starting_values_bsvar_sv$get_starting_values` ## ------------------------------------------------  # starting values for a bsvar model with 1 lag for a 3-variable system sv = specify_starting_values_bsvar_sv$new(N = 3, p = 1, T = 100) sv$get_starting_values()   # show starting values as list #> $B #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 #>  #> $A #>           [,1]     [,2]      [,3] [,4] #> [1,] 0.8195874 0.000000 0.0000000    0 #> [2,] 0.0000000 0.838934 0.0000000    0 #> [3,] 0.0000000 0.000000 0.6614567    0 #>  #> $hyper #>      [,1] [,2] #> [1,]   10   10 #> [2,]   10   10 #> [3,]   10   10 #> [4,]   10   10 #> [5,]   10   10 #> [6,]   10   10 #> [7,]   10   10 #>  #> $h #>              [,1]          [,2]        [,3]          [,4]        [,5] #> [1,]  0.002892684 -0.0066503956 0.023472610 -0.0008564098  0.02294692 #> [2,] -0.014000414  0.0206964950 0.005276874 -0.0104697188 -0.01243421 #> [3,] -0.010005079  0.0007686637 0.010831313 -0.0219979144  0.00448910 #>               [,6]         [,7]         [,8]        [,9]        [,10] #> [1,]  0.0034175051 -0.019770407 -0.014487939  0.01415546  0.005206391 #> [2,] -0.0003479079 -0.018635596 -0.005412691  0.01055314 -0.005163229 #> [3,]  0.0002031979  0.007868902 -0.011678937 -0.01810771 -0.012603056 #>              [,11]        [,12]         [,13]        [,14]        [,15] #> [1,] -0.0118619305 -0.014490776 -0.0009950115 -0.005498428  0.018415400 #> [2,]  0.0005092216  0.009492028  0.0033009700 -0.013711448 -0.007397629 #> [3,] -0.0001899684  0.003524517 -0.0058586497  0.018672075 -0.002041490 #>              [,16]        [,17]        [,18]         [,19]        [,20] #> [1,]  0.0077343996 -0.011602619 -0.015296441 -8.566801e-04  0.016620279 #> [2,] -0.0094291751 -0.007736345  0.006035037 -2.109427e-02 -0.007779255 #> [3,]  0.0007727256 -0.002482895 -0.007229202 -3.442054e-05 -0.005609626 #>             [,21]        [,22]        [,23]        [,24]        [,25] #> [1,] 0.0072882717  0.019448991 -0.001147881 -0.014765568 -0.008191522 #> [2,] 0.0034452320  0.006130512  0.002965959  0.004433787  0.004244879 #> [3,] 0.0008613476 -0.011503086 -0.021317598  0.019373108 -0.007515692 #>            [,26]        [,27]       [,28]        [,29]        [,30] #> [1,]  0.01345399 -0.003703493 0.015498470  0.005504130 0.0056199112 #> [2,] -0.01049233  0.004316769 0.004950426 -0.001323354 0.0005183343 #> [3,] -0.01072184  0.002425148 0.001519710 -0.008983532 0.0103707779 #>             [,31]        [,32]        [,33]        [,34]         [,35] #> [1,] -0.002004253 -0.003571469 -0.011404944  0.007839053 -0.0102443597 #> [2,] -0.012491425  0.016133462  0.014615545  0.010826572  0.0001774842 #> [3,] -0.001766993 -0.008056760  0.007249635 -0.004183932 -0.0124799044 #>             [,36]        [,37]        [,38]        [,39]         [,40] #> [1,] -0.007596698  0.019528974 -0.008462598 -0.008742995 -0.0163840005 #> [2,] -0.010854343  0.008204009  0.011723720  0.002997884  0.0141513335 #> [3,]  0.011806421 -0.017796154 -0.011190180  0.016873105 -0.0004486277 #>            [,41]        [,42]        [,43]        [,44]         [,45] #> [1,] 0.001522720 -0.006416999 -0.012948028 -0.004416664  0.0089418255 #> [2,] 0.013460729 -0.006256493  0.001165598 -0.002702095  0.0007518431 #> [3,] 0.007179945  0.019325835  0.007939269 -0.007082525 -0.0024136694 #>             [,46]        [,47]        [,48]        [,49]        [,50] #> [1,] -0.006337868 -0.024407952 -0.002480796 -0.003455589  0.003170458 #> [2,]  0.012813005  0.012543617 -0.012943742 -0.001349969  0.012253705 #> [3,]  0.004655235 -0.002168511  0.003917171  0.027782465 -0.009872308 #>            [,51]       [,52]         [,53]        [,54]       [,55] #> [1,]  0.01584053 0.020080294 -0.0119840598  0.004908116 0.003473919 #> [2,]  0.01064358 0.001090211 -0.0067913230 -0.001058265 0.009445992 #> [3,] -0.01342152 0.024185548 -0.0009760366 -0.004693809 0.007009762 #>             [,56]        [,57]        [,58]        [,59]         [,60] #> [1,] -0.009546196  0.006851575 -0.007663905  0.005908858  7.660756e-03 #> [2,]  0.024170002 -0.006642139  0.005645501  0.004329836 -6.033867e-03 #> [3,] -0.008156940  0.003922843  0.005756519 -0.006844268 -9.132664e-05 #>              [,61]         [,62]         [,63]        [,64]        [,65] #> [1,] -0.0081085072 -0.0052174628 -0.0107633440 -0.011570848  0.005307774 #> [2,]  0.0046264583  0.0162679631 -0.0003678514 -0.009043224 -0.008342080 #> [3,] -0.0001231334  0.0003310597 -0.0020293850 -0.013368437  0.012514524 #>             [,66]         [,67]         [,68]        [,69]        [,70] #> [1,] -0.005081511 -8.022286e-03  0.0049012345  0.009659107  0.007442360 #> [2,] -0.016267669 -3.071481e-05  0.0065182813  0.003387262  0.005610271 #> [3,] -0.002508645 -8.570073e-03 -0.0002110585 -0.011484059 -0.002656399 #>            [,71]         [,72]       [,73]         [,74]       [,75] #> [1,]  0.01913766 -0.0053245799 0.015556613  0.0256368173 0.004953532 #> [2,]  0.01301153  0.0003343207 0.002125053 -0.0004687165 0.009444145 #> [3,] -0.00468614  0.0036406176 0.009599211  0.0034885288 0.002091967 #>             [,76]       [,77]        [,78]        [,79]        [,80] #> [1,] -0.005618786 0.015630283 -0.009640757 -0.012254589 -0.005031852 #> [2,] -0.004641479 0.005916959  0.002005476  0.001930923 -0.002908034 #> [3,]  0.002844882 0.010561673  0.021159774  0.006567318 -0.001027471 #>             [,81]        [,82]        [,83]        [,84]        [,85] #> [1,]  0.010178795 -0.002832577  0.012486657  0.003823288  0.004691074 #> [2,] -0.029103874  0.003204985 -0.008662130 -0.007664949  0.002222823 #> [3,]  0.007224732 -0.009460056  0.002580754  0.002342339 -0.007091838 #>             [,86]        [,87]        [,88]       [,89]        [,90] #> [1,] 2.183688e-03 -0.003588334 -0.008593909 0.001184933  0.002947461 #> [2,] 5.586041e-05 -0.006863298  0.011072139 0.002834074 -0.002044877 #> [3,] 1.137266e-02 -0.000891026 -0.008844732 0.017385125 -0.004937481 #>             [,91]        [,92]        [,93]        [,94]        [,95] #> [1,] -0.015048756 -0.005989608  0.002057164 -0.019459363  0.019208340 #> [2,] -0.030293635  0.006129819 -0.006589204 -0.011046178 -0.006881739 #> [3,]  0.002981075  0.005147029 -0.002045268 -0.004682995  0.017902570 #>             [,96]         [,97]        [,98]        [,99]       [,100] #> [1,] -0.005900618 -0.0001283389  0.006409469 -0.001917983  0.004300490 #> [2,]  0.007987593  0.0035848780  0.001933188  0.011981072  0.006952633 #> [3,] -0.009429599  0.0081971111 -0.025786166 -0.014244992 -0.009552971 #>  #> $rho #> [1] 0.5 0.5 0.5 #>  #> $omega #> [1] 0.1 0.1 0.1 #>  #> $sigma2v #> [1] 0.01 0.01 0.01 #>  #> $S #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    1    1    1    1    1    1    1    1    1     1     1     1     1     1 #> [2,]    1    1    1    1    1    1    1    1    1     1     1     1     1     1 #> [3,]    1    1    1    1    1    1    1    1    1     1     1     1     1     1 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [3,]     1     1     1     1     1     1     1     1     1     1     1     1 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [3,]     1     1     1     1     1     1     1     1     1     1     1     1 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [3,]     1     1     1     1     1     1     1     1     1     1     1     1 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [3,]     1     1     1     1     1     1     1     1     1     1     1     1 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [3,]     1     1     1     1     1     1     1     1     1     1     1     1 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [3,]     1     1     1     1     1     1     1     1     1     1     1     1 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [2,]     1     1     1     1     1     1     1     1     1     1     1     1 #> [3,]     1     1     1     1     1     1     1     1     1     1     1     1 #>      [,99] [,100] #> [1,]     1      1 #> [2,]     1      1 #> [3,]     1      1 #>  #> $sigma2_omega #> [1] 1 1 1 #>  #> $s_ #> [1] 0.05 0.05 0.05 #>    ## ------------------------------------------------ ## Method `specify_starting_values_bsvar_sv$set_starting_values` ## ------------------------------------------------  # starting values for a bsvar model with 1 lag for a 3-variable system sv = specify_starting_values_bsvar_sv$new(N = 3, p = 1, T = 100)  # Modify the starting values by: sv_list = sv$get_starting_values()   # getting them as list sv_list$A <- matrix(rnorm(12), 3, 4) # modifying the entry sv$set_starting_values(sv_list)      # providing to the class object"},{"path":"https://bsvars.github.io/bsvars/dev/reference/us_fiscal_ex.html","id":null,"dir":"Reference","previous_headings":"","what":"A 3-variable system of exogenous variables for the US fiscal model for \nthe period 1950 Q1 -- 2021 Q4 — us_fiscal_ex","title":"A 3-variable system of exogenous variables for the US fiscal model for \nthe period 1950 Q1 -- 2021 Q4 — us_fiscal_ex","text":"Exogenous variables used identify US fiscal policy shocks.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/us_fiscal_ex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A 3-variable system of exogenous variables for the US fiscal model for \nthe period 1950 Q1 -- 2021 Q4 — us_fiscal_ex","text":"","code":"data(us_fiscal_ex)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/us_fiscal_ex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A 3-variable system of exogenous variables for the US fiscal model for \nthe period 1950 Q1 -- 2021 Q4 — us_fiscal_ex","text":"matrix ts object time series 288 observations 3 variables: t time trend t^2 quadratic trend 1975Q2 dummy variable taking value 1 quarter 2 1975 zero elsewhere series described Mertens & Ravn (2014). data used  Lütkepohl, Shang, Uzeda, Woźniak (2022).","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/us_fiscal_ex.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A 3-variable system of exogenous variables for the US fiscal model for \nthe period 1950 Q1 -- 2021 Q4 — us_fiscal_ex","text":"Mertens, K., Ravn, M.O. (2014) Reconciliation SVAR Narrative Estimates Tax Multipliers, Journal Monetary Economics, 68(S), S1–S19. DOI: doi:10.1016/j.jmoneco.2013.04.004 . Lütkepohl, H., Shang, F., Uzeda, L., Woźniak, T. (2022) Partial Identification Heteroskedastic Structural VARs: Theory Bayesian Inference.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/us_fiscal_ex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A 3-variable system of exogenous variables for the US fiscal model for \nthe period 1950 Q1 -- 2021 Q4 — us_fiscal_ex","text":"","code":"data(us_fiscal_ex)   # upload the data plot(us_fiscal_ex)   # plot the data"},{"path":"https://bsvars.github.io/bsvars/dev/reference/us_fiscal_lsuw.html","id":null,"dir":"Reference","previous_headings":"","what":"A 3-variable US fiscal system for the period 1950 Q1 -- 2021 Q4 — us_fiscal_lsuw","title":"A 3-variable US fiscal system for the period 1950 Q1 -- 2021 Q4 — us_fiscal_lsuw","text":"system used identify US fiscal policy shocks.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/us_fiscal_lsuw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A 3-variable US fiscal system for the period 1950 Q1 -- 2021 Q4 — us_fiscal_lsuw","text":"","code":"data(us_fiscal_lsuw)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/us_fiscal_lsuw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A 3-variable US fiscal system for the period 1950 Q1 -- 2021 Q4 — us_fiscal_lsuw","text":"matrix ts object time series 288 observations 3 variables: ttr quarterly US total tax revenue expressed log, real, per person terms gs quarterly US total government spending expressed log, real, per person terms gdp quarterly US gross domestic product expressed log, real, per person terms series described Mertens & Ravn (2014) footnote 3 main body page S3 paper.  Differences respect Mertens & Ravn's data : sample period quarter 1 1950 quarter 4 2021, population variable Francis & Ramey (2009) FRED (definition), original monthly population data transformed quarterly taking monthly averages.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/us_fiscal_lsuw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A 3-variable US fiscal system for the period 1950 Q1 -- 2021 Q4 — us_fiscal_lsuw","text":"U.S. Bureau Economic Analysis, National Income Product Accounts, https://www.bea.gov/products/national-income--product-accounts FRED Economic Database, Federal Reserve Bank St. Louis, https://fred.stlouisfed.org/","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/us_fiscal_lsuw.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A 3-variable US fiscal system for the period 1950 Q1 -- 2021 Q4 — us_fiscal_lsuw","text":"Francis, N., Ramey, V.. (2009) Measures per capita Hours Implications Technology‐hours Debate. Journal Money, Credit Banking, 41(6), 1071-1097, DOI: doi:10.1111/j.1538-4616.2009.00247.x . Mertens, K., Ravn, M.O. (2014) Reconciliation SVAR Narrative Estimates Tax Multipliers, Journal Monetary Economics, 68(S), S1–S19. DOI: doi:10.1016/j.jmoneco.2013.04.004 . Lütkepohl, H., Shang, F., Uzeda, L., Woźniak, T. (2022) Partial Identification Heteroskedastic Structural VARs: Theory Bayesian Inference.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/us_fiscal_lsuw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A 3-variable US fiscal system for the period 1950 Q1 -- 2021 Q4 — us_fiscal_lsuw","text":"","code":"data(us_fiscal_lsuw)   # upload the data plot(us_fiscal_lsuw)   # plot the data"},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVAR","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVAR","text":"Displays information model homoskedastic.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVAR","text":"","code":"# S3 method for PosteriorBSVAR verify_volatility(posterior)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVAR","text":"posterior posterior element list estimation outcome","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVAR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVAR","text":"Nothing. Just displays message: model homoskedastic.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVAR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVAR","text":"Lütkepohl, H., Woźniak, T., (2020) Bayesian Inference Structural Vector Autoregressions Identified Markov-Switching Heteroskedasticity. Journal Economic Dynamics Control 113, 103862, doi:10.1016/j.jedc.2020.103862 . Lütkepohl, H., Shang, F., Uzeda, L., Woźniak, T., (2023) Partial Identification Heteroskedastic Structural VARs: Theory Bayesian Inference.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVAR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVAR","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVAR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVAR","text":"","code":"# simple workflow ############################################################ # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar$new(us_fiscal_lsuw, p = 1) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # estimate the model posterior      = estimate(specification, 5, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 5 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # verify heteroskedasticity sddr           = verify_volatility(posterior) #> The model is homoskedastic.  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar$new(p = 1) |>   estimate(S = 5, thin = 1) |>    verify_volatility() -> sddr #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR model                 | #> **************************************************| #>  Progress of the MCMC simulation for 5 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************| #> The model is homoskedastic."},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARMIX.html","id":null,"dir":"Reference","previous_headings":"","what":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARMIX","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARMIX","text":"Computes logarithm Bayes factor homoskedasticity hypothesis  structural shocks via Savage-Dickey Density Ration (SDDR). hypothesis homoskedasticity represented restriction: $$H_0: \\sigma^2_{n.1} = ... = \\sigma^2_{n.M} = 1$$ logarithm Bayes factor hypothesis can computed using SDDR  difference logarithms marginal posterior distribution ordinate restriction  less marginal prior distribution ordinate point: $$log p(\\omega_n = 0 | data) - log p(\\omega_n = 0)$$ Therefore, negative value difference evidence  homoskedasticity structural shock. estimation elements difference requires  numerical integration.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARMIX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARMIX","text":"","code":"# S3 method for PosteriorBSVARMIX verify_volatility(posterior)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARMIX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARMIX","text":"posterior posterior element list estimation outcome","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARMIX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARMIX","text":"object class SDDR list three components: logSDDR N-vector values logarithm Bayes factors  homoskedasticity hypothesis shocks log_SDDR_se N-vector estimation standard errors logarithm  Bayes factors reported output element logSDDR computed based 30 random  sub-samples log-ordinates marginal posterior prior distributions. components list three components computation Bayes factor log_denominator N-vector values logarithm Bayes factor denominators log_numerator N-vector values logarithm Bayes factor numerators log_numerator_s NxS matrix log-full conditional posterior density ordinates computed estimate numerator se_components Nx30 matrix containing log-Bayes factors basis standard errors computed","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARMIX.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARMIX","text":"Lütkepohl, H., Woźniak, T., (2020) Bayesian Inference Structural Vector Autoregressions Identified Markov-Switching Heteroskedasticity. Journal Economic Dynamics Control 113, 103862, doi:10.1016/j.jedc.2020.103862 . Lütkepohl, H., Shang, F., Uzeda, L., Woźniak, T., (2023) Partial Identification Heteroskedastic Structural VARs: Theory Bayesian Inference.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARMIX.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARMIX","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARMIX.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARMIX","text":"","code":"# simple workflow ############################################################ # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_mix$new(us_fiscal_lsuw, p = 1, M = 2) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # estimate the model posterior      = estimate(specification, 60, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 60 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # verify heteroskedasticity sddr           = verify_volatility(posterior)  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar_mix$new(p = 1, M = 2) |>   estimate(S = 60, thin = 1) |>    verify_volatility() -> sddr #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-finiteMIX model             | #> **************************************************| #>  Progress of the MCMC simulation for 60 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARMSH.html","id":null,"dir":"Reference","previous_headings":"","what":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARMSH","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARMSH","text":"Computes logarithm Bayes factor homoskedasticity hypothesis  structural shocks via Savage-Dickey Density Ration (SDDR). hypothesis homoskedasticity represented restriction: $$H_0: \\sigma^2_{n.1} = ... = \\sigma^2_{n.M} = 1$$ logarithm Bayes factor hypothesis can computed using SDDR  difference logarithms marginal posterior distribution ordinate restriction  less marginal prior distribution ordinate point: $$log p(\\omega_n = 0 | data) - log p(\\omega_n = 0)$$ Therefore, negative value difference evidence  homoskedasticity structural shock. estimation elements difference requires  numerical integration.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARMSH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARMSH","text":"","code":"# S3 method for PosteriorBSVARMSH verify_volatility(posterior)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARMSH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARMSH","text":"posterior posterior element list estimation outcome","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARMSH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARMSH","text":"object class SDDR list three components: logSDDR N-vector values logarithm Bayes factors  homoskedasticity hypothesis shocks log_SDDR_se N-vector estimation standard errors logarithm  Bayes factors reported output element logSDDR computed based 30 random  sub-samples log-ordinates marginal posterior prior distributions. components list three components computation Bayes factor log_denominator N-vector values logarithm Bayes factor denominators log_numerator N-vector values logarithm Bayes factor numerators log_numerator_s NxS matrix log-full conditional posterior density ordinates computed estimate numerator se_components Nx30 matrix containing log-Bayes factors basis standard errors computed","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARMSH.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARMSH","text":"Lütkepohl, H., Woźniak, T., (2020) Bayesian Inference Structural Vector Autoregressions Identified Markov-Switching Heteroskedasticity. Journal Economic Dynamics Control 113, 103862, doi:10.1016/j.jedc.2020.103862 . Lütkepohl, H., Shang, F., Uzeda, L., Woźniak, T., (2023) Partial Identification Heteroskedastic Structural VARs: Theory Bayesian Inference.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARMSH.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARMSH","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARMSH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARMSH","text":"","code":"# simple workflow ############################################################ # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_msh$new(us_fiscal_lsuw, p = 1, M = 2) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # estimate the model posterior      = estimate(specification, 60, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 60 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # verify heteroskedasticity sddr           = verify_volatility(posterior)  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar_msh$new(p = 1, M = 2) |>   estimate(S = 60, thin = 1) |>    verify_volatility() -> sddr #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-stationaryMSH model             | #> **************************************************| #>  Progress of the MCMC simulation for 60 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARSV.html","id":null,"dir":"Reference","previous_headings":"","what":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARSV","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARSV","text":"Computes logarithm Bayes factor homoskedasticity hypothesis  structural shocks via Savage-Dickey Density Ration (SDDR). hypothesis homoskedasticity represented restriction: $$H_0: \\omega_n = 0$$ logarithm Bayes factor hypothesis can computed using SDDR  difference logarithms marginal posterior distribution ordinate restriction  less marginal prior distribution ordinate point: $$log p(\\omega_n = 0 | data) - log p(\\omega_n = 0)$$ Therefore, negative value difference evidence  homoskedasticity structural shock. estimation elements difference requires  numerical integration.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARSV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARSV","text":"","code":"# S3 method for PosteriorBSVARSV verify_volatility(posterior)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARSV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARSV","text":"posterior posterior element list estimation outcome","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARSV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARSV","text":"object class SDDR list three components: logSDDR N-vector values logarithm Bayes factors  homoskedasticity hypothesis shocks log_SDDR_se N-vector estimation standard errors logarithm  Bayes factors reported output element logSDDR computed based 30 random  sub-samples log-ordinates marginal posterior prior distributions. components list three components computation Bayes factor log_denominator N-vector values logarithm Bayes factor denominators log_numerator N-vector values logarithm Bayes factor numerators log_numerator_s NxS matrix log-full conditional posterior density ordinates computed estimate numerator se_components Nx30 matrix containing log-Bayes factors basis standard errors computed","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARSV.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARSV","text":"Lütkepohl, H., Woźniak, T., (2020) Bayesian Inference Structural Vector Autoregressions Identified Markov-Switching Heteroskedasticity. Journal Economic Dynamics Control 113, 103862, doi:10.1016/j.jedc.2020.103862 . Lütkepohl, H., Shang, F., Uzeda, L., Woźniak, T., (2023) Partial Identification Heteroskedastic Structural VARs: Theory Bayesian Inference.","code":""},{"path":[]},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARSV.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARSV","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.PosteriorBSVARSV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility.PosteriorBSVARSV","text":"","code":"# simple workflow ############################################################ # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_sv$new(us_fiscal_lsuw, p = 1) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # estimate the model posterior      = estimate(specification, 60, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 60 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # verify heteroskedasticity sddr           = verify_volatility(posterior)  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar_sv$new(p = 1) |>   estimate(S = 60, thin = 1) |>    verify_volatility() -> sddr #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 60 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.html","id":null,"dir":"Reference","previous_headings":"","what":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility","text":"Computes logarithm Bayes factor homoskedasticity hypothesis  structural shocks via Savage-Dickey Density Ration (SDDR). hypothesis homoskedasticity, \\(H_0\\), represented model-specific restrictions. Consult help files individual classes models details. logarithm Bayes factor hypothesis can computed using SDDR  difference logarithms marginal posterior distribution ordinate restriction  less marginal prior distribution ordinate point: $$log p(H_0 | data) - log p(H_0)$$ Therefore, negative value difference evidence  homoskedasticity structural shock. estimation elements difference requires  numerical integration.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility","text":"","code":"verify_volatility(posterior)"},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility","text":"posterior posterior element list estimation outcome","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility","text":"object class SDDR list three components: logSDDR N-vector values logarithm Bayes factors  homoskedasticity hypothesis shocks log_SDDR_se N-vector estimation standard errors logarithm  Bayes factors reported output element logSDDR computed based 30 random  sub-samples log-ordinates marginal posterior prior distributions. components list three components computation Bayes factor log_denominator N-vector values logarithm Bayes factor denominators log_numerator N-vector values logarithm Bayes factor numerators log_numerator_s NxS matrix log-full conditional posterior density ordinates computed estimate numerator se_components Nx30 matrix containing log-Bayes factors basis standard errors computed","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility","text":"Lütkepohl, H., Woźniak, T., (2020) Bayesian Inference Structural Vector Autoregressions Identified Markov-Switching Heteroskedasticity. Journal Economic Dynamics Control 113, 103862, doi:10.1016/j.jedc.2020.103862 . Lütkepohl, H., Shang, F., Uzeda, L., Woźniak, T., (2023) Partial Identification Heteroskedastic Structural VARs: Theory Bayesian Inference.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility","text":"Tomasz Woźniak wozniak.tom@pm.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/reference/verify_volatility.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verifies heteroskedasticity of structural shocks equation by equation — verify_volatility","text":"","code":"# simple workflow ############################################################ # upload data data(us_fiscal_lsuw)  # specify the model and set seed specification  = specify_bsvar_sv$new(us_fiscal_lsuw, p = 1) #> The identification is set to the default option of lower-triangular structural matrix. set.seed(123)  # estimate the model posterior      = estimate(specification, 60, thin = 1) #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 60 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|  # verify heteroskedasticity sddr           = verify_volatility(posterior)  # workflow with the pipe |> ############################################################ set.seed(123) us_fiscal_lsuw |>   specify_bsvar_sv$new(p = 1) |>   estimate(S = 60, thin = 1) |>    verify_volatility() -> sddr #> The identification is set to the default option of lower-triangular structural matrix. #> **************************************************| #> bsvars: Bayesian Structural Vector Autoregressions| #> **************************************************| #>  Gibbs sampler for the SVAR-SV model              | #>    Non-centred SV model is estimated             | #> **************************************************| #>  Progress of the MCMC simulation for 60 draws #>     Every draw is saved via MCMC thinning #>  Press Esc to interrupt the computations #> **************************************************|"},{"path":"https://bsvars.github.io/bsvars/dev/news/index.html","id":"bsvars-2009000","dir":"Changelog","previous_headings":"","what":"bsvars 2.0.0.9000","title":"bsvars 2.0.0.9000","text":"Included Bayesian procedure verifying structural shocks’ heteroskedastiicty equation--equation using Savage-Dickey density ratios #26 Included Bayesian procedure verifying joint hypotheses autoregressive parameters using Savage-Dickey density ratios #26 Included possibility specifying exogenous variables deterministic terms included deterministic terms used Lütkepohl, Shang, Uzeda, Woźniak (2023) #45 package intensive development, functionalities provided soon! see package ROADMAP towards next version 2.1.0. question, suggestion, wanna get touch? Join package DISCUSSION forum.","code":""},{"path":"https://bsvars.github.io/bsvars/dev/news/index.html","id":"bsvars-200","dir":"Changelog","previous_headings":"","what":"bsvars 2.0.0","title":"bsvars 2.0.0","text":"CRAN release: 2023-10-24 Published 23 October 2023 Included Imports package stochvol Posterior computations : impulse responses forecast error variance decomposition #3, structural shocks historical decompositions #14 fitted values #17 conditional standard deviations #16 regime probabilities MS MIX models #18 Implemented faster samplers based random number generators armadillo via RcppArmadillo #7 estimate_bsvar* functions now also normalise output w.r.t. structural matrix positive elements main diagonal #9 Changed order arguments estimate_bsvar* functions posterior first facilitate workflows using pipe |> #10 Include citation info package #12 Corrected sampler AR parameter SV equations #19 Added samplers joint predictive densities #15 new centred Stochastic Volatility heteroskedastic process implemented #22 Introduced three-level local-global equation-specific prior shrinkage hierarchy parameters matrices   #34 Improved checks correct specification arguments S thin estimate method enquired @mfaragd #33 Improved ordinal numerals presentation thinning progress bar #27","code":""},{"path":"https://bsvars.github.io/bsvars/dev/news/index.html","id":"bsvars-100","dir":"Changelog","previous_headings":"","what":"bsvars 1.0.0","title":"bsvars 1.0.0","text":"CRAN release: 2022-09-01 Published 1 September 2022 repo transferred GitLab GitHub repository made public version premiered CRAN","code":""},{"path":"https://bsvars.github.io/bsvars/dev/news/index.html","id":"bsvars-0029000","dir":"Changelog","previous_headings":"","what":"bsvars 0.0.2.9000","title":"bsvars 0.0.2.9000","text":"Added new progress bar estimate_bsvar* functions Developed R6 classes model specification posterior outcomes; model specification includes sub-classes priors, identifying restrictions, data matrices, starting values Added complete package documentation Written help files Developed tests MCMC reproducibility Included sample data","code":""},{"path":"https://bsvars.github.io/bsvars/dev/news/index.html","id":"bsvars-0019000","dir":"Changelog","previous_headings":"","what":"bsvars 0.0.1.9000","title":"bsvars 0.0.1.9000","text":"cpp scripts imported, compile, give Errors, Warnings, Notes R wrappers functions fully operating full documentation describing package functions’ functionality [sic!]","code":""}]
